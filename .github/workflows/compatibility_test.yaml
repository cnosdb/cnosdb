name: Compatibility testing

on:
  workflow_dispatch: {}

jobs:
  linux:
    name: linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          TARGETPLATFORM="linux/amd64" bash ./.github/tools/install_dependencies.sh
      - name: Run and test
        shell: bash
        run: |
          set -e
          cargo clippy --workspace  --all-targets --features coordinator_e2e_test --features meta_e2e_test -- -D warnings
          cargo run --profile test-ci --package main --bin cnosdb -- run --config config/resource/config_8902.toml -M singleton &
          until curl -s -G http://127.0.0.1:8902/api/v1/ping
          do
            sleep 5
          done
          echo 'cnosdb successfully started'
          cargo run --package sqllogicaltests
  macos:
    name: macos
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          TARGETPLATFORM="darwin" bash ./.github/tools/install_dependencies.sh
      - name: Run and test
        shell: bash
        run: |
          set -e
          cargo clippy --workspace  --all-targets --features coordinator_e2e_test --features meta_e2e_test -- -D warnings
          cargo run --profile test-ci --package main --bin cnosdb -- run --config config/resource/config_8902.toml -M singleton &
          until curl -s -G http://127.0.0.1:8902/api/v1/ping
          do
            sleep 5
          done
          echo 'cnosdb successfully started'
          cargo run --package sqllogicaltests
  windows:
    name: windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        shell: bash
        run: |
          TARGETPLATFORM="windows/amd64" bash ./.github/tools/install_dependencies.sh
      - name: Run and test
        run: |
          cargo clippy --workspace  --all-targets --features coordinator_e2e_test --features meta_e2e_test -- -D warnings
          cargo build --profile test-ci --package main --bin cnosdb
          Copy-Item -Path .\target\test-ci\cnosdb.exe -Destination .\cnosdb.exe
          cargo clean
          .\cnosdb.exe run --config config/resource/config_8902.toml -M singleton &
          while ($true) {
            try {
              Invoke-WebRequest -Method GET -Uri http://127.0.0.1:8902/api/v1/ping
              break
            }
            catch {
              Start-Sleep -Seconds 5
            }
          }
          echo 'cnosdb successfully started'
          cargo run --package sqllogicaltests
