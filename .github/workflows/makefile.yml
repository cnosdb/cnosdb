name: Makefile CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  SCCACHE_GHA_ENABLED: "true"
  RUSTC_WRAPPER: "sccache"

jobs:
  check:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Prepare Rust Builder
        uses: ./.github/actions/setup-builder
      - name: Setup Rust toolchain
        shell: bash
        run: |
          echo "Installing nightly"
          rustup toolchain install nightly
          rustup default nightly
      - name: Install clippy rustfmt
        run: |
          rustup component add clippy
          rustup component add rustfmt --toolchain nightly
      - name: Run
        run: |
          make clippy_check
          make fmt_check
      - name: clean
        run: make clean
      - name: trace
        run: make build_trace

  unit-test:
    name: "Unit Test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Prepare Rust Builder
        uses: ./.github/actions/setup-builder
      - name: test
        run: make test

  integration-test-1meta1data:
    name: "Integration Test: 1meta-1data"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Prepare Rust Builder
        uses: ./.github/actions/setup-builder
      - name: Test
        shell: bash
        run: |
          bash ./query_server/sqllogicaltests/script/start_and_test.sh --1meta1data

  integration-test-singleton:
    name: "Integration Test: singleton"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Prepare Rust Builder
        uses: ./.github/actions/setup-builder
      - name: Test
        shell: bash
        run: |
          bash ./query_server/sqllogicaltests/script/start_and_test.sh --singleton

  integration-test-3meta:
    name: "Integration Test: meta-cluster"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Prepare Rust Builder
        uses: ./.github/actions/setup-builder
      - name: Test
        shell: bash
        run: |
          cd meta && cargo test --features=meta_e2e_test tests -- --test-threads  1

  e2e_test:
    name: "E2E Test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Prepare Rust Builder
        uses: ./.github/actions/setup-builder
      - name: Test
        shell: bash
        run: |
          cargo build --package client --bin cnosdb-cli
          # cargo test --package e2e_test --lib -- independent:: --test-threads=1 --nocapture
          cargo test --package e2e_test --lib --features startup_in_serial -- independent:: --test-threads=4 --nocapture
  windows-compatibility:
    name: "Windows Compatibility"
    runs-on: windows-latest
    env:
      SCCACHE_GHA_ENABLED: ""
      RUSTC_WRAPPER: ""
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        shell: bash
        run: |
          TARGETPLATFORM="windows/amd64" bash ./.github/tools/install_dependencies.sh
      - name: Run and test
        run: |
          cargo clippy --workspace  --all-targets --features coordinator_e2e_test --features meta_e2e_test -- -D warnings
          cargo build --profile test-ci --package main --bin cnosdb
          Copy-Item -Path .\target\test-ci\cnosdb.exe -Destination .\cnosdb.exe
          cargo clean
          .\cnosdb.exe run --config config/resource/config_8902.toml -M singleton &
          while ($true) {
            try {
              Invoke-WebRequest -Method GET -Uri http://127.0.0.1:8902/api/v1/ping
              break
            }
            catch {
              Start-Sleep -Seconds 5
            }
          }
          echo 'cnosdb successfully started'

  #integration-test-3m2d:
  #  name: "Integration Test 3meta 2data cluster"
  #  runs-on: ubuntu-4c16g
  #  steps:
  #    - uses: actions/checkout@v3
  #      with:
  #        submodules: true
  #    - name: Prepare Rust Builder
  #      uses: ./.github/actions/setup-builder
  #    - name: Test
  #      shell: bash
  #      run: |
  #        bash ./query_server/sqllogicaltests/script/start_and_test_all.sh 3meta2data

  #integration-test-Separation-of-storage-and-computing:
  #  name: "Integration Test Separation of storage and computing"
  #  runs-on: ubuntu-4c16g
  #  steps:
  #    - uses: actions/checkout@v3
  #      with:
  #        submodules: true
  #    - name: Prepare Rust Builder
  #      uses: ./.github/actions/setup-builder
  #    - name: Test
  #      shell: bash
  #      run: |
  #        bash ./query_server/sqllogicaltests/script/start_and_test_all.sh 1meta_2data_1query_1tskv

  #integration-test-coordinator:
  #  name: "Integration Test coordinator"
  #  runs-on: ubuntu-4c16g
  #  strategy:
  #    matrix:
  #      rust: [stable]
  #  steps:
  #    - uses: actions/checkout@v3
  #      with:
  #        submodules: true
  #    - name: Setup timezone
  #      uses: zcong1993/setup-timezone@master
  #      with:
  #        timezone: Asia/Shanghai
  #    - name: Prepare Rust Builder
  #      uses: ./.github/actions/setup-builder
  #      with:
  #        rust-version: ${{ matrix.rust }}
  #    - name: Test
  #      shell: bash
  #      run: |
  #        cargo test --package e2e_test --features coordinator_e2e_test  -- coordinator_tests --nocapture --test-threads  1
