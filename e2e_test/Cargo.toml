[package]
name = "e2e_test"
version.workspace = true
edition.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
config = { path = "../config" }
http_protocol = { path = "../common/http_protocol" }
meta = { path = "../meta" }
metrics = { path = "../common/metrics" }
models = { path = "../common/models" }
protos = { path = "../common/protos" }
utils = { path = "../common/utils" }

arrow-flight = { workspace = true, features = ["flight-sql-experimental"] }
arrow-schema = { workspace = true, optional = false }
backtrace = { workspace = true }
chrono = { workspace = true }
datafusion = { workspace = true }
flatbuffers = { workspace = true }
futures = { workspace = true, default-features = false, features = ["alloc"] }
parking_lot = { workspace = true }
prost = { workspace = true }
rand = { workspace = true }
regex = { workspace = true }
reqwest = { workspace = true, features = ["rustls-tls", "json", "blocking"], default-features = false }
serde = { workspace = true }
serde_json = { workspace = true }
serial_test = { workspace = true }
sysinfo = { workspace = true, optional = false }
tokio = { workspace = true, features = ["full"] }
tonic = { workspace = true, features = ["tls", "transport"] }
walkdir = { workspace = true }

[features]
default = ["startup_in_serial"]
coordinator_e2e_test = [] # Coordinator test cases.
not_passed = []           # Not passed test cases.
startup_in_serial = []    # Make sure data node register in meta server in the order they defined.
debug_mode = []           # Run cnosdb and cnosdb-meta in debug mode, make the compilation faster.
skip_build = []           # Skip build cnosdb and cnosdb-meta before run test if they are already built.
