statement ok
--#DATABASE=http_metrics_pre

statement ok
--#CHUNKED=true

statement ok
DROP DATABASE IF EXISTS http_metrics_pre;

statement ok
CREATE DATABASE http_metrics_pre WITH TTL '100000d';

statement ok
--#LP_BEGIN
m0,t0=t0 f0=false,f1=0.0 0
--#LP_END

statement ok
--#DATABASE = usage_schema

sleep 8s

query
--#HTTP
DESCRIBE DATABASE usage_schema;
----
"ttl" "shard" "vnode_duration" "replica" "precision" "max_memcache_size" "memcache_partitions" "wal_max_file_size" "wal_sync" "strict_write" "max_cache_readers"
"INF" "1" "1year" "1" "NS" "2 MiB" "16" "128 MiB" "false" "false" "32"

sleep 11s

query 
select column_name, column_type, data_type from information_schema.columns
where column_name != 'database'
and database_name = 'usage_schema'
and table_name = 'http_data_in'
order by column_name;
----
"api" "TAG" "STRING"
"host" "TAG" "STRING"
"node_id" "TAG" "STRING"
"tenant" "TAG" "STRING"
"time" "TIME" "TIMESTAMP(NANOSECOND)"
"user" "TAG" "STRING"
"value" "FIELD" "BIGINT UNSIGNED"


query 
select column_name, column_type, data_type from information_schema.columns
where column_name != 'database'
and database_name = 'usage_schema'
and table_name = 'http_data_out'
order by column_name;
----
"api" "TAG" "STRING"
"host" "TAG" "STRING"
"node_id" "TAG" "STRING"
"tenant" "TAG" "STRING"
"time" "TIME" "TIMESTAMP(NANOSECOND)"
"user" "TAG" "STRING"
"value" "FIELD" "BIGINT UNSIGNED"


query 
select column_name, column_type, data_type from information_schema.columns
where column_name != 'database'
and database_name = 'usage_schema'
and table_name = 'http_queries'
order by column_name;
----
"api" "TAG" "STRING"
"host" "TAG" "STRING"
"node_id" "TAG" "STRING"
"tenant" "TAG" "STRING"
"time" "TIME" "TIMESTAMP(NANOSECOND)"
"user" "TAG" "STRING"
"value" "FIELD" "BIGINT UNSIGNED"


statement ok
--#DATABASE = http_metrics_pre

statement ok
--#LP_BEGIN
to_generate_http_write_metrics,ta=a1 fa=1 1667456411000001
--#LP_END


statement ok
--#DATABASE = usage_schema


sleep 10s


query
select column_name, column_type, data_type from information_schema.columns
where column_name != 'database'
and database_name = 'usage_schema'
and table_name = 'http_writes'
order by column_name;
----
"api" "TAG" "STRING"
"host" "TAG" "STRING"
"node_id" "TAG" "STRING"
"tenant" "TAG" "STRING"
"time" "TIME" "TIMESTAMP(NANOSECOND)"
"user" "TAG" "STRING"
"value" "FIELD" "BIGINT UNSIGNED"
