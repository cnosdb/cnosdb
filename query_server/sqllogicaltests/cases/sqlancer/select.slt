statement ok
--#DATABASE=sqlancer2

statement ok
DROP DATABASE IF EXISTS sqlancer2;

statement ok
CREATE DATABASE sqlancer2 WITH TTL '100000d';

statement ok
--#LP_BEGIN
m0,t0=t0 f0=false,f1=0.0 0
m1,t0=t0 f0="f0",f1=false 0
m2,t0=t0 f0=false,f1="f1" 0
m3,t0=t0,t1=t1 f0=0i,f1=false 0
m4,t0=t0,t1=t1,t2=t2 f0=0i 0
--#LP_END


statement ok
INSERT m0(TIME, f0, f1) VALUES(366012624080382889, FALSE, 0.6326195071473769), (5635692422062413216, (((CAST(0.7382978061623816 AS STRING))||(CAST(FALSE AS STRING)))) NOT IN ('9sP䋛zqeoM', 'k*G'), 0.5469987105166848), (7533102572643168002, TRUE, 0.9622249970170084); -- 0ms;

statement ok
INSERT m0(TIME, f0, f1) VALUES(4283635885038645395, TRUE, 0.4131558313302025), (6292339431914973050, TRUE, 0.5540439337463335); -- 1ms;

statement ok
INSERT m0(TIME, f1, t0) VALUES(1041670293467254361, 0.507623643211476, '916053861'), (3174128646074400477, 0.47166914414715877, NULL); -- 0ms;

statement error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Coordinator: Fields can't be empty", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
INSERT m0(TIME, f0) VALUES(2079939785551584142, NULL), (1243152233754651379, FALSE); -- 0ms;

statement ok
INSERT m0(TIME, f0) VALUES(631407052613557553, TRUE), (7486831592909450783, TRUE); -- 0ms;

statement ok
INSERT m0(TIME, f0) VALUES(5867172425191822176, TRUE), (3986678807649375642, TRUE); -- 0ms;

statement ok
INSERT m1(TIME, f1) VALUES(7488251815539246350, FALSE); -- 0ms;

statement error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Coordinator: Fields can't be empty", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
INSERT m3(TIME, t0) VALUES(5414775681413349294, ''); -- 1ms;

# SELECT ALL BIT_AND(+ (+ (+ (CAST(m4.t2 AS BIGINT))))) FROM m3, m1 FULL OUTER JOIN m4 ON CAST(+ (((((m3.f0)/(m3.f0)))*(CAST(0.3686312873976273 AS BIGINT)))) AS BOOLEAN);
# SELECT m4.t2 FROM m4;
# SELECT m4.t2 FROM m4 WHERE FALSE UNION ALL SELECT ALL m4.t2 FROM m4 WHERE NOT (FALSE) UNION ALL SELECT ALL m4.t2 FROM m4 WHERE (FALSE) IS NULL;
query T rowsort
SELECT * FROM m1 ORDER BY m1.t0 ASC;
----
1970-01-01T00:00:00 "t0" "f0" false
2207-04-18T13:56:55.539246350 "NULL" "NULL" false

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT * FROM m1 WHERE ((NOT (((m1.f1)>=(m1.f1)))) BETWEEN SYMMETRIC (((m1.f1) BETWEEN SYMMETRIC (m1.f1) AND (m1.f1)) IS UNKNOWN) AND ((CAST(-1148203774 AS BOOLEAN)) IS TRUE)) IS TRUE UNION ALL SELECT ALL * FROM m1 WHERE NOT (((NOT (((m1.f1)>=(m1.f1)))) BETWEEN SYMMETRIC (((m1.f1) BETWEEN SYMMETRIC (m1.f1) AND (m1.f1)) IS UNKNOWN) AND ((CAST(-1148203774 AS BOOLEAN)) IS TRUE)) IS TRUE) UNION ALL SELECT * FROM m1 WHERE (((NOT (((m1.f1)>=(m1.f1)))) BETWEEN SYMMETRIC (((m1.f1) BETWEEN SYMMETRIC (m1.f1) AND (m1.f1)) IS UNKNOWN) AND ((CAST(-1148203774 AS BOOLEAN)) IS TRUE)) IS TRUE) IS NULL;

# SELECT m1.f0 FROM m4, m2 CROSS JOIN m1;
# SELECT m1.f0 FROM m4, m2 CROSS JOIN m1 WHERE NOT ((((m1.f0)||(m2.f0))) NOT IN ('+^*', '
# d5''h', '2*.')) UNION ALL SELECT ALL m1.f0 FROM m4, m2 CROSS JOIN m1 WHERE NOT (NOT ((((m1.f0)||(m2.f0))) NOT IN ('+^*', '
# d5''h', '2*.'))) UNION ALL SELECT ALL m1.f0 FROM m4, m2 CROSS JOIN m1 WHERE (NOT ((((m1.f0)||(m2.f0))) NOT IN ('+^*', '
# d5''h', '2*.'))) IS NULL;
query T rowsort
SELECT ALL m1.f1, m1.f0, m1.t0 FROM m1;
----
false "NULL" "NULL"
false "f0" "t0"

query T rowsort
SELECT m1.f1, m1.f0, m1.t0 FROM m1 WHERE ((CAST(CAST(CAST(m1.f1 AS STRING) AS BIGINT) AS STRING))LIKE(((CAST(CAST(m1.f1 AS BOOLEAN) AS STRING))||(m1.t0)))) UNION ALL SELECT m1.f1, m1.f0, m1.t0 FROM m1 WHERE NOT (((CAST(CAST(CAST(m1.f1 AS STRING) AS BIGINT) AS STRING))LIKE(((CAST(CAST(m1.f1 AS BOOLEAN) AS STRING))||(m1.t0))))) UNION ALL SELECT m1.f1, m1.f0, m1.t0 FROM m1 WHERE (((CAST(CAST(CAST(m1.f1 AS STRING) AS BIGINT) AS STRING))LIKE(((CAST(CAST(m1.f1 AS BOOLEAN) AS STRING))||(m1.t0))))) IS NULL;
----
false "NULL" "NULL"
false "f0" "t0"

# SELECT ALL * FROM m0, m2, m1 RIGHT OUTER JOIN m3 ON ((- (CAST(((-483484156)*(m4.f0)) AS BIGINT)))>(0.004339822260942983)) LEFT OUTER JOIN m4 ON ((CAST(m2.f0 AS STRING)) NOT IN ('b
# o4', '', ' ')) IS TRUE;
query T rowsort
SELECT ALL m3.f0, m3.t0, m3.t1 FROM m3;
----
0 "t0" "t1"

# SELECT m3.f0, m3.t0, m3.t1 FROM m3 WHERE CAST(CAST(CAST(CAST(m3.t0 AS BIGINT) AS STRING) AS BIGINT) AS BOOLEAN) ORDER BY m3.time;
query T rowsort
SELECT SUM(- (CAST(((((m1.t0)||(1765622571)))>=(((m1.f0)||(-1441159514)))) AS BIGINT))) FROM m1;
----
-1

query T rowsort
SELECT MAX(m4.f0) FROM m4;
----
0

# SELECT m3.t1, m0.t0, m3.f1, m0.f1 FROM m0 CROSS JOIN m3;
# SELECT ALL m3.t1, m0.t0, m3.f1, m0.f1 FROM m0 CROSS JOIN m3 WHERE (CAST(CAST(m3.f1 AS STRING) AS STRING)) NOT IN ('>[|h');
# SELECT ALL BOOL_OR(CAST(TRUE AS BOOLEAN)) FROM m1 CROSS JOIN m0;
# SELECT m4.t2, m4.t0 FROM m4;
query T rowsort
SELECT m4.t2, m4.t0 FROM m4 WHERE FALSE;
----

# SELECT m4.t2, m4.t0 FROM m4 WHERE NOT (FALSE);
query T rowsort
SELECT ALL m4.t2, m4.t0 FROM m4 WHERE (FALSE) IS NULL;
----

# SELECT m0.t0 FROM m0;
query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m0.t0 FROM m0 WHERE NOT (((NOT (m0.f0)) IS UNKNOWN) BETWEEN SYMMETRIC (CAST((m0.f0) IS UNKNOWN AS BOOLEAN)) AND (CAST(CAST(415483039 AS BIGINT) AS BOOLEAN))) UNION ALL SELECT m0.t0 FROM m0 WHERE NOT (NOT (((NOT (m0.f0)) IS UNKNOWN) BETWEEN SYMMETRIC (CAST((m0.f0) IS UNKNOWN AS BOOLEAN)) AND (CAST(CAST(415483039 AS BIGINT) AS BOOLEAN)))) UNION ALL SELECT m0.t0 FROM m0 WHERE (NOT (((NOT (m0.f0)) IS UNKNOWN) BETWEEN SYMMETRIC (CAST((m0.f0) IS UNKNOWN AS BOOLEAN)) AND (CAST(CAST(415483039 AS BIGINT) AS BOOLEAN)))) IS NULL;

query error Arrow error: Io error: Status \{ code: Internal, message: "Execute logical plan: Datafusion: Schema error: No field named m3\.f0\. Valid fields are \\"BIT_AND\(\(\- m3\.t0\)\)\\"\.", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT BIT_AND(- (+ (CAST(m3.t0 AS BIGINT)))) FROM m3 ORDER BY m3.f0 DESC, m3.t0 ASC;

# SELECT ALL BIT_AND(m3.f0) FROM m2, m1 RIGHT OUTER JOIN m3 ON m2.f0;
# SELECT ALL SUM(CAST(CAST(CAST(+ (m4.f0) AS BOOLEAN) AS STRING) AS BIGINT)) FROM m2, m3, m1 CROSS JOIN m4 RIGHT OUTER JOIN m0 ON (0.11730709111979376) IS NULL;
query T rowsort
SELECT ALL m4.f0, m4.t1, m4.t2 FROM m4;
----
0 "t1" "t2"

query T rowsort
SELECT m4.f0, m4.t1, m4.t2 FROM m4 WHERE NOT (NOT (NOT (((FALSE)AND(FALSE)))));
----
0 "t1" "t2"

query T rowsort
SELECT m4.f0, m4.t1, m4.t2 FROM m4 WHERE NOT (NOT (NOT (NOT (((FALSE)AND(FALSE))))));
----

query T rowsort
SELECT m4.f0, m4.t1, m4.t2 FROM m4 WHERE (NOT (NOT (NOT (((FALSE)AND(FALSE)))))) IS NULL;
----

query T rowsort
SELECT m0.f0, m0.t0, m0.f1 FROM m0;
----
NULL "916053861" 0.507623643211476
NULL "NULL" 0.47166914414715877
false "NULL" 0.6326195071473769
false "t0" 0.0
true "NULL" 0.4131558313302025
true "NULL" 0.5469987105166848
true "NULL" 0.5540439337463335
true "NULL" 0.9622249970170084
true "NULL" NULL
true "NULL" NULL
true "NULL" NULL
true "NULL" NULL

# SELECT m0.f0, m0.t0, m0.f1 FROM m0 WHERE CAST(CAST(- (CAST(m0.t0 AS BIGINT)) AS STRING) AS BOOLEAN) ORDER BY m0.time;
# SELECT ALL MAX(CAST(0.5720671065270896 AS STRING)) FROM m1, m0, m2 CROSS JOIN m3 INNER JOIN m4 ON (((NOT (m2.f0)) IN (TRUE, FALSE))<=(m0.f0));
# SELECT ALL m4.t1, m3.t1, m2.f1, m4.t2, m2.f0, m3.f0, m3.f1, m4.f0 FROM m4, m2 FULL OUTER JOIN m3 ON CAST('qv' AS BOOLEAN);
query T rowsort
SELECT BOOL_OR((((((((m3.t1)||(m3.f0)))||(CAST(0.033755319906666026 AS BOOLEAN))))LIKE(CAST(CAST(m3.f1 AS BIGINT) AS STRING)))) IS FALSE) FROM m3;
----
true

# SELECT ALL m1.f1, m3.f0, m3.t0, m4.t0, m4.t2, m2.f1 FROM m4, m1, m2 CROSS JOIN m0 RIGHT OUTER JOIN m3 ON (CAST(CAST(m2.f0 AS STRING) AS STRING)) NOT IN ('D29d0[N_');
query T rowsort
SELECT ALL m3.f1 FROM m3;
----
false

query T rowsort
SELECT m3.f1 FROM m3 WHERE (-2.83773192E8) NOT IN (0.020683454803656076, 0.11688246493551957) UNION ALL SELECT m3.f1 FROM m3 WHERE NOT ((-2.83773192E8) NOT IN (0.020683454803656076, 0.11688246493551957)) UNION ALL SELECT ALL m3.f1 FROM m3 WHERE ((-2.83773192E8) NOT IN (0.020683454803656076, 0.11688246493551957)) IS NULL;
----
false

# SELECT ALL m3.t1 FROM m3;
# SELECT ALL m3.t1 FROM m3 WHERE CAST(0.9301634332886752 AS BOOLEAN);
query T rowsort
SELECT BIT_AND(-1155506580) FROM m2;
----
-1155506580

query T rowsort
SELECT BIT_AND(agg0) FROM (SELECT BIT_AND(-1155506580)  as agg0 FROM m2 WHERE ((((CAST(((m2.f1)LIKE(m2.f1)) AS STRING))LIKE(m2.t0)))<(CAST(CAST(((1367699265)+(-217143237)) AS BIGINT) AS BOOLEAN))) UNION ALL SELECT ALL BIT_AND(-1155506580)  as agg0 FROM m2 WHERE NOT (((((CAST(((m2.f1)LIKE(m2.f1)) AS STRING))LIKE(m2.t0)))<(CAST(CAST(((1367699265)+(-217143237)) AS BIGINT) AS BOOLEAN)))) UNION ALL SELECT BIT_AND(-1155506580)  as agg0 FROM m2 WHERE (((((CAST(((m2.f1)LIKE(m2.f1)) AS STRING))LIKE(m2.t0)))<(CAST(CAST(((1367699265)+(-217143237)) AS BIGINT) AS BOOLEAN)))) IS NULL) as asdf;
----
-1155506580

# SELECT ALL m4.t0, m0.t0, m0.f1, m2.f1, m3.f0, m2.f0, m0.f0, m2.t0, m3.t1, m3.t0, m3.f1 FROM m2, m0 RIGHT OUTER JOIN m4 ON (m2.f0) IS TRUE RIGHT OUTER JOIN m3 ON NOT ((CAST(CAST(m4.t2 AS BIGINT) AS BOOLEAN)) IS NULL);
query T rowsort
SELECT * FROM m4 ORDER BY m4.t0 DESC;
----
1970-01-01T00:00:00 "t0" "t1" "t2" 0

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: sql parser error: Expected end of statement, found: NOTNULL", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT * FROM m4 WHERE (CAST(CAST(CAST(m4.f0 AS BOOLEAN) AS BOOLEAN) AS STRING)) NOTNULL;

query T rowsort
SELECT m0.f1, m0.f0, m0.t0 FROM m0;
----
0.0 false "t0"
0.4131558313302025 true "NULL"
0.47166914414715877 NULL "NULL"
0.507623643211476 NULL "916053861"
0.5469987105166848 true "NULL"
0.5540439337463335 true "NULL"
0.6326195071473769 false "NULL"
0.9622249970170084 true "NULL"
NULL true "NULL"
NULL true "NULL"
NULL true "NULL"
NULL true "NULL"

query T rowsort
SELECT ALL m0.f1, m0.f0, m0.t0 FROM m0 WHERE NOT ((((m0.t0)||(543481048))) NOT IN ('%', '-1e500')) UNION ALL SELECT ALL m0.f1, m0.f0, m0.t0 FROM m0 WHERE NOT (NOT ((((m0.t0)||(543481048))) NOT IN ('%', '-1e500'))) UNION ALL SELECT m0.f1, m0.f0, m0.t0 FROM m0 WHERE (NOT ((((m0.t0)||(543481048))) NOT IN ('%', '-1e500'))) IS NULL;
----
0.0 false "t0"
0.4131558313302025 true "NULL"
0.47166914414715877 NULL "NULL"
0.507623643211476 NULL "916053861"
0.5469987105166848 true "NULL"
0.5540439337463335 true "NULL"
0.6326195071473769 false "NULL"
0.9622249970170084 true "NULL"
NULL true "NULL"
NULL true "NULL"
NULL true "NULL"
NULL true "NULL"

# SELECT m0.t0, m0.f1, m0.f0, m3.f1, m3.t0, m2.f1, m2.t0, m2.f0, m3.t1 FROM m0, m3 LEFT OUTER JOIN m2 ON (m0.f0) BETWEEN (m0.f0) AND (CAST(m2.f1 AS BOOLEAN));
# SELECT m3.f1, m3.t1, m4.t1, m4.f0, m4.t0, m1.f1 FROM m3, m1 FULL OUTER JOIN m4 ON (+ (((m4.f0)-(m4.f0)))) IN (1945454503, -142551453, -86294061);
query T rowsort
SELECT ALL m4.t2, m4.f0, m4.t1 FROM m4;
----
"t2" 0 "t1"

query T rowsort
SELECT ALL m4.t2, m4.f0, m4.t1 FROM m4 WHERE CAST(((m4.t1)||(+ (((m4.f0)/(m4.f0))))) AS BOOLEAN) UNION ALL SELECT ALL m4.t2, m4.f0, m4.t1 FROM m4 WHERE NOT (CAST(((m4.t1)||(+ (((m4.f0)/(m4.f0))))) AS BOOLEAN)) UNION ALL SELECT m4.t2, m4.f0, m4.t1 FROM m4 WHERE (CAST(((m4.t1)||(+ (((m4.f0)/(m4.f0))))) AS BOOLEAN)) IS NULL;
----
"t2" 0 "t1"

query T rowsort
SELECT ALL BIT_AND(CAST(NOT (CAST(CAST(-436419271 AS BIGINT) AS BOOLEAN)) AS BIGINT)) FROM m1;
----
0

query T rowsort
SELECT ALL * FROM m0;
----
1970-01-01T00:00:00 "t0" false 0.0
1981-08-07T06:10:24.080382889 "NULL" false 0.6326195071473769
1990-01-03T22:50:52.613557553 "NULL" true NULL
2003-01-04T08:51:33.467254361 "916053861" NULL 0.507623643211476
2070-08-01T14:24:06.074400477 "NULL" NULL 0.47166914414715877
2096-05-01T02:46:47.649375642 "NULL" true NULL
2105-09-29T02:51:25.038645395 "NULL" true 0.4131558313302025
2148-08-02T22:07:02.062413216 "NULL" true 0.5469987105166848
2155-12-04T02:07:05.191822176 "NULL" true NULL
2169-05-25T00:03:51.914973050 "NULL" true 0.5540439337463335
2207-04-02T03:26:32.909450783 "NULL" true NULL
2208-09-18T16:29:32.643168002 "NULL" true 0.9622249970170084

query T rowsort
SELECT ALL * FROM m0 WHERE ((0.2700918132109975) IN (0.9097818468489035, 0.3427383563915254, 0.6717903709667695)) IS NOT UNKNOWN UNION ALL SELECT * FROM m0 WHERE NOT (((0.2700918132109975) IN (0.9097818468489035, 0.3427383563915254, 0.6717903709667695)) IS NOT UNKNOWN) UNION ALL SELECT * FROM m0 WHERE (((0.2700918132109975) IN (0.9097818468489035, 0.3427383563915254, 0.6717903709667695)) IS NOT UNKNOWN) IS NULL;
----
1970-01-01T00:00:00 "t0" false 0.0
1981-08-07T06:10:24.080382889 "NULL" false 0.6326195071473769
1990-01-03T22:50:52.613557553 "NULL" true NULL
2003-01-04T08:51:33.467254361 "916053861" NULL 0.507623643211476
2070-08-01T14:24:06.074400477 "NULL" NULL 0.47166914414715877
2096-05-01T02:46:47.649375642 "NULL" true NULL
2105-09-29T02:51:25.038645395 "NULL" true 0.4131558313302025
2148-08-02T22:07:02.062413216 "NULL" true 0.5469987105166848
2155-12-04T02:07:05.191822176 "NULL" true NULL
2169-05-25T00:03:51.914973050 "NULL" true 0.5540439337463335
2207-04-02T03:26:32.909450783 "NULL" true NULL
2208-09-18T16:29:32.643168002 "NULL" true 0.9622249970170084

# SELECT ALL m0.t0, m0.f1, m0.f0 FROM m0 FULL OUTER JOIN m2 ON NOT ((((m0.t0)LIKE(m2.f1))) IN (TRUE, TRUE));
query T rowsort
SELECT ALL m3.f0, m3.t0 FROM m3;
----
0 "t0"

query T rowsort
SELECT m3.f0, m3.t0 FROM m3 WHERE (0.8277935065853288) IN (0.949312477650495, 0.9229007609120338);
----

query T rowsort
SELECT ALL m3.f0, m3.t0 FROM m3 WHERE NOT ((0.8277935065853288) IN (0.949312477650495, 0.9229007609120338));
----
0 "t0"

query T rowsort
SELECT ALL m3.f0, m3.t0 FROM m3 WHERE ((0.8277935065853288) IN (0.949312477650495, 0.9229007609120338)) IS NULL;
----

# SELECT m4.f0, m4.t0, m2.f1 FROM m4, m2 INNER JOIN m0 ON NOT (((NULL)LIKE(((CAST(m0.f0 AS STRING))||(+ (m4.f0))))));
# SELECT m3.t1 FROM m3;
query T rowsort
SELECT m3.t1 FROM m3 WHERE (((((m3.t1)||(m3.f0)))||(((m3.t0)||(m3.f1))))) NOT IN ('t6i4<y}et') UNION ALL SELECT m3.t1 FROM m3 WHERE NOT ((((((m3.t1)||(m3.f0)))||(((m3.t0)||(m3.f1))))) NOT IN ('t6i4<y}et')) UNION ALL SELECT ALL m3.t1 FROM m3 WHERE ((((((m3.t1)||(m3.f0)))||(((m3.t0)||(m3.f1))))) NOT IN ('t6i4<y}et')) IS NULL;
----
"t1"

query T rowsort
SELECT ALL m0.f1, m0.f0, m0.t0 FROM m0;
----
0.0 false "t0"
0.4131558313302025 true "NULL"
0.47166914414715877 NULL "NULL"
0.507623643211476 NULL "916053861"
0.5469987105166848 true "NULL"
0.5540439337463335 true "NULL"
0.6326195071473769 false "NULL"
0.9622249970170084 true "NULL"
NULL true "NULL"
NULL true "NULL"
NULL true "NULL"
NULL true "NULL"

query T rowsort
SELECT m0.f1, m0.f0, m0.t0 FROM m0 WHERE m0.f0;
----
0.4131558313302025 true "NULL"
0.5469987105166848 true "NULL"
0.5540439337463335 true "NULL"
0.9622249970170084 true "NULL"
NULL true "NULL"
NULL true "NULL"
NULL true "NULL"
NULL true "NULL"

query T rowsort
SELECT ALL m0.f1, m0.f0, m0.t0 FROM m0 WHERE NOT (m0.f0);
----
0.0 false "t0"
0.6326195071473769 false "NULL"

query T rowsort
SELECT m0.f1, m0.f0, m0.t0 FROM m0 WHERE (m0.f0) IS NULL;
----
0.47166914414715877 NULL "NULL"
0.507623643211476 NULL "916053861"

# SELECT MAX(CAST(CAST(((((-512080491)+(1953842239)))%(CAST(m2.t0 AS BIGINT))) AS BIGINT) AS STRING)) FROM m2;
query T rowsort
SELECT ALL m1.t0, m1.f0 FROM m1;
----
"NULL" "NULL"
"t0" "f0"

query error Arrow error: Io error: Status \{ code: Internal, message: "Execute logical plan: Datafusion: Optimizer rule 'simplify_expressions' failed\\ncaused by\\nArrow error: Cast error: Cannot cast value '\-1326988525' to value of Boolean type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m1.t0, m1.f0 FROM m1 WHERE ((((m1.f1)OR((NOT (CAST('-1326988525' AS BOOLEAN))) IS NOT UNKNOWN)))OR(NOT (((CAST(-1893650081 AS STRING))LIKE(((m1.f0)||(-397861691))))))) UNION ALL SELECT m1.t0, m1.f0 FROM m1 WHERE NOT (((((m1.f1)OR((NOT (CAST('-1326988525' AS BOOLEAN))) IS NOT UNKNOWN)))OR(NOT (((CAST(-1893650081 AS STRING))LIKE(((m1.f0)||(-397861691)))))))) UNION ALL SELECT m1.t0, m1.f0 FROM m1 WHERE (((((m1.f1)OR((NOT (CAST('-1326988525' AS BOOLEAN))) IS NOT UNKNOWN)))OR(NOT (((CAST(-1893650081 AS STRING))LIKE(((m1.f0)||(-397861691)))))))) IS NULL;

# SELECT * FROM m1 CROSS JOIN m4 RIGHT OUTER JOIN (SELECT ALL - (m4.f0), CAST(m4.f0 AS BIGINT) FROM m4, m0, m1, m2 WHERE m0.f0) AS sub0 ON (+ (((+ (-1757070314))*(+ (m4.f0))))) IS NOT NULL;
# SELECT * FROM m1 CROSS JOIN m4 RIGHT OUTER JOIN (SELECT ALL - (m4.f0), CAST(m4.f0 AS BIGINT) FROM m4, m0, m1, m2 WHERE m0.f0) AS sub0 ON (+ (((+ (-1757070314))*(+ (m4.f0))))) IS NOT NULL WHERE CAST(m4.f0 AS BOOLEAN) UNION ALL SELECT * FROM m1 CROSS JOIN m4 RIGHT OUTER JOIN (SELECT ALL - (m4.f0), CAST(m4.f0 AS BIGINT) FROM m4, m0, m1, m2 WHERE m0.f0) AS sub0 ON (+ (((+ (-1757070314))*(+ (m4.f0))))) IS NOT NULL WHERE NOT (CAST(m4.f0 AS BOOLEAN)) UNION ALL SELECT * FROM m1 CROSS JOIN m4 RIGHT OUTER JOIN (SELECT - (m4.f0), CAST(m4.f0 AS BIGINT) FROM m4, m0, m1, m2 WHERE m0.f0) AS sub0 ON (+ (((+ (-1757070314))*(+ (m4.f0))))) IS NOT NULL WHERE (CAST(m4.f0 AS BOOLEAN)) IS NULL;
# SELECT ALL m2.f0, m2.t0, m0.f0, m0.t0, m4.t0, m0.f1, m3.t0 FROM m3, m2 JOIN m4 ON TRUE RIGHT OUTER JOIN m0 ON ((((m4.f0) BETWEEN SYMMETRIC (m4.f0) AND (m3.f0)) IN (TRUE, FALSE, TRUE))=((0.5010374883053191) IS NULL));
query T rowsort
SELECT ALL m0.f1 FROM m0;
----
0.0
0.4131558313302025
0.47166914414715877
0.507623643211476
0.5469987105166848
0.5540439337463335
0.6326195071473769
0.9622249970170084
NULL
NULL
NULL
NULL

query error Arrow error: Io error: Status \{ code: Internal, message: "Execute logical plan: Datafusion: Optimizer rule 'simplify_expressions' failed\\ncaused by\\nArrow error: Cast error: Cannot cast value '0\.8194569637054474' to value of Boolean type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m0.f1 FROM m0 WHERE CAST(CAST(0.8194569637054474 AS STRING) AS BOOLEAN);

query T rowsort
SELECT BIT_OR(- (-1205285987)) FROM m2;
----
1205285987

query T rowsort
SELECT m4.f0 FROM m4;
----
0

query T rowsort
SELECT m4.f0 FROM m4 WHERE (TRUE) IN (FALSE, FALSE) UNION ALL SELECT m4.f0 FROM m4 WHERE NOT ((TRUE) IN (FALSE, FALSE)) UNION ALL SELECT m4.f0 FROM m4 WHERE ((TRUE) IN (FALSE, FALSE)) IS NULL;
----
0

# SELECT m2.t0, m1.t0, m3.t0, m3.f1 FROM m4, m0, m3 LEFT OUTER JOIN m2 ON NOT (CAST(((- (m4.f0))^(CAST(m1.f1 AS BIGINT))) AS BOOLEAN)) RIGHT OUTER JOIN m1 ON NOT (CAST(+ (CAST(m1.t0 AS BIGINT)) AS BOOLEAN));
# SELECT ALL * FROM m4 LEFT OUTER JOIN m3 ON ((((m4.t1)||(m3.f0)))LIKE(m4.t0));
# SELECT ALL * FROM m4 LEFT OUTER JOIN m3 ON ((((m4.t1)||(m3.f0)))LIKE(m4.t0)) WHERE ((CAST(+ (CAST(-1284225895 AS BIGINT)) AS STRING))LIKE(m4.t2));
# SELECT m2.f1, m1.t0 FROM m0, m2, m4 LEFT OUTER JOIN m1 ON (((((m4.t2)LIKE('*uW-!2'))) BETWEEN SYMMETRIC (CAST(m0.f1 AS BOOLEAN)) AND (NOT (m0.f0))) IS FALSE) IS UNKNOWN LEFT OUTER JOIN m3 ON m1.f1;
query T rowsort
SELECT m1.f0, m1.f1, m1.t0 FROM m1;
----
"NULL" false "NULL"
"f0" false "t0"

query T rowsort
SELECT ALL m1.f0, m1.f1, m1.t0 FROM m1 WHERE (0.041028616885448455) NOT IN (0.9515623909882639, 0.7342415563698188);
----
"NULL" false "NULL"
"f0" false "t0"

query T rowsort
SELECT ALL m1.f0, m1.f1, m1.t0 FROM m1 WHERE NOT ((0.041028616885448455) NOT IN (0.9515623909882639, 0.7342415563698188));
----

query T rowsort
SELECT m1.f0, m1.f1, m1.t0 FROM m1 WHERE ((0.041028616885448455) NOT IN (0.9515623909882639, 0.7342415563698188)) IS NULL;
----

# SELECT ALL m0.f1, m1.t0, m0.t0, m3.t1, m3.t0, m4.t0, m3.f0, m2.t0, m4.t2, m4.f0, m1.f1, m2.f0 FROM m2, m4, m3 LEFT OUTER JOIN m1 ON ((CAST((FALSE) IN (FALSE) AS BOOLEAN)) IS NOT UNKNOWN) IS NOT UNKNOWN FULL OUTER JOIN m0 ON CAST(NOT (m3.f1) AS BOOLEAN);
query T rowsort
SELECT m2.f1 FROM m2;
----
"f1"

query T rowsort
SELECT m2.f1 FROM m2 WHERE NOT (m2.f0) UNION ALL SELECT m2.f1 FROM m2 WHERE NOT (NOT (m2.f0)) UNION ALL SELECT ALL m2.f1 FROM m2 WHERE (NOT (m2.f0)) IS NULL;
----
"f1"

# SELECT MIN(0.14936223108988111) FROM m4 LEFT OUTER JOIN m3 ON ((((m4.t2)||(((((m3.t1)||(m4.f0)))||(-5.12080491E8)))))!=(CAST(1.7976931348623157E308 AS STRING))) FULL OUTER JOIN (SELECT ALL 0.34251991976806284 FROM m1, m0) AS sub0 ON (CAST(CAST(m4.t1 AS BIGINT) AS STRING)) IN ('');
# SELECT * FROM m3, m1 LEFT OUTER JOIN m2 ON CAST(((((CAST(m3.t1 AS BIGINT))%(((m3.f0)/(m3.f0)))))^(((m3.f0)%(- (-744536980))))) AS BOOLEAN) JOIN m0 ON m0.f0;
# SELECT m4.t2, m4.t0 FROM m4;
query T rowsort
SELECT ALL m4.t2, m4.t0 FROM m4 WHERE (((((m4.t1)||(FALSE)))||(CAST(m4.f0 AS BIGINT)))) IN ('5-5ylbN2f', '*''{lcA', '');
----

query T rowsort
SELECT ALL m4.t2, m4.t0 FROM m4 WHERE NOT ((((((m4.t1)||(FALSE)))||(CAST(m4.f0 AS BIGINT)))) IN ('5-5ylbN2f', '*''{lcA', ''));
----
"t2" "t0"

query T rowsort
SELECT ALL m4.t2, m4.t0 FROM m4 WHERE ((((((m4.t1)||(FALSE)))||(CAST(m4.f0 AS BIGINT)))) IN ('5-5ylbN2f', '*''{lcA', '')) IS NULL;
----

# SELECT m0.t0, m0.f0 FROM m0 FULL OUTER JOIN (SELECT ALL + (CAST(((CAST(m3.f0 AS STRING))||(((m3.f0)*(m3.f0)))) AS BIGINT)) FROM m2, m3 LIMIT 4299586819866111446) AS sub0 ON NOT (m0.f0);
query T rowsort
SELECT m0.f0, m0.f1 FROM m0;
----
NULL 0.47166914414715877
NULL 0.507623643211476
false 0.0
false 0.6326195071473769
true 0.4131558313302025
true 0.5469987105166848
true 0.5540439337463335
true 0.9622249970170084
true NULL
true NULL
true NULL
true NULL

query T rowsort
SELECT ALL m0.f0, m0.f1 FROM m0 WHERE ((- (1228373802)) BETWEEN (((-305731479)+(710642532))) AND (0.8311794469353642)) IN (FALSE) UNION ALL SELECT ALL m0.f0, m0.f1 FROM m0 WHERE NOT (((- (1228373802)) BETWEEN (((-305731479)+(710642532))) AND (0.8311794469353642)) IN (FALSE)) UNION ALL SELECT m0.f0, m0.f1 FROM m0 WHERE (((- (1228373802)) BETWEEN (((-305731479)+(710642532))) AND (0.8311794469353642)) IN (FALSE)) IS NULL;
----
NULL 0.47166914414715877
NULL 0.507623643211476
false 0.0
false 0.6326195071473769
true 0.4131558313302025
true 0.5469987105166848
true 0.5540439337463335
true 0.9622249970170084
true NULL
true NULL
true NULL
true NULL

query T rowsort
SELECT ALL m2.f0 FROM m2;
----
false

query T rowsort
SELECT ALL m2.f0 FROM m2 WHERE NOT (CAST(CAST(CAST(-488758559 AS STRING) AS BIGINT) AS BOOLEAN)) UNION ALL SELECT ALL m2.f0 FROM m2 WHERE NOT (NOT (CAST(CAST(CAST(-488758559 AS STRING) AS BIGINT) AS BOOLEAN))) UNION ALL SELECT ALL m2.f0 FROM m2 WHERE (NOT (CAST(CAST(CAST(-488758559 AS STRING) AS BIGINT) AS BOOLEAN))) IS NULL;
----
false

query T rowsort
SELECT * FROM m4;
----
1970-01-01T00:00:00 "t0" "t1" "t2" 0

query T rowsort
SELECT * FROM m4 WHERE (0.5753811395614317) NOT IN (0.8417561043814955) UNION ALL SELECT * FROM m4 WHERE NOT ((0.5753811395614317) NOT IN (0.8417561043814955)) UNION ALL SELECT ALL * FROM m4 WHERE ((0.5753811395614317) NOT IN (0.8417561043814955)) IS NULL;
----
1970-01-01T00:00:00 "t0" "t1" "t2" 0

# SELECT m2.f0, m4.f0, m2.t0, m4.t1 FROM m4 CROSS JOIN m2;
# SELECT ALL m2.f0, m4.f0, m2.t0, m4.t1 FROM m4 CROSS JOIN m2 WHERE CAST(CAST(m4.f0 AS BIGINT) AS BOOLEAN) UNION ALL SELECT m2.f0, m4.f0, m2.t0, m4.t1 FROM m4 CROSS JOIN m2 WHERE NOT (CAST(CAST(m4.f0 AS BIGINT) AS BOOLEAN)) UNION ALL SELECT ALL m2.f0, m4.f0, m2.t0, m4.t1 FROM m4 CROSS JOIN m2 WHERE (CAST(CAST(m4.f0 AS BIGINT) AS BOOLEAN)) IS NULL;
# SELECT m4.t0, m4.t1 FROM m4;
# SELECT m4.t0, m4.t1 FROM m4 WHERE (((TRUE) IN (FALSE, TRUE, FALSE)) IS FALSE) IS FALSE;
query T rowsort
SELECT ALL m4.t0, m4.t1 FROM m4 WHERE NOT ((((TRUE) IN (FALSE, TRUE, FALSE)) IS FALSE) IS FALSE);
----

query T rowsort
SELECT m4.t0, m4.t1 FROM m4 WHERE ((((TRUE) IN (FALSE, TRUE, FALSE)) IS FALSE) IS FALSE) IS NULL;
----

query T rowsort
SELECT m4.f0 FROM m4;
----
0

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Arrow: Cast error: Cannot cast string 't1' to value of Int64 type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m4.f0 FROM m4 WHERE (- (CAST(m4.t1 AS BIGINT))) NOT IN (779308539, -1573694652) UNION ALL SELECT m4.f0 FROM m4 WHERE NOT ((- (CAST(m4.t1 AS BIGINT))) NOT IN (779308539, -1573694652)) UNION ALL SELECT ALL m4.f0 FROM m4 WHERE ((- (CAST(m4.t1 AS BIGINT))) NOT IN (779308539, -1573694652)) IS NULL;

query T rowsort
SELECT ALL m0.f0 FROM m0;
----
NULL
NULL
false
false
true
true
true
true
true
true
true
true

query T rowsort
SELECT ALL m0.f0 FROM m0 WHERE (- (+ (1193539338))) IN (1001857658);
----

query T rowsort
SELECT ALL m0.f0 FROM m0 WHERE NOT ((- (+ (1193539338))) IN (1001857658));
----
NULL
NULL
false
false
true
true
true
true
true
true
true
true

query T rowsort
SELECT m0.f0 FROM m0 WHERE ((- (+ (1193539338))) IN (1001857658)) IS NULL;
----

# SELECT ALL m4.f0, m2.t0, m3.f0, m3.f1 FROM m3, m0 CROSS JOIN m2 JOIN m4 ON m3.f1 ORDER BY m3.t0 ASC;
query T rowsort
SELECT m4.f0, m4.t1 FROM m4;
----
0 "t1"

query T rowsort
SELECT m4.f0, m4.t1 FROM m4 WHERE CAST(CAST(CAST(CAST(m4.f0 AS STRING) AS BOOLEAN) AS BOOLEAN) AS BOOLEAN) UNION ALL SELECT m4.f0, m4.t1 FROM m4 WHERE NOT (CAST(CAST(CAST(CAST(m4.f0 AS STRING) AS BOOLEAN) AS BOOLEAN) AS BOOLEAN)) UNION ALL SELECT m4.f0, m4.t1 FROM m4 WHERE (CAST(CAST(CAST(CAST(m4.f0 AS STRING) AS BOOLEAN) AS BOOLEAN) AS BOOLEAN)) IS NULL;
----
0 "t1"

query T rowsort
SELECT m2.t0, m2.f1, m2.f0 FROM m2;
----
"t0" "f1" false

query T rowsort
SELECT m2.t0, m2.f1, m2.f0 FROM m2 WHERE (((CAST(1734693100 AS STRING))||(CAST(808995049 AS BIGINT)))) NOT IN ('L*Fe+)', 'D]Tm');
----
"t0" "f1" false

# SELECT ALL * FROM m4, m1 RIGHT OUTER JOIN m2 ON m1.f1;
# SELECT ALL * FROM m4, m1 RIGHT OUTER JOIN m2 ON m1.f1 WHERE m1.f1;
# SELECT * FROM m4, m1 RIGHT OUTER JOIN m2 ON m1.f1 WHERE NOT (m1.f1);
# SELECT * FROM m4, m1 RIGHT OUTER JOIN m2 ON m1.f1 WHERE (m1.f1) IS NULL;
query T rowsort
SELECT m0.t0, m0.f1, m0.f0 FROM m0;
----
"916053861" 0.507623643211476 NULL
"NULL" 0.4131558313302025 true
"NULL" 0.47166914414715877 NULL
"NULL" 0.5469987105166848 true
"NULL" 0.5540439337463335 true
"NULL" 0.6326195071473769 false
"NULL" 0.9622249970170084 true
"NULL" NULL true
"NULL" NULL true
"NULL" NULL true
"NULL" NULL true
"t0" 0.0 false

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: sql parser error: Expected \), found: NOTNULL", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m0.t0, m0.f1, m0.f0 FROM m0 WHERE (((((CAST(m0.f0 AS STRING))LIKE(CAST(m0.f0 AS STRING)))) NOTNULL)AND(m0.f0)) UNION ALL SELECT m0.t0, m0.f1, m0.f0 FROM m0 WHERE NOT ((((((CAST(m0.f0 AS STRING))LIKE(CAST(m0.f0 AS STRING)))) NOTNULL)AND(m0.f0))) UNION ALL SELECT ALL m0.t0, m0.f1, m0.f0 FROM m0 WHERE ((((((CAST(m0.f0 AS STRING))LIKE(CAST(m0.f0 AS STRING)))) NOTNULL)AND(m0.f0))) IS NULL;

query T rowsort
SELECT m3.f1, m3.t0 FROM m3;
----
false "t0"

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m3.f1, m3.t0 FROM m3 WHERE (m3.t0) BETWEEN SYMMETRIC (((((CAST(m3.t0 AS STRING))||(CAST(m3.f0 AS STRING))))||(((m3.f0)^(((-1761997143)^(m3.f0))))))) AND (m3.t1);

query T rowsort
SELECT ALL MAX(0.6592404280882139) FROM m3;
----
0.6592404280882139

# SELECT BOOL_AND(CAST(m4.t1 AS BOOLEAN)) FROM m0, m4 RIGHT OUTER JOIN m3 ON CAST(0.37749246529181213 AS BOOLEAN) ORDER BY m3.f0 DESC, m3.f1 ASC;
# SELECT ALL m4.t1, m4.t0 FROM m2, m4 LEFT OUTER JOIN m3 ON TRUE;
# SELECT ALL m4.t1, m4.t0 FROM m2, m4 LEFT OUTER JOIN m3 ON TRUE WHERE CAST(m2.f0 AS BOOLEAN);
# SELECT ALL m4.t1, m4.t0 FROM m2, m4 LEFT OUTER JOIN m3 ON TRUE WHERE NOT (CAST(m2.f0 AS BOOLEAN));
# SELECT ALL m4.t1, m4.t0 FROM m2, m4 LEFT OUTER JOIN m3 ON TRUE WHERE (CAST(m2.f0 AS BOOLEAN)) IS NULL;
query T rowsort
SELECT ALL m2.t0, m2.f0 FROM m2;
----
"t0" false

query T rowsort
SELECT ALL m2.t0, m2.f0 FROM m2 WHERE CAST(CAST((m2.f0) IN (FALSE, TRUE) AS BIGINT) AS BOOLEAN);
----
"t0" false

query T rowsort
SELECT ALL m0.t0, m0.f0, m0.f1 FROM m0;
----
"916053861" NULL 0.507623643211476
"NULL" NULL 0.47166914414715877
"NULL" false 0.6326195071473769
"NULL" true 0.4131558313302025
"NULL" true 0.5469987105166848
"NULL" true 0.5540439337463335
"NULL" true 0.9622249970170084
"NULL" true NULL
"NULL" true NULL
"NULL" true NULL
"NULL" true NULL
"t0" false 0.0

query T rowsort
SELECT ALL m0.t0, m0.f0, m0.f1 FROM m0 WHERE (0.4038471619671604) NOT IN (0.3054174880737277, 0.3892425631248022);
----
"916053861" NULL 0.507623643211476
"NULL" NULL 0.47166914414715877
"NULL" false 0.6326195071473769
"NULL" true 0.4131558313302025
"NULL" true 0.5469987105166848
"NULL" true 0.5540439337463335
"NULL" true 0.9622249970170084
"NULL" true NULL
"NULL" true NULL
"NULL" true NULL
"NULL" true NULL
"t0" false 0.0

query T rowsort
SELECT ALL m0.t0, m0.f0, m0.f1 FROM m0 WHERE NOT ((0.4038471619671604) NOT IN (0.3054174880737277, 0.3892425631248022));
----

query T rowsort
SELECT ALL m0.t0, m0.f0, m0.f1 FROM m0 WHERE ((0.4038471619671604) NOT IN (0.3054174880737277, 0.3892425631248022)) IS NULL;
----

query T rowsort
SELECT m3.t0, m3.t1, m3.f1, m3.f0 FROM m3;
----
"t0" "t1" false 0

statement error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Arrow: Cast error: Cannot cast value 't0' to value of Boolean type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
(SELECT m3.t0, m3.t1, m3.f1, m3.f0 FROM m3 WHERE ((((((((m3.t0)||(m3.f1)))||(NOT (FALSE))))||(NOT (CAST(m3.t0 AS BOOLEAN)))))>(CAST(CAST(- (m3.f0) AS BOOLEAN) AS STRING))) ORDER BY m3.time) UNION ALL (SELECT m3.t0, m3.t1, m3.f1, m3.f0 FROM m3 WHERE NOT (((((((((m3.t0)||(m3.f1)))||(NOT (FALSE))))||(NOT (CAST(m3.t0 AS BOOLEAN)))))>(CAST(CAST(- (m3.f0) AS BOOLEAN) AS STRING)))) ORDER BY m3.time) UNION ALL (SELECT m3.t0, m3.t1, m3.f1, m3.f0 FROM m3 WHERE (((((((((m3.t0)||(m3.f1)))||(NOT (FALSE))))||(NOT (CAST(m3.t0 AS BOOLEAN)))))>(CAST(CAST(- (m3.f0) AS BOOLEAN) AS STRING)))) IS NULL ORDER BY m3.time);

query T rowsort
SELECT ALL m4.t0, m4.f0, m4.t1 FROM m4;
----
"t0" 0 "t1"

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m4.t0, m4.f0, m4.t1 FROM m4 WHERE CAST((((((((((0.9584559080711685) NOT IN (0.733569031597476, 0.7960654456099594))AND((m4.t0) BETWEEN SYMMETRIC (m4.t1) AND (m4.t1))))AND(CAST(962753936 AS BOOLEAN))))AND(NOT ((m4.t2) BETWEEN (m4.t2) AND (m4.t0)))))AND((CAST(FALSE AS BOOLEAN)) IS NOT UNKNOWN)) AS BOOLEAN);

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m4.t0, m4.f0, m4.t1 FROM m4 WHERE NOT (CAST((((((((((0.9584559080711685) NOT IN (0.733569031597476, 0.7960654456099594))AND((m4.t0) BETWEEN SYMMETRIC (m4.t1) AND (m4.t1))))AND(CAST(962753936 AS BOOLEAN))))AND(NOT ((m4.t2) BETWEEN (m4.t2) AND (m4.t0)))))AND((CAST(FALSE AS BOOLEAN)) IS NOT UNKNOWN)) AS BOOLEAN));

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m4.t0, m4.f0, m4.t1 FROM m4 WHERE (CAST((((((((((0.9584559080711685) NOT IN (0.733569031597476, 0.7960654456099594))AND((m4.t0) BETWEEN SYMMETRIC (m4.t1) AND (m4.t1))))AND(CAST(962753936 AS BOOLEAN))))AND(NOT ((m4.t2) BETWEEN (m4.t2) AND (m4.t0)))))AND((CAST(FALSE AS BOOLEAN)) IS NOT UNKNOWN)) AS BOOLEAN)) IS NULL;

query T rowsort
SELECT ALL m4.t0, m4.f0, m4.t1, m4.t2 FROM m4;
----
"t0" 0 "t1" "t2"

query T rowsort
SELECT m4.t0, m4.f0, m4.t1, m4.t2 FROM m4 WHERE (CAST(CAST(m4.f0 AS STRING) AS BIGINT)) NOT IN (0.22734557919724097);
----
"t0" 0 "t1" "t2"

# SELECT * FROM m0 RIGHT OUTER JOIN m2 ON ((m2.t0)IS DISTINCT FROM(CAST(-1112458068 AS STRING))) RIGHT OUTER JOIN (SELECT 0.30313190601522666, 0.9724142377914201 FROM m2, m3, m1, m4, m0) AS sub0 ON (((((CAST(m0.f0 AS STRING))||(((-1903754498)^(1626550688)))))||(NOT (((m0.t0)LIKE(m2.t0)))))) BETWEEN SYMMETRIC (((CAST(CAST(m2.t0 AS BIGINT) AS STRING))||(0.27904388585291007))) AND (((CAST(CAST(m0.f0 AS BIGINT) AS STRING))||(CAST(+ (864109262) AS STRING)))) ORDER BY m2.f0 ASC;
# SELECT m1.t0, m2.f1 FROM m2, m0 FULL OUTER JOIN m1 ON FALSE INNER JOIN (SELECT ALL (((((((m3.t0)||(m1.f1)))||(CAST(m0.f1 AS BOOLEAN))))LIKE(m4.t2))) IS FALSE, 0.5899263932839989 FROM m1, m4, m0, m3) AS sub0 ON (((CAST(CAST(-42709776 AS STRING) AS STRING))!=(((CAST(TRUE AS STRING))||(((((m1.f1)OR(TRUE)))OR(m2.f0))))))) IS FALSE;
query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Arrow: Cast error: Cannot cast string 'f0' to value of Int64 type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT SUM(- (((+ (CAST(m1.f0 AS BIGINT)))/(CAST(((m1.t0)>(m1.f0)) AS BIGINT))))) FROM m1;

query T rowsort
SELECT m2.t0, m2.f1 FROM m2;
----
"t0" "f1"

query T rowsort
SELECT ALL m2.t0, m2.f1 FROM m2 WHERE m2.f0;
----

query T rowsort
SELECT ALL m2.t0, m2.f1 FROM m2 WHERE NOT (m2.f0);
----
"t0" "f1"

query T rowsort
SELECT ALL m2.t0, m2.f1 FROM m2 WHERE (m2.f0) IS NULL;
----

# SELECT ALL MAX(0.7689200398756614) FROM m0 RIGHT OUTER JOIN m1 ON ((NOT ((NOT (m1.f1)) IS NOT NULL))AND(CAST(m0.t0 AS BOOLEAN)));
query T rowsort
SELECT ALL m2.f1 FROM m2;
----
"f1"

query T rowsort
SELECT ALL m2.f1 FROM m2 WHERE (NOT (CAST((m2.f1) NOT IN ('', '', 'C') AS BOOLEAN))) IS FALSE UNION ALL SELECT ALL m2.f1 FROM m2 WHERE NOT ((NOT (CAST((m2.f1) NOT IN ('', '', 'C') AS BOOLEAN))) IS FALSE) UNION ALL SELECT m2.f1 FROM m2 WHERE ((NOT (CAST((m2.f1) NOT IN ('', '', 'C') AS BOOLEAN))) IS FALSE) IS NULL;
----
"f1"

# SELECT ALL m2.t0 FROM m2 LEFT OUTER JOIN (SELECT CAST(CAST(0.7744384440894759 AS BIGINT) AS STRING), (CAST(CAST(CAST(-1269878042 AS BIGINT) AS BIGINT) AS BOOLEAN)) IS TRUE FROM m4, m2, m0, m1, m3) AS sub0 ON CAST(CAST(-5.12080491E8 AS STRING) AS BOOLEAN);
query T rowsort
SELECT ALL m1.f0, m1.f1 FROM m1;
----
"NULL" false
"f0" false

query T rowsort
SELECT ALL m1.f0, m1.f1 FROM m1 WHERE CAST(0.4460179475294419 AS BOOLEAN);
----
"NULL" false
"f0" false

# SELECT m0.t0, m2.f0, m2.t0 FROM m4, m0 LEFT OUTER JOIN m2 ON CAST((NOT (((((FALSE)AND(m2.f0)))AND(m0.f0)))) IS FALSE AS BOOLEAN) ORDER BY m0.f0 ASC, m0.f1 DESC;
# SELECT ALL m0.t0, m2.f0, m2.t0 FROM m4, m0 LEFT OUTER JOIN m2 ON CAST((NOT (((((FALSE)AND(m2.f0)))AND(m0.f0)))) IS FALSE AS BOOLEAN) WHERE m2.f0 UNION ALL SELECT ALL m0.t0, m2.f0, m2.t0 FROM m4, m0 LEFT OUTER JOIN m2 ON CAST((NOT (((((FALSE)AND(m2.f0)))AND(m0.f0)))) IS FALSE AS BOOLEAN) WHERE NOT (m2.f0) UNION ALL SELECT m0.t0, m2.f0, m2.t0 FROM m4, m0 LEFT OUTER JOIN m2 ON CAST((NOT (((((FALSE)AND(m2.f0)))AND(m0.f0)))) IS FALSE AS BOOLEAN) WHERE (m2.f0) IS NULL;
query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Arrow: Cast error: Cannot cast string 't1' to value of Int64 type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT COUNT(((m3.f0)*(- (CAST(CAST(m3.t1 AS STRING) AS BIGINT))))) FROM m3;

# SELECT BOOL_AND(CAST(m0.f1 AS BOOLEAN)) FROM m1, m2 RIGHT OUTER JOIN m0 ON (CAST(CAST((('0.2576924491838173')IS NOT DISTINCT FROM(m0.t0)) AS STRING) AS BOOLEAN)) IS FALSE;
query T rowsort
SELECT * FROM m3;
----
1970-01-01T00:00:00 "t0" "t1" 0 false

query T rowsort
SELECT ALL * FROM m3 WHERE CAST(((- (((m3.f0)-(m3.f0))))/(- (+ (m3.f0)))) AS BOOLEAN) UNION ALL SELECT * FROM m3 WHERE NOT (CAST(((- (((m3.f0)-(m3.f0))))/(- (+ (m3.f0)))) AS BOOLEAN)) UNION ALL SELECT ALL * FROM m3 WHERE (CAST(((- (((m3.f0)-(m3.f0))))/(- (+ (m3.f0)))) AS BOOLEAN)) IS NULL;
----
1970-01-01T00:00:00 "t0" "t1" 0 false

query T rowsort
SELECT ALL m2.f0, m2.t0, m2.f1 FROM m2;
----
false "t0" "f1"

query T rowsort
SELECT m2.f0, m2.t0, m2.f1 FROM m2 WHERE NOT ((((9223372036854775807)-(-1826088151))) IN (-1643062000, 195520944, 1695257694)) UNION ALL SELECT ALL m2.f0, m2.t0, m2.f1 FROM m2 WHERE NOT (NOT ((((9223372036854775807)-(-1826088151))) IN (-1643062000, 195520944, 1695257694))) UNION ALL SELECT m2.f0, m2.t0, m2.f1 FROM m2 WHERE (NOT ((((9223372036854775807)-(-1826088151))) IN (-1643062000, 195520944, 1695257694))) IS NULL;
----
false "t0" "f1"

query T rowsort
SELECT m4.t0, m4.f0, m4.t1 FROM m4;
----
"t0" 0 "t1"

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Arrow: Cast error: Cannot cast string 't1' to value of Int64 type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m4.t0, m4.f0, m4.t1 FROM m4 WHERE ((CAST(((CAST(m4.t1 AS BIGINT))IS NOT DISTINCT FROM(((m4.f0)-(m4.f0)))) AS STRING))LIKE(CAST(+ (- (m4.f0)) AS STRING)));

# SELECT m3.f1 FROM m3 FULL OUTER JOIN m0 ON NOT (((- (CAST(m3.f0 AS BIGINT)))IS NOT DISTINCT FROM(((((m3.f0)/(m3.f0)))^(((1442419159)%(m3.f0)))))));
query T rowsort
SELECT ALL BIT_OR(m3.f0) FROM m3;
----
0

query T rowsort
SELECT m3.t0, m3.f1, m3.t1 FROM m3;
----
"t0" false "t1"

query T rowsort
SELECT m3.t0, m3.f1, m3.t1 FROM m3 WHERE NOT (NOT (CAST(0.5775200651584798 AS BOOLEAN)));
----
"t0" false "t1"

query T rowsort
SELECT ALL m4.t0, m4.t1, m4.f0, m4.t2 FROM m4;
----
"t0" "t1" 0 "t2"

query T rowsort
SELECT ALL m4.t0, m4.t1, m4.f0, m4.t2 FROM m4 WHERE NOT ((CAST(CAST(FALSE AS STRING) AS BOOLEAN)) IS NOT UNKNOWN) UNION ALL SELECT ALL m4.t0, m4.t1, m4.f0, m4.t2 FROM m4 WHERE NOT (NOT ((CAST(CAST(FALSE AS STRING) AS BOOLEAN)) IS NOT UNKNOWN)) UNION ALL SELECT m4.t0, m4.t1, m4.f0, m4.t2 FROM m4 WHERE (NOT ((CAST(CAST(FALSE AS STRING) AS BOOLEAN)) IS NOT UNKNOWN)) IS NULL;
----
"t0" "t1" 0 "t2"

# SELECT m0.f0, m1.t0, m1.f1, m1.f0, m0.f1, m0.t0 FROM m0 FULL OUTER JOIN m1 ON NOT (((NOT ((m1.f1) IS FALSE))IS NOT DISTINCT FROM(((CAST(-1135035984 AS BOOLEAN))=((('0.40560185446598973')IS NOT DISTINCT FROM(m0.t0)))))));
query T rowsort
SELECT m3.f1, m3.f0, m3.t0, m3.t1 FROM m3;
----
false 0 "t0" "t1"

query T rowsort
SELECT ALL m3.f1, m3.f0, m3.t0, m3.t1 FROM m3 WHERE NOT (NOT (NOT (((((((m3.f1)AND(TRUE)))OR(m3.f1)))OR(m3.f1)))));
----
false 0 "t0" "t1"

query T rowsort
SELECT m3.f1, m3.f0, m3.t0, m3.t1 FROM m3 WHERE NOT (NOT (NOT (NOT (((((((m3.f1)AND(TRUE)))OR(m3.f1)))OR(m3.f1))))));
----

query T rowsort
SELECT m3.f1, m3.f0, m3.t0, m3.t1 FROM m3 WHERE (NOT (NOT (NOT (((((((m3.f1)AND(TRUE)))OR(m3.f1)))OR(m3.f1)))))) IS NULL;
----

query error Arrow error: Io error: Status \{ code: Internal, message: "Execute logical plan: Datafusion: Schema error: No field named m0\.time\. Valid fields are \\"SUM\(\(\- m0\.t0 \|\| m0\.f1\)\)\\"\.", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT SUM(- (CAST(CAST(((m0.t0)||(m0.f1)) AS BIGINT) AS BIGINT))) FROM m0 ORDER BY m0.time;

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Schema error: No field named time\. Valid fields are agg0, \\"SUM\(\(\- m0\.t0 \|\| m0\.f1\)\)\\"\.", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT SUM(agg0) FROM ((SELECT ALL SUM(- (CAST(CAST(((m0.t0)||(m0.f1)) AS BIGINT) AS BIGINT)))  as agg0 FROM m0 WHERE FALSE ORDER BY m0.time) UNION ALL (SELECT SUM(- (CAST(CAST(((m0.t0)||(m0.f1)) AS BIGINT) AS BIGINT)))  as agg0 FROM m0 WHERE NOT (FALSE) ORDER BY m0.time) UNION ALL (SELECT ALL SUM(- (CAST(CAST(((m0.t0)||(m0.f1)) AS BIGINT) AS BIGINT)))  as agg0 FROM m0 WHERE (FALSE) IS NULL ORDER BY time)) as asdf;

query T rowsort
SELECT ALL * FROM m4;
----
1970-01-01T00:00:00 "t0" "t1" "t2" 0

query T rowsort
SELECT * FROM m4 WHERE ((+ (m4.f0)) IN (0.1404597703313497)) IS TRUE;
----

query T rowsort
SELECT ALL * FROM m4 WHERE NOT (((+ (m4.f0)) IN (0.1404597703313497)) IS TRUE);
----
1970-01-01T00:00:00 "t0" "t1" "t2" 0

query T rowsort
SELECT ALL * FROM m4 WHERE (((+ (m4.f0)) IN (0.1404597703313497)) IS TRUE) IS NULL;
----

query T rowsort
SELECT ALL m1.f0, m1.f1 FROM m1;
----
"NULL" false
"f0" false

query T rowsort
SELECT ALL m1.f0, m1.f1 FROM m1 WHERE (m1.f0) NOT IN ('o⥖!Z');
----
"f0" false

query T rowsort
SELECT ALL m1.f0, m1.f1 FROM m1 WHERE NOT ((m1.f0) NOT IN ('o⥖!Z'));
----

query T rowsort
SELECT ALL m1.f0, m1.f1 FROM m1 WHERE ((m1.f0) NOT IN ('o⥖!Z')) IS NULL;
----
"NULL" false

query T rowsort
SELECT m1.t0, m1.f0, m1.f1 FROM m1;
----
"NULL" "NULL" false
"t0" "f0" false

query T rowsort
SELECT m1.t0, m1.f0, m1.f1 FROM m1 WHERE NOT ((((m1.t0) NOT IN ('Z6e'))IS DISTINCT FROM(((((m1.f0)||(328069355)))LIKE(CAST(-996794753 AS STRING)))))) UNION ALL SELECT ALL m1.t0, m1.f0, m1.f1 FROM m1 WHERE NOT (NOT ((((m1.t0) NOT IN ('Z6e'))IS DISTINCT FROM(((((m1.f0)||(328069355)))LIKE(CAST(-996794753 AS STRING))))))) UNION ALL SELECT m1.t0, m1.f0, m1.f1 FROM m1 WHERE (NOT ((((m1.t0) NOT IN ('Z6e'))IS DISTINCT FROM(((((m1.f0)||(328069355)))LIKE(CAST(-996794753 AS STRING))))))) IS NULL;
----
"NULL" "NULL" false
"t0" "f0" false

# SELECT ALL m0.t0, m4.f0, m4.t1, m0.f1 FROM m4 LEFT OUTER JOIN m0 ON (((m4.f0) NOT IN (0.6789063307119227, 0.47961663801399057))=((((((m0.t0) NOT IN ('r', ''))OR(CAST(CAST(m4.t0 AS BIGINT) AS BOOLEAN))))OR(((0.15759910870228078)>(0.28587660347767907))))));
# SELECT m2.f0, m1.f1, m2.f1, m1.t0, m1.f0, m3.f1, m3.f0, m3.t0 FROM m1, m2 JOIN m3 ON ((CAST(CAST(m1.f1 AS STRING) AS STRING)) BETWEEN (CAST(((m2.t0)LIKE(m2.f1)) AS STRING)) AND (CAST('Wb' AS STRING))) IS FALSE;
# SELECT ALL * FROM m3, m0, m1 CROSS JOIN m4 LEFT OUTER JOIN m2 ON CAST(NOT (((('c
# ')||(m4.f0))) BETWEEN SYMMETRIC (CAST(m4.f0 AS STRING)) AND (((m3.t0)||(m2.f0)))) AS BOOLEAN);
query T rowsort
SELECT m0.f0, m0.f1, m0.t0 FROM m0;
----
NULL 0.47166914414715877 "NULL"
NULL 0.507623643211476 "916053861"
false 0.0 "t0"
false 0.6326195071473769 "NULL"
true 0.4131558313302025 "NULL"
true 0.5469987105166848 "NULL"
true 0.5540439337463335 "NULL"
true 0.9622249970170084 "NULL"
true NULL "NULL"
true NULL "NULL"
true NULL "NULL"
true NULL "NULL"

query T rowsort
SELECT m0.f0, m0.f1, m0.t0 FROM m0 WHERE (((((m0.f0)OR((NOT (m0.f0)) IS NULL)))OR((((m0.f0) IS UNKNOWN)OR((1344908686) NOT IN (1088197086)))))) IS NOT UNKNOWN;
----
NULL 0.47166914414715877 "NULL"
NULL 0.507623643211476 "916053861"
false 0.0 "t0"
false 0.6326195071473769 "NULL"
true 0.4131558313302025 "NULL"
true 0.5469987105166848 "NULL"
true 0.5540439337463335 "NULL"
true 0.9622249970170084 "NULL"
true NULL "NULL"
true NULL "NULL"
true NULL "NULL"
true NULL "NULL"

query T rowsort
SELECT ALL m0.f0, m0.f1, m0.t0 FROM m0 WHERE NOT ((((((m0.f0)OR((NOT (m0.f0)) IS NULL)))OR((((m0.f0) IS UNKNOWN)OR((1344908686) NOT IN (1088197086)))))) IS NOT UNKNOWN);
----

query T rowsort
SELECT ALL m0.f0, m0.f1, m0.t0 FROM m0 WHERE ((((((m0.f0)OR((NOT (m0.f0)) IS NULL)))OR((((m0.f0) IS UNKNOWN)OR((1344908686) NOT IN (1088197086)))))) IS NOT UNKNOWN) IS NULL;
----

# SELECT MAX(CAST(NOT ((CAST(m3.f0 AS BOOLEAN)) IS FALSE) AS STRING)) FROM m3, m0 LEFT OUTER JOIN m4 ON CAST(- (- (+ (m4.f0))) AS BOOLEAN);
# SELECT m1.t0, m4.t2, m1.f1, m4.t1, m4.t0, m1.f0 FROM m1 FULL OUTER JOIN m4 ON m1.f1;
query T rowsort
SELECT COUNT(CAST(- (CAST(CAST(TRUE AS BIGINT) AS BIGINT)) AS BIGINT)) FROM m0;
----
12

query T rowsort
SELECT ALL m0.t0, m0.f1, m0.f0 FROM m0;
----
"916053861" 0.507623643211476 NULL
"NULL" 0.4131558313302025 true
"NULL" 0.47166914414715877 NULL
"NULL" 0.5469987105166848 true
"NULL" 0.5540439337463335 true
"NULL" 0.6326195071473769 false
"NULL" 0.9622249970170084 true
"NULL" NULL true
"NULL" NULL true
"NULL" NULL true
"NULL" NULL true
"t0" 0.0 false

query T rowsort
SELECT m0.t0, m0.f1, m0.f0 FROM m0 WHERE CAST(CAST(0.6794906407129125 AS BOOLEAN) AS BOOLEAN);
----
"916053861" 0.507623643211476 NULL
"NULL" 0.4131558313302025 true
"NULL" 0.47166914414715877 NULL
"NULL" 0.5469987105166848 true
"NULL" 0.5540439337463335 true
"NULL" 0.6326195071473769 false
"NULL" 0.9622249970170084 true
"NULL" NULL true
"NULL" NULL true
"NULL" NULL true
"NULL" NULL true
"t0" 0.0 false

query T rowsort
SELECT m1.f0, m1.t0, m1.f1 FROM m1;
----
"NULL" "NULL" false
"f0" "t0" false

query T rowsort
SELECT ALL m1.f0, m1.t0, m1.f1 FROM m1 WHERE (CAST(CAST((m1.t0) BETWEEN (m1.t0) AND (m1.f0) AS STRING) AS BIGINT)) IS NULL;
----

query T rowsort
SELECT ALL m0.f0 FROM m0 ORDER BY m0.f0 DESC;
----
NULL
NULL
false
false
true
true
true
true
true
true
true
true

query T rowsort
SELECT m0.f0 FROM m0 WHERE ((m0.f0) NOT IN (FALSE, TRUE)) NOT IN (FALSE);
----

query T rowsort
SELECT m0.f0 FROM m0 WHERE NOT (((m0.f0) NOT IN (FALSE, TRUE)) NOT IN (FALSE));
----
false
false
true
true
true
true
true
true
true
true

query T rowsort
SELECT ALL m0.f0 FROM m0 WHERE (((m0.f0) NOT IN (FALSE, TRUE)) NOT IN (FALSE)) IS NULL;
----
NULL
NULL

query T rowsort
SELECT ALL BOOL_AND((0.7125738444099359) NOT IN (0.17193890888962704, 0.5773990828254518)) FROM m1 GROUP BY ((- (CAST(((m1.t0)LIKE(m1.f0)) AS BIGINT)))*(CAST(-33990896 AS BIGINT)));
----
true
true

# SELECT m3.f1, m1.f1 FROM m2, m3 FULL OUTER JOIN m1 ON CAST(+ (+ (m3.f0)) AS BOOLEAN) RIGHT OUTER JOIN (SELECT ((0.845055480936287) BETWEEN (0.5625770447531294) AND (0.14836202190618752)) IS TRUE, - (CAST(CAST(((m3.f0)^(m4.f0)) AS BOOLEAN) AS BIGINT)), + (- (- (+ (m4.f0)))) FROM m2, m4, m0, m3) AS sub0 ON m1.f1;
# SELECT m2.f0, m4.t1, m4.f0, m3.f0, m3.f1, m4.t2, m2.f1, m3.t0 FROM m3, m2 CROSS JOIN m4;
# SELECT m2.f0, m4.t1, m4.f0, m3.f0, m3.f1, m4.t2, m2.f1, m3.t0 FROM m3, m2 CROSS JOIN m4 WHERE CAST(m2.f0 AS BOOLEAN) UNION ALL SELECT ALL m2.f0, m4.t1, m4.f0, m3.f0, m3.f1, m4.t2, m2.f1, m3.t0 FROM m3, m2 CROSS JOIN m4 WHERE NOT (CAST(m2.f0 AS BOOLEAN)) UNION ALL SELECT m2.f0, m4.t1, m4.f0, m3.f0, m3.f1, m4.t2, m2.f1, m3.t0 FROM m3, m2 CROSS JOIN m4 WHERE (CAST(m2.f0 AS BOOLEAN)) IS NULL;
# SELECT m3.t1 FROM m1 JOIN m3 ON NOT ((((CAST(m3.f0 AS STRING))LIKE(CAST(m3.f0 AS STRING)))) BETWEEN SYMMETRIC (((+ (m3.f0))IS NOT DISTINCT FROM(((m3.f0)^(m3.f0))))) AND (((m3.f0) NOT IN (-1731344498)) BETWEEN SYMMETRIC (((m1.f0)LIKE(m3.t1))) AND ((m1.t0) NOT IN ('>', 'ꈼaD['))));
query T rowsort
SELECT m3.f0, m3.t0 FROM m3;
----
0 "t0"

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m3.f0, m3.t0 FROM m3 WHERE NOT (CAST(((m3.f0) BETWEEN SYMMETRIC (m3.f0) AND (m3.f0)) IS FALSE AS BOOLEAN)) UNION ALL SELECT ALL m3.f0, m3.t0 FROM m3 WHERE NOT (NOT (CAST(((m3.f0) BETWEEN SYMMETRIC (m3.f0) AND (m3.f0)) IS FALSE AS BOOLEAN))) UNION ALL SELECT m3.f0, m3.t0 FROM m3 WHERE (NOT (CAST(((m3.f0) BETWEEN SYMMETRIC (m3.f0) AND (m3.f0)) IS FALSE AS BOOLEAN))) IS NULL;

# SELECT BOOL_OR(m3.f1) FROM m4, m3 FULL OUTER JOIN m0 ON (CAST(((m3.f0)*(-211818336)) AS STRING)) IN ('~Uq,g');
query T rowsort
SELECT ALL * FROM m2;
----
1970-01-01T00:00:00 "t0" false "f1"

query T rowsort
SELECT ALL * FROM m2 WHERE m2.f0;
----

query T rowsort
SELECT * FROM m2 WHERE NOT (m2.f0);
----
1970-01-01T00:00:00 "t0" false "f1"

query T rowsort
SELECT * FROM m2 WHERE (m2.f0) IS NULL;
----

# SELECT m1.t0, m4.t1, m4.f0, m2.t0, m1.f0, m0.t0, m0.f1, m4.t0, m2.f1, m2.f0, m0.f0, m1.f1 FROM m0, m4 LEFT OUTER JOIN m1 ON m2.f0 FULL OUTER JOIN m2 ON CAST(m4.f0 AS BOOLEAN);
query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Arrow: Cast error: Cannot cast string 'f00' to value of Int64 type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL COUNT(+ (CAST(((m1.f0)||(((m1.f0)LIKE(m1.t0)))) AS BIGINT))) FROM m1;

query T rowsort
SELECT m3.f0 FROM m3;
----
0

query T rowsort
SELECT ALL m3.f0 FROM m3 WHERE m3.f1 UNION ALL SELECT ALL m3.f0 FROM m3 WHERE NOT (m3.f1) UNION ALL SELECT ALL m3.f0 FROM m3 WHERE (m3.f1) IS NULL;
----
0

# SELECT m4.t1, m1.t0, m1.f1, m3.f1, m3.t1, m1.f0, m3.f0, m4.f0, m4.t0 FROM m4, m1 RIGHT OUTER JOIN m3 ON CAST(CAST(CAST(((m3.f0)/(m4.f0)) AS BIGINT) AS STRING) AS BOOLEAN);
query T rowsort
SELECT m2.f1, m2.f0 FROM m2 ORDER BY m2.f0 DESC, m2.f1 DESC;
----
"f1" false

query T rowsort
SELECT ALL m2.f1, m2.f0 FROM m2 WHERE CAST(419225566 AS BOOLEAN);
----
"f1" false

query T rowsort
SELECT ALL m2.f1, m2.f0 FROM m2 WHERE NOT (CAST(419225566 AS BOOLEAN));
----

query T rowsort
SELECT m2.f1, m2.f0 FROM m2 WHERE (CAST(419225566 AS BOOLEAN)) IS NULL;
----

query T rowsort
SELECT m3.f0 FROM m3;
----
0

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Arrow: Cast error: Cannot cast string 't0\-436419271' to value of Int64 type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m3.f0 FROM m3 WHERE ((((((CAST(CAST(((m3.t0)||('-436419271')) AS BIGINT) AS BOOLEAN))OR(CAST(CAST(((m3.t0)||(m3.f0)) AS BIGINT) AS BOOLEAN))))OR((CAST(m3.f0 AS BIGINT)) NOT IN (-1775866416, -458215714, -1147259432))))AND(((((((((((m3.f1)OR(m3.f1)))OR(m3.f1)))AND(m3.f1)))OR(m3.f1))) IS NULL) IS FALSE)) UNION ALL SELECT m3.f0 FROM m3 WHERE NOT (((((((CAST(CAST(((m3.t0)||('-436419271')) AS BIGINT) AS BOOLEAN))OR(CAST(CAST(((m3.t0)||(m3.f0)) AS BIGINT) AS BOOLEAN))))OR((CAST(m3.f0 AS BIGINT)) NOT IN (-1775866416, -458215714, -1147259432))))AND(((((((((((m3.f1)OR(m3.f1)))OR(m3.f1)))AND(m3.f1)))OR(m3.f1))) IS NULL) IS FALSE))) UNION ALL SELECT ALL m3.f0 FROM m3 WHERE (((((((CAST(CAST(((m3.t0)||('-436419271')) AS BIGINT) AS BOOLEAN))OR(CAST(CAST(((m3.t0)||(m3.f0)) AS BIGINT) AS BOOLEAN))))OR((CAST(m3.f0 AS BIGINT)) NOT IN (-1775866416, -458215714, -1147259432))))AND(((((((((((m3.f1)OR(m3.f1)))OR(m3.f1)))AND(m3.f1)))OR(m3.f1))) IS NULL) IS FALSE))) IS NULL;

# SELECT m3.t1, m4.f0, m0.t0, m2.f0, m4.t0, m0.f1, m4.t1, m2.f1 FROM m3, m2 RIGHT OUTER JOIN m4 ON CAST(((CAST((('E')IS NOT DISTINCT FROM(m0.t0)) AS STRING))LIKE(CAST(m3.t0 AS STRING))) AS BOOLEAN) RIGHT OUTER JOIN m0 ON m0.f0;
# SELECT ALL m0.f0, m0.t0 FROM m1 FULL OUTER JOIN m0 ON (((('U')IS DISTINCT FROM(((m1.f0)||(m0.f1))))) BETWEEN SYMMETRIC ((m1.t0) IN ('', '7')) AND (((m0.f1)<=(0.15826799103267142)))) IS FALSE;
# SELECT SUM(- (- (((((m4.f0)+(m4.f0)))%(((m4.f0)%(m4.f0))))))) FROM m0 INNER JOIN m4 ON NOT (NOT ((m4.f0) BETWEEN SYMMETRIC (- (m4.f0)) AND (0.8263429614430379)));
query T rowsort
SELECT ALL SUM(0.7069601217262456) FROM m0;
----
8.483521460714947

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: The function Sum does not support inputs of type Utf8\.", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT SUM(+ ('-991419863')) FROM m0;

# SELECT ALL m3.f0, m3.f1, m2.f1, m2.t0, m3.t1, m3.t0, m2.f0 FROM m2 JOIN m3 ON (+ (- (m3.f0))) IN (380177119, 416059412);
# SELECT ALL m3.f0, m3.f1, m2.f1, m2.t0, m3.t1, m3.t0, m2.f0 FROM m2 INNER JOIN m3 ON (+ (- (m3.f0))) IN (380177119, 416059412) WHERE m2.f0;
# SELECT m3.f0, m3.f1, m2.f1, m2.t0, m3.t1, m3.t0, m2.f0 FROM m2 JOIN m3 ON (+ (- (m3.f0))) IN (380177119, 416059412) WHERE NOT (m2.f0);
# SELECT m3.f0, m3.f1, m2.f1, m2.t0, m3.t1, m3.t0, m2.f0 FROM m2 JOIN m3 ON (+ (- (m3.f0))) IN (380177119, 416059412) WHERE (m2.f0) IS NULL;
# SELECT ALL BIT_OR(- (- (-482223924))) FROM m2, m1 RIGHT OUTER JOIN m3 ON NOT (CAST(0.4345820856258579 AS BOOLEAN)) RIGHT OUTER JOIN m4 ON CAST(CAST(+ (CAST(m4.t0 AS BIGINT)) AS STRING) AS BOOLEAN);
# SELECT m1.t0 FROM m1;
query T rowsort
SELECT ALL m1.t0 FROM m1 WHERE NOT ((+ (1827659846)) NOT IN (-1398969998));
----

# SELECT ALL m1.t0 FROM m1 WHERE NOT (NOT ((+ (1827659846)) NOT IN (-1398969998)));
query T rowsort
SELECT ALL m1.t0 FROM m1 WHERE (NOT ((+ (1827659846)) NOT IN (-1398969998))) IS NULL;
----

query T rowsort
SELECT m0.f0, m0.t0 FROM m0;
----
NULL "916053861"
NULL "NULL"
false "NULL"
false "t0"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"

query T rowsort
SELECT m0.f0, m0.t0 FROM m0 WHERE NOT ((((m0.t0)LIKE(m0.t0))) NOT IN (FALSE, FALSE, TRUE)) UNION ALL SELECT m0.f0, m0.t0 FROM m0 WHERE NOT (NOT ((((m0.t0)LIKE(m0.t0))) NOT IN (FALSE, FALSE, TRUE))) UNION ALL SELECT m0.f0, m0.t0 FROM m0 WHERE (NOT ((((m0.t0)LIKE(m0.t0))) NOT IN (FALSE, FALSE, TRUE))) IS NULL;
----
NULL "916053861"
NULL "NULL"
false "NULL"
false "t0"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"

query T rowsort
SELECT m3.f1 FROM m3;
----
false

query T rowsort
SELECT ALL m3.f1 FROM m3 WHERE (CAST((('%		ad')||(FALSE)) AS STRING)) IN ('40SM9L');
----

query T rowsort
SELECT ALL m2.f0, m2.f1, m2.t0 FROM m2;
----
false "f1" "t0"

query T rowsort
SELECT m2.f0, m2.f1, m2.t0 FROM m2 WHERE NOT (((CAST(0.4959073694270356 AS STRING))=(CAST(0.5285828870262033 AS STRING)))) UNION ALL SELECT m2.f0, m2.f1, m2.t0 FROM m2 WHERE NOT (NOT (((CAST(0.4959073694270356 AS STRING))=(CAST(0.5285828870262033 AS STRING))))) UNION ALL SELECT m2.f0, m2.f1, m2.t0 FROM m2 WHERE (NOT (((CAST(0.4959073694270356 AS STRING))=(CAST(0.5285828870262033 AS STRING))))) IS NULL;
----
false "f1" "t0"

# SELECT * FROM m3 LEFT OUTER JOIN (SELECT 0.2718151377603307, CAST(m4.f0 AS BIGINT) FROM m3, m1, m0, m4, m2 WHERE m0.f0 LIMIT 5098408725539117576 OFFSET 1521929281821357316) AS sub0 ON m3.f1;
# SELECT * FROM m3 LEFT OUTER JOIN (SELECT 0.2718151377603307, CAST(m4.f0 AS BIGINT) FROM m3, m1, m0, m4, m2 WHERE m0.f0 LIMIT 5098408725539117576 OFFSET 1521929281821357316) AS sub0 ON m3.f1 WHERE CAST(0.9918355127206689 AS BOOLEAN);
# SELECT ALL m0.f0 FROM m0 INNER JOIN m3 ON CAST(2.6056234E7 AS BOOLEAN) LEFT OUTER JOIN (SELECT ((CAST(CAST(0.20532802586317356 AS BIGINT) AS BIGINT))%(416542755)) FROM m1, m0, m2 LIMIT 7581396220985088723) AS sub0 ON m3.f1;
query T rowsort
SELECT ALL SUM(-996695851) FROM m0;
----
-11960350212

# SELECT m2.f0, m2.f1 FROM m4 RIGHT OUTER JOIN m2 ON ((((NOT (((NOT (m2.f0))AND((('褜+N!\')IS DISTINCT FROM(m2.f1))))))OR((CAST(m2.t0 AS STRING)) IN (NULL))))OR(m2.f0));
# SELECT m3.t1, m3.t0, m4.t1, m3.f0, m1.f0 FROM m1, m4 INNER JOIN m3 ON NOT (CAST((m3.f0) IN (1202540920, -1280486495) AS BOOLEAN));
# SELECT ALL m3.t1, m3.t0, m4.t1, m3.f0, m1.f0 FROM m1, m4 INNER JOIN m3 ON NOT (CAST((m3.f0) IN (1202540920, -1280486495) AS BOOLEAN)) WHERE CAST(CAST(6.94936525E8 AS STRING) AS BOOLEAN);
# SELECT ALL BIT_OR(+ (+ (+ (CAST(1617953093 AS BIGINT))))) FROM m0, m2 RIGHT OUTER JOIN m1 ON CAST(1892385361 AS BOOLEAN);
# SELECT BIT_OR(agg0) FROM (SELECT BIT_OR(+ (+ (+ (CAST(1617953093 AS BIGINT)))))  as agg0 FROM m0, m2 RIGHT OUTER JOIN m1 ON CAST(1892385361 AS BOOLEAN) WHERE m1.f1 UNION ALL SELECT ALL BIT_OR(+ (+ (+ (CAST(1617953093 AS BIGINT)))))  as agg0 FROM m0, m2 RIGHT OUTER JOIN m1 ON CAST(1892385361 AS BOOLEAN) WHERE NOT (m1.f1) UNION ALL SELECT ALL BIT_OR(+ (+ (+ (CAST(1617953093 AS BIGINT)))))  as agg0 FROM m0, m2 RIGHT OUTER JOIN m1 ON CAST(1892385361 AS BOOLEAN) WHERE (m1.f1) IS NULL) as asdf;
query error Arrow error: Io error: Status \{ code: Internal, message: "Execute logical plan: Datafusion: Schema error: No field named m2\.f1\. Valid fields are \\"MAX\(m2\.f1\)\\"\.", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT MAX(m2.f1) FROM m2 ORDER BY m2.f1 ASC;

# SELECT ALL m3.t1, m3.t0 FROM m3;
query error Arrow error: Io error: Status \{ code: Internal, message: "Execute logical plan: Datafusion: type_coercion\\ncaused by\\nError during planning: Can not find compatible types to compare Boolean with \[Boolean, Boolean, Utf8\]", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m3.t1, m3.t0 FROM m3 WHERE (((CAST(m3.t1 AS STRING))LIKE(((m3.t1)||(m3.f1))))) NOT IN (TRUE, TRUE, '0') UNION ALL SELECT m3.t1, m3.t0 FROM m3 WHERE NOT ((((CAST(m3.t1 AS STRING))LIKE(((m3.t1)||(m3.f1))))) NOT IN (TRUE, TRUE, '0')) UNION ALL SELECT ALL m3.t1, m3.t0 FROM m3 WHERE ((((CAST(m3.t1 AS STRING))LIKE(((m3.t1)||(m3.f1))))) NOT IN (TRUE, TRUE, '0')) IS NULL;

# SELECT ALL MAX(CAST(0.37736539973880756 AS BIGINT)) FROM m0 LEFT OUTER JOIN m4 ON CAST(CAST(+ (+ (m4.f0)) AS BIGINT) AS BOOLEAN);
# SELECT m1.f0, m1.t0, m0.f1 FROM m0 JOIN m1 ON (0.2042596054318523) IS NULL ORDER BY m1.f1 DESC;
# SELECT ALL m1.f0, m1.t0, m0.f1 FROM m0 JOIN m1 ON (0.2042596054318523) IS NULL WHERE CAST(CAST((CAST(m1.f1 AS STRING)) IS NOT NULL AS STRING) AS BOOLEAN);
# SELECT ALL COUNT(m3.f0) FROM m3, m4 LEFT OUTER JOIN m1 ON NOT ((((m4.f0)%(m3.f0))) NOT IN (-196011811));
query T rowsort
SELECT ALL m2.f1, m2.t0 FROM m2;
----
"f1" "t0"

query T rowsort
SELECT m2.f1, m2.t0 FROM m2 WHERE CAST(+ (CAST((('쨭')LIKE(m2.t0)) AS BIGINT)) AS BOOLEAN);
----

# SELECT ALL m3.f1, m4.t2, m4.t1, m3.f0, m3.t0, m4.f0 FROM m4 RIGHT OUTER JOIN m3 ON m3.f1 ORDER BY m3.f0 DESC;
# SELECT m3.f1, m4.t2, m4.t1, m3.f0, m3.t0, m4.f0 FROM m4 RIGHT OUTER JOIN m3 ON m3.f1 WHERE (CAST((m3.t1) BETWEEN SYMMETRIC (m4.t1) AND (m3.t1) AS BOOLEAN)) NOT IN (TRUE) UNION ALL SELECT m3.f1, m4.t2, m4.t1, m3.f0, m3.t0, m4.f0 FROM m4 RIGHT OUTER JOIN m3 ON m3.f1 WHERE NOT ((CAST((m3.t1) BETWEEN SYMMETRIC (m4.t1) AND (m3.t1) AS BOOLEAN)) NOT IN (TRUE)) UNION ALL SELECT m3.f1, m4.t2, m4.t1, m3.f0, m3.t0, m4.f0 FROM m4 RIGHT OUTER JOIN m3 ON m3.f1 WHERE ((CAST((m3.t1) BETWEEN SYMMETRIC (m4.t1) AND (m3.t1) AS BOOLEAN)) NOT IN (TRUE)) IS NULL;
# SELECT ALL m4.t1, m4.t0, m4.t2 FROM m4;
# SELECT m4.t1, m4.t0, m4.t2 FROM m4 WHERE (CAST(0.45727184971342283 AS STRING)) NOT IN ('K꟧w', 'c঄঄C∮');
# SELECT ALL m1.t0 FROM m1 RIGHT OUTER JOIN m2 ON (((CAST(+ (1319304764) AS STRING)) NOTNULL)AND((((CAST(1617953093 AS STRING))||(((m1.f0)||(m2.f1))))) BETWEEN (CAST(m1.f1 AS STRING)) AND (CAST(CAST(-414963173 AS BIGINT) AS STRING))));
# SELECT * FROM m2 RIGHT OUTER JOIN m0 ON ((((CAST(0.18293954517704092 AS BOOLEAN))OR(CAST(- (((1)^(272315161))) AS BOOLEAN))))OR(CAST(CAST(((31630506)/(-465609336)) AS STRING) AS BOOLEAN)));
query T rowsort
SELECT BIT_OR(574679056) FROM m0;
----
574679056

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT BIT_OR(agg0) FROM (SELECT ALL BIT_OR(574679056)  as agg0 FROM m0 WHERE (0.8987548809734333) BETWEEN SYMMETRIC (0.9080665405886834) AND (1819388991) UNION ALL SELECT BIT_OR(574679056)  as agg0 FROM m0 WHERE NOT ((0.8987548809734333) BETWEEN SYMMETRIC (0.9080665405886834) AND (1819388991)) UNION ALL SELECT BIT_OR(574679056)  as agg0 FROM m0 WHERE ((0.8987548809734333) BETWEEN SYMMETRIC (0.9080665405886834) AND (1819388991)) IS NULL) as asdf;

query T rowsort
SELECT ALL m3.f1 FROM m3;
----
false

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Arrow: Cast error: Cannot cast string 't1360976499\.0' to value of Int64 type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m3.f1 FROM m3 WHERE CAST(((CAST(CAST(FALSE AS BIGINT) AS STRING))||(CAST(((m3.t1)||(3.60976499E8)) AS BIGINT))) AS BOOLEAN) UNION ALL SELECT m3.f1 FROM m3 WHERE NOT (CAST(((CAST(CAST(FALSE AS BIGINT) AS STRING))||(CAST(((m3.t1)||(3.60976499E8)) AS BIGINT))) AS BOOLEAN)) UNION ALL SELECT m3.f1 FROM m3 WHERE (CAST(((CAST(CAST(FALSE AS BIGINT) AS STRING))||(CAST(((m3.t1)||(3.60976499E8)) AS BIGINT))) AS BOOLEAN)) IS NULL;

query T rowsort
SELECT ALL m3.f0, m3.f1 FROM m3;
----
0 false

query T rowsort
SELECT ALL m3.f0, m3.f1 FROM m3 WHERE m3.f1;
----

query T rowsort
SELECT ALL m3.f0, m3.f1 FROM m3 WHERE NOT (m3.f1);
----
0 false

query T rowsort
SELECT m3.f0, m3.f1 FROM m3 WHERE (m3.f1) IS NULL;
----

query T rowsort
SELECT ALL SUM(0.05995030089566167) FROM m4;
----
0.05995030089566167

# SELECT m0.f1, m3.t0, m0.t0, m4.t1, m4.t0, m3.f0, m0.f0, m4.t2, m3.f1, m4.f0, m3.t1 FROM m0, m3 CROSS JOIN m4;
# SELECT m0.f1, m3.t0, m0.t0, m4.t1, m4.t0, m3.f0, m0.f0, m4.t2, m3.f1, m4.f0, m3.t1 FROM m0, m3 CROSS JOIN m4 WHERE ((((m0.f0)OR((m3.t0) NOT IN ('', ''))))OR(NOT ((1137171542) NOT IN (343851235, -524503912))));
# SELECT m0.f1, m3.t0, m0.t0, m4.t1, m4.t0, m3.f0, m0.f0, m4.t2, m3.f1, m4.f0, m3.t1 FROM m0, m3 CROSS JOIN m4 WHERE NOT (((((m0.f0)OR((m3.t0) NOT IN ('', ''))))OR(NOT ((1137171542) NOT IN (343851235, -524503912)))));
# SELECT m0.f1, m3.t0, m0.t0, m4.t1, m4.t0, m3.f0, m0.f0, m4.t2, m3.f1, m4.f0, m3.t1 FROM m0, m3 CROSS JOIN m4 WHERE (((((m0.f0)OR((m3.t0) NOT IN ('', ''))))OR(NOT ((1137171542) NOT IN (343851235, -524503912))))) IS NULL;
query T rowsort
SELECT ALL m3.f0, m3.f1, m3.t0 FROM m3;
----
0 false "t0"

query T rowsort
SELECT ALL m3.f0, m3.f1, m3.t0 FROM m3 WHERE (+ (- (m3.f0))) NOT IN (1748341658, 372263557, 371778182) UNION ALL SELECT ALL m3.f0, m3.f1, m3.t0 FROM m3 WHERE NOT ((+ (- (m3.f0))) NOT IN (1748341658, 372263557, 371778182)) UNION ALL SELECT m3.f0, m3.f1, m3.t0 FROM m3 WHERE ((+ (- (m3.f0))) NOT IN (1748341658, 372263557, 371778182)) IS NULL;
----
0 false "t0"

# SELECT ALL m1.t0, m3.t1, m1.f1 FROM m1 LEFT OUTER JOIN m3 ON CAST(0.30988186602086853 AS BOOLEAN);
query T rowsort
SELECT m1.f0, m1.f1, m1.t0 FROM m1;
----
"NULL" false "NULL"
"f0" false "t0"

query T rowsort
SELECT m1.f0, m1.f1, m1.t0 FROM m1 WHERE ((((CAST(-174538563 AS STRING))<(((m1.f0)||(m1.t0))))) IS UNKNOWN) IS FALSE UNION ALL SELECT ALL m1.f0, m1.f1, m1.t0 FROM m1 WHERE NOT (((((CAST(-174538563 AS STRING))<(((m1.f0)||(m1.t0))))) IS UNKNOWN) IS FALSE) UNION ALL SELECT ALL m1.f0, m1.f1, m1.t0 FROM m1 WHERE (((((CAST(-174538563 AS STRING))<(((m1.f0)||(m1.t0))))) IS UNKNOWN) IS FALSE) IS NULL;
----
"NULL" false "NULL"
"f0" false "t0"

# SELECT ALL m4.f0 FROM m4 INNER JOIN (SELECT ((CAST((((((m2.f0)AND(m2.f0)))OR(m2.f0))) IS NOT UNKNOWN AS STRING))||(CAST(((- (-1691280196))/(((-1418552606)-(-1959534426)))) AS BIGINT))) FROM m2 LIMIT 8472976802583984241) AS sub0 ON (0.6168943811578553) IN (0.28800328124497054);
# SELECT ALL m3.f1, m3.t0, m0.f0 FROM m2, m3 RIGHT OUTER JOIN m0 ON (0.2576924491838173) IS NULL LEFT OUTER JOIN (SELECT ALL CAST(0.8875389782623476 AS STRING), 0.567139172764168 FROM m0, m2) AS sub0 ON (((m3.t0) NOT IN ('_', '')) IS TRUE) IS UNKNOWN ORDER BY m2.f0 DESC, m2.f0 ASC;
# SELECT m0.f1, m0.f0, m1.t0 FROM m0 JOIN m1 ON (m1.f1) IS UNKNOWN;
# SELECT ALL m0.f1, m0.f0, m1.t0 FROM m0 JOIN m1 ON (m1.f1) IS UNKNOWN WHERE NOT (((((m1.t0)||(((m1.t0)||(m0.f1)))))LIKE(((((m1.t0)||(m1.f1)))||((('N')||(m0.f0)))))));
# SELECT m0.f1, m0.f0, m1.t0 FROM m0 JOIN m1 ON (m1.f1) IS UNKNOWN WHERE NOT (NOT (((((m1.t0)||(((m1.t0)||(m0.f1)))))LIKE(((((m1.t0)||(m1.f1)))||((('N')||(m0.f0))))))));
# SELECT m0.f1, m0.f0, m1.t0 FROM m0 JOIN m1 ON (m1.f1) IS UNKNOWN WHERE (NOT (((((m1.t0)||(((m1.t0)||(m0.f1)))))LIKE(((((m1.t0)||(m1.f1)))||((('N')||(m0.f0)))))))) IS NULL;
# SELECT m2.f1, m2.f0, m2.t0, m1.t0 FROM m1 FULL OUTER JOIN m2 ON CAST(0.5953367841109433 AS BOOLEAN);
# SELECT ALL m1.t0, m1.f1, m3.t0, m3.f0, m0.f0, m0.f1, m4.f0, m2.f0, m3.t1, m4.t1, m1.f0, m3.f1 FROM m0, m4, m1 INNER JOIN m2 ON (NOT (CAST(CAST(m0.t0 AS BIGINT) AS BOOLEAN))) IS UNKNOWN CROSS JOIN m3;
# SELECT ALL m0.t0, m0.f1, m1.t0, m1.f0, m1.f1, m0.f0 FROM m1 RIGHT OUTER JOIN m0 ON ((NOT ((m0.t0) IN ('ITtMA ', '>'))) IS NOT UNKNOWN) IS NOT UNKNOWN;
# SELECT ALL m0.t0, m0.f1, m1.t0, m1.f0, m1.f1, m0.f0 FROM m1 RIGHT OUTER JOIN m0 ON ((NOT ((m0.t0) IN ('ITtMA ', '>'))) IS NOT UNKNOWN) IS NOT UNKNOWN WHERE ((3.60976499E8)>(0.9862621910014735)) UNION ALL SELECT ALL m0.t0, m0.f1, m1.t0, m1.f0, m1.f1, m0.f0 FROM m1 RIGHT OUTER JOIN m0 ON ((NOT ((m0.t0) IN ('ITtMA ', '>'))) IS NOT UNKNOWN) IS NOT UNKNOWN WHERE NOT (((3.60976499E8)>(0.9862621910014735))) UNION ALL SELECT m0.t0, m0.f1, m1.t0, m1.f0, m1.f1, m0.f0 FROM m1 RIGHT OUTER JOIN m0 ON ((NOT ((m0.t0) IN ('ITtMA ', '>'))) IS NOT UNKNOWN) IS NOT UNKNOWN WHERE (((3.60976499E8)>(0.9862621910014735))) IS NULL;
query T rowsort
SELECT ALL m3.f1, m3.f0 FROM m3;
----
false 0

query T rowsort
SELECT m3.f1, m3.f0 FROM m3 WHERE NOT (((CAST(((m3.t0)LIKE(m3.t0)) AS STRING))>(CAST(NOT (m3.f1) AS STRING))));
----
false 0

query T rowsort
SELECT m4.t0, m4.f0, m4.t1, m4.t2 FROM m4;
----
"t0" 0 "t1" "t2"

query T rowsort
SELECT ALL m4.t0, m4.f0, m4.t1, m4.t2 FROM m4 WHERE (CAST(CAST(m4.f0 AS BIGINT) AS STRING)) IN ('');
----

# SELECT ALL BOOL_OR((((NOT (m0.f0)) NOT IN (FALSE))OR((CAST(((m0.t0)||(m0.f0)) AS BIGINT)) NOTNULL))) FROM m4 RIGHT OUTER JOIN m0 ON m0.f0;
# SELECT m4.t0, m4.t1 FROM m4;
# SELECT m4.t0, m4.t1 FROM m4 WHERE CAST(CAST(m4.t2 AS STRING) AS BOOLEAN);
# SELECT m4.t0, m4.t1, m4.t2, m0.f0 FROM m0 FULL OUTER JOIN m4 ON m0.f0;
# SELECT m2.t0, m0.t0, m2.f0, m4.f0, m4.t2 FROM m0, m2 JOIN m4 ON ((CAST(CAST(CAST(m2.f0 AS BOOLEAN) AS BIGINT) AS STRING))LIKE('皓薹IO#p
# J'));
# SELECT ALL SUM(0.6764263376436236) FROM m4 RIGHT OUTER JOIN m1 ON NOT (('%./>FBB%') BETWEEN (((((m1.f0)||(350532422)))||(0.001962650189744064))) AND (CAST(((m4.t0)||(m1.f1)) AS STRING)));
query T rowsort
SELECT ALL m2.f1 FROM m2;
----
"f1"

query T rowsort
SELECT m2.f1 FROM m2 WHERE (CAST(CAST(0.6892324924915867 AS BIGINT) AS STRING)) NOT IN ('C', '');
----
"f1"

# SELECT ALL m4.t0, m4.t2, m4.t1 FROM m4 ORDER BY m4.t2 DESC;
query T rowsort
SELECT m4.t0, m4.t2, m4.t1 FROM m4 WHERE ((CAST(CAST(((m4.t2)||(m4.f0)) AS STRING) AS STRING))<=(CAST(((CAST(m4.f0 AS BIGINT))/(((797420618)-(1252885071)))) AS STRING)));
----

query T rowsort
SELECT m1.f0, m1.f1, m1.t0 FROM m1;
----
"NULL" false "NULL"
"f0" false "t0"

query T rowsort
SELECT ALL m1.f0, m1.f1, m1.t0 FROM m1 WHERE CAST(+ (- (((360976499)^(1111746167)))) AS BOOLEAN) UNION ALL SELECT ALL m1.f0, m1.f1, m1.t0 FROM m1 WHERE NOT (CAST(+ (- (((360976499)^(1111746167)))) AS BOOLEAN)) UNION ALL SELECT ALL m1.f0, m1.f1, m1.t0 FROM m1 WHERE (CAST(+ (- (((360976499)^(1111746167)))) AS BOOLEAN)) IS NULL;
----
"NULL" false "NULL"
"f0" false "t0"

query T rowsort
SELECT ALL m4.t1, m4.f0, m4.t0, m4.t2 FROM m4;
----
"t1" 0 "t0" "t2"

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Arrow: Cast error: Cannot cast value 't2' to value of Boolean type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m4.t1, m4.f0, m4.t0, m4.t2 FROM m4 WHERE CAST(m4.t2 AS BOOLEAN) UNION ALL SELECT m4.t1, m4.f0, m4.t0, m4.t2 FROM m4 WHERE NOT (CAST(m4.t2 AS BOOLEAN)) UNION ALL SELECT ALL m4.t1, m4.f0, m4.t0, m4.t2 FROM m4 WHERE (CAST(m4.t2 AS BOOLEAN)) IS NULL;

query T rowsort
SELECT ALL m2.f0, m2.f1, m2.t0 FROM m2;
----
false "f1" "t0"

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Coordinator: Tskv: Arrow: Cast error: Cannot cast string 'f1' to value of Int64 type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m2.f0, m2.f1, m2.t0 FROM m2 WHERE ((((((((m2.f1)||(1052801116)))||(((m2.f1)||(m2.f0)))))||(CAST(CAST(m2.f1 AS STRING) AS BIGINT))))LIKE(CAST((CAST(FALSE AS BOOLEAN)) IS UNKNOWN AS STRING)));

query T rowsort
SELECT m3.t0, m3.f0, m3.t1, m3.f1 FROM m3;
----
"t0" 0 "t1" false

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: sql parser error: Expected \), found: NOTNULL", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m3.t0, m3.f0, m3.t1, m3.f1 FROM m3 WHERE ((CAST(((CAST(0.3790453382388461 AS STRING))||(((m3.f0)%(m3.f0)))) AS BOOLEAN))OR(NOT ((CAST(m3.f1 AS BOOLEAN)) NOTNULL)));

# SELECT ALL m4.t2, m4.t1, m3.f0, m3.f1, m4.f0, m3.t0 FROM m3, m1, m2 FULL OUTER JOIN m4 ON CAST(CAST(((CAST(m4.t2 AS STRING))<=(CAST(m4.f0 AS STRING))) AS STRING) AS BOOLEAN) FULL OUTER JOIN m0 ON CAST(((CAST(CAST(m1.f0 AS BOOLEAN) AS BIGINT))%(((CAST(m3.f1 AS BIGINT))/(((m4.f0)^(m3.f0)))))) AS BOOLEAN);
# SELECT m2.f0, m1.f1, m1.t0 FROM m2 INNER JOIN m1 ON m1.f1;
# SELECT m2.f0, m1.f1, m1.t0 FROM m2 JOIN m1 ON m1.f1 WHERE ((NOT (NOT ((m2.t0) BETWEEN (m1.t0) AND (m1.t0))))OR((CAST(CAST(-1800798167 AS BIGINT) AS BOOLEAN)) IS TRUE));
# SELECT * FROM m2, m0 INNER JOIN m1 ON (0.8240296493886953) NOT IN (0.15840184878951113, 0.09919755310857103, 0.06111832018275931) CROSS JOIN (SELECT m2.f1, - (+ (CAST(m4.f0 AS BIGINT))) FROM m2, m4 WHERE (CAST(((m4.f0)/(m4.f0)) AS BIGINT)) NOT IN (0.27838617357349593, 0.8862615778345954)) AS sub0;
# SELECT ALL * FROM m2, m0 INNER JOIN m1 ON (0.8240296493886953) NOT IN (0.15840184878951113, 0.09919755310857103, 0.06111832018275931) CROSS JOIN (SELECT m2.f1, - (+ (CAST(m4.f0 AS BIGINT))) FROM m2, m4 WHERE (CAST(((m4.f0)/(m4.f0)) AS BIGINT)) NOT IN (0.27838617357349593, 0.8862615778345954)) AS sub0 WHERE ((((FALSE) NOT IN (TRUE, FALSE))OR(((m2.f0) IS UNKNOWN) BETWEEN SYMMETRIC ((m1.f1) IS UNKNOWN) AND (NOT (m0.f0))))) IS NOT UNKNOWN UNION ALL SELECT ALL * FROM m2, m0 INNER JOIN m1 ON (0.8240296493886953) NOT IN (0.15840184878951113, 0.09919755310857103, 0.06111832018275931) CROSS JOIN (SELECT m2.f1, - (+ (CAST(m4.f0 AS BIGINT))) FROM m2, m4 WHERE (CAST(((m4.f0)/(m4.f0)) AS BIGINT)) NOT IN (0.27838617357349593, 0.8862615778345954)) AS sub0 WHERE NOT (((((FALSE) NOT IN (TRUE, FALSE))OR(((m2.f0) IS UNKNOWN) BETWEEN SYMMETRIC ((m1.f1) IS UNKNOWN) AND (NOT (m0.f0))))) IS NOT UNKNOWN) UNION ALL SELECT * FROM m2, m0 JOIN m1 ON (0.8240296493886953) NOT IN (0.15840184878951113, 0.09919755310857103, 0.06111832018275931) CROSS JOIN (SELECT m2.f1, - (+ (CAST(m4.f0 AS BIGINT))) FROM m2, m4 WHERE (CAST(((m4.f0)/(m4.f0)) AS BIGINT)) NOT IN (0.27838617357349593, 0.8862615778345954)) AS sub0 WHERE (((((FALSE) NOT IN (TRUE, FALSE))OR(((m2.f0) IS UNKNOWN) BETWEEN SYMMETRIC ((m1.f1) IS UNKNOWN) AND (NOT (m0.f0))))) IS NOT UNKNOWN) IS NULL;
# SELECT BOOL_OR(m2.f0) FROM m4, m1 JOIN m0 ON ((m1.f0)LIKE(CAST(CAST((m2.f1) BETWEEN SYMMETRIC (m2.f1) AND (m0.t0) AS BIGINT) AS STRING))) RIGHT OUTER JOIN m2 ON (NOT (((m4.f0) BETWEEN SYMMETRIC (m0.f1) AND (m0.f1)) IS NOT UNKNOWN)) IS UNKNOWN;
# SELECT ALL SUM(CAST(CAST(-3.18034658E8 AS BOOLEAN) AS BIGINT)) FROM m0 LEFT OUTER JOIN m2 ON NOT (CAST(+ (+ (-1665105322)) AS BOOLEAN));
query T rowsort
SELECT MIN(((CAST(0.5545125075521484 AS STRING))||((((m2.f0)<(m2.f0))) IN (TRUE)))) FROM m2;
----
"0.55451250755214840"

query T rowsort
SELECT ALL BIT_AND(+ (CAST(CAST(+ (m3.f0) AS STRING) AS BIGINT))), CAST(0.13969056553337023 AS BIGINT) FROM m3 GROUP BY 0.2133494693314646;
----
0 0

# SELECT BOOL_AND(CAST(0.8872728297920208 AS BOOLEAN)) FROM m3 FULL OUTER JOIN m4 ON m3.f1;
# SELECT ALL m4.t2, m4.t0, m4.t1 FROM m4;
# SELECT ALL m4.t2, m4.t0, m4.t1 FROM m4 WHERE TRUE UNION ALL SELECT m4.t2, m4.t0, m4.t1 FROM m4 WHERE NOT (TRUE) UNION ALL SELECT m4.t2, m4.t0, m4.t1 FROM m4 WHERE (TRUE) IS NULL;
# SELECT m2.f1, m4.t0, m3.f0, m4.t2, m4.f0, m0.f1, m0.t0, m1.t0, m0.f0, m3.f1, m4.t1, m2.f0, m1.f0, m2.t0, m1.f1 FROM m4, m2, m3 LEFT OUTER JOIN m0 ON NOT (CAST(CAST(CAST(m3.f0 AS BOOLEAN) AS BIGINT) AS BOOLEAN)) RIGHT OUTER JOIN m1 ON m1.f1;
query T rowsort
SELECT m0.f1 FROM m0;
----
0.0
0.4131558313302025
0.47166914414715877
0.507623643211476
0.5469987105166848
0.5540439337463335
0.6326195071473769
0.9622249970170084
NULL
NULL
NULL
NULL

query T rowsort
SELECT m0.f1 FROM m0 WHERE (-9.92966372E8) BETWEEN (0.13685450858041304) AND (1.624016699E9) UNION ALL SELECT m0.f1 FROM m0 WHERE NOT ((-9.92966372E8) BETWEEN (0.13685450858041304) AND (1.624016699E9)) UNION ALL SELECT ALL m0.f1 FROM m0 WHERE ((-9.92966372E8) BETWEEN (0.13685450858041304) AND (1.624016699E9)) IS NULL;
----
0.0
0.4131558313302025
0.47166914414715877
0.507623643211476
0.5469987105166848
0.5540439337463335
0.6326195071473769
0.9622249970170084
NULL
NULL
NULL
NULL

query T rowsort
SELECT m2.f0 FROM m2 ORDER BY m2.t0 ASC;
----
false

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Coordinator: Tskv: Arrow: Cast error: Cannot cast value 'f1' to value of Boolean type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m2.f0 FROM m2 WHERE (((CAST(CAST(m2.f1 AS STRING) AS BOOLEAN)) IS FALSE)AND((CAST(m2.f0 AS BOOLEAN)) IS UNKNOWN));

# SELECT ALL m0.f0, m0.f1, m4.f0, m4.t1, m4.t2 FROM m0 LEFT OUTER JOIN m4 ON CAST(+ (((((m4.f0)%(m4.f0)))-(- (m4.f0)))) AS BOOLEAN);
# SELECT m3.t1, m0.t0 FROM m0 LEFT OUTER JOIN m3 ON NOT (((((((((((((((((m0.f0)OR(m0.f0)))OR(m0.f0)))AND(m3.f1)))OR(m0.f0)))OR(m3.f1)))OR(m0.f0)))OR(m0.f0))) IS NOT UNKNOWN) IS FALSE);
# SELECT ALL m3.t1, m0.t0 FROM m0 LEFT OUTER JOIN m3 ON NOT (((((((((((((((((m0.f0)OR(m0.f0)))OR(m0.f0)))AND(m3.f1)))OR(m0.f0)))OR(m3.f1)))OR(m0.f0)))OR(m0.f0))) IS NOT UNKNOWN) IS FALSE) WHERE NOT (m3.f1);
# SELECT m3.t1, m0.t0 FROM m0 LEFT OUTER JOIN m3 ON NOT (((((((((((((((((m0.f0)OR(m0.f0)))OR(m0.f0)))AND(m3.f1)))OR(m0.f0)))OR(m3.f1)))OR(m0.f0)))OR(m0.f0))) IS NOT UNKNOWN) IS FALSE) WHERE NOT (NOT (m3.f1));
# SELECT ALL m3.t1, m0.t0 FROM m0 LEFT OUTER JOIN m3 ON NOT (((((((((((((((((m0.f0)OR(m0.f0)))OR(m0.f0)))AND(m3.f1)))OR(m0.f0)))OR(m3.f1)))OR(m0.f0)))OR(m0.f0))) IS NOT UNKNOWN) IS FALSE) WHERE (NOT (m3.f1)) IS NULL;
query T rowsort
SELECT ALL BOOL_OR(TRUE) FROM m4;
----
true

# SELECT ALL m4.t2, m2.t0, m0.f1, m2.f0 FROM m2, m0 CROSS JOIN m4;
# SELECT m4.t2, m2.t0, m0.f1, m2.f0 FROM m2, m0 CROSS JOIN m4 WHERE m2.f0;
# SELECT ALL m4.t2, m2.t0, m0.f1, m2.f0 FROM m2, m0 CROSS JOIN m4 WHERE NOT (m2.f0);
# SELECT ALL m4.t2, m2.t0, m0.f1, m2.f0 FROM m2, m0 CROSS JOIN m4 WHERE (m2.f0) IS NULL;
# SELECT ALL m0.f1 FROM m0 LEFT OUTER JOIN m2 ON ((CAST(-1664174401 AS STRING)) BETWEEN SYMMETRIC (((m2.f1)||(m0.f0))) AND (CAST(m2.t0 AS STRING))) IN (TRUE, FALSE);
# SELECT ALL MAX((((CAST(((-2136200649)*(-566041077)) AS STRING))>(CAST(((m2.t0)LIKE(m1.t0)) AS STRING)))) IS NULL) FROM m1 JOIN m2 ON ((((CAST(NOT (m1.f1) AS STRING))||(CAST(((m1.f0)||(-1497906008)) AS STRING))))<(CAST(CAST(CAST(m2.f1 AS BIGINT) AS STRING) AS STRING))) GROUP BY m1.f1;
query T rowsort
SELECT ALL m1.f0, m1.t0 FROM m1;
----
"NULL" "NULL"
"f0" "t0"

query T rowsort
SELECT ALL m1.f0, m1.t0 FROM m1 WHERE NOT (NOT ((CAST(-1231009110 AS BOOLEAN)) IS FALSE));
----

query T rowsort
SELECT m1.f0, m1.t0 FROM m1 WHERE NOT (NOT (NOT ((CAST(-1231009110 AS BOOLEAN)) IS FALSE)));
----
"NULL" "NULL"
"f0" "t0"

query T rowsort
SELECT m1.f0, m1.t0 FROM m1 WHERE (NOT (NOT ((CAST(-1231009110 AS BOOLEAN)) IS FALSE))) IS NULL;
----

# SELECT m2.t0, m2.f0, m4.t1, m4.t2 FROM m4, m0 INNER JOIN m2 ON (((CAST(-1.364967176E9 AS STRING))>=(CAST(((((((m0.f0)OR(m0.f0)))OR(m0.f0)))AND(m0.f0)) AS STRING)))) IS FALSE;
query T rowsort
SELECT ALL m4.f0, m4.t2, m4.t0 FROM m4;
----
0 "t2" "t0"

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m4.f0, m4.t2, m4.t0 FROM m4 WHERE ((((((CAST(((+ (m4.f0))*(+ (-436419271))) AS BOOLEAN))AND((((m4.t0)||(m4.t2))) NOT IN ('IEv', 'iKLོ<'))))AND((CAST(NOT (TRUE) AS BIGINT)) BETWEEN SYMMETRIC (CAST(m4.t0 AS BIGINT)) AND (- (CAST(m4.t0 AS BIGINT))))))OR(((((- (m4.f0))^(CAST(0.4641589299925929 AS BIGINT))))<=(+ (- (m4.f0)))))) UNION ALL SELECT m4.f0, m4.t2, m4.t0 FROM m4 WHERE NOT (((((((CAST(((+ (m4.f0))*(+ (-436419271))) AS BOOLEAN))AND((((m4.t0)||(m4.t2))) NOT IN ('IEv', 'iKLོ<'))))AND((CAST(NOT (TRUE) AS BIGINT)) BETWEEN SYMMETRIC (CAST(m4.t0 AS BIGINT)) AND (- (CAST(m4.t0 AS BIGINT))))))OR(((((- (m4.f0))^(CAST(0.4641589299925929 AS BIGINT))))<=(+ (- (m4.f0))))))) UNION ALL SELECT m4.f0, m4.t2, m4.t0 FROM m4 WHERE (((((((CAST(((+ (m4.f0))*(+ (-436419271))) AS BOOLEAN))AND((((m4.t0)||(m4.t2))) NOT IN ('IEv', 'iKLོ<'))))AND((CAST(NOT (TRUE) AS BIGINT)) BETWEEN SYMMETRIC (CAST(m4.t0 AS BIGINT)) AND (- (CAST(m4.t0 AS BIGINT))))))OR(((((- (m4.f0))^(CAST(0.4641589299925929 AS BIGINT))))<=(+ (- (m4.f0))))))) IS NULL;

# SELECT ALL m0.t0, m0.f1 FROM m0 JOIN (SELECT ALL CAST(+ (((((1617953093)-(m3.f0)))%(- (m4.f0)))) AS BIGINT), 0.17385367484161152 FROM m2, m0, m1, m3, m4) AS sub0 ON (((('\2)vZU/')||(m0.f0))) IN ('|')) IS UNKNOWN;
# SELECT m0.t0, m0.f1 FROM m0 INNER JOIN (SELECT CAST(+ (((((1617953093)-(m3.f0)))%(- (m4.f0)))) AS BIGINT), 0.17385367484161152 FROM m2, m0, m1, m3, m4) AS sub0 ON (((('\2)vZU/')||(m0.f0))) IN ('|')) IS UNKNOWN WHERE NOT (((((CAST(m0.f0 AS STRING))LIKE(((m0.t0)||(m0.f0)))))OR((((((m0.f0) BETWEEN SYMMETRIC (m0.f0) AND (m0.f0))OR(((m0.t0)LIKE(m0.t0)))))AND(CAST(m0.f1 AS BOOLEAN))))));
query T rowsort
SELECT ALL m0.f1 FROM m0;
----
0.0
0.4131558313302025
0.47166914414715877
0.507623643211476
0.5469987105166848
0.5540439337463335
0.6326195071473769
0.9622249970170084
NULL
NULL
NULL
NULL

query T rowsort
SELECT m0.f1 FROM m0 WHERE ((CAST(((443506543)/(291484029)) AS STRING)) BETWEEN (CAST((m0.f0) IS FALSE AS STRING)) AND (((CAST(-932564021 AS STRING))||(CAST(33499183 AS STRING))))) IS TRUE UNION ALL SELECT m0.f1 FROM m0 WHERE NOT (((CAST(((443506543)/(291484029)) AS STRING)) BETWEEN (CAST((m0.f0) IS FALSE AS STRING)) AND (((CAST(-932564021 AS STRING))||(CAST(33499183 AS STRING))))) IS TRUE) UNION ALL SELECT m0.f1 FROM m0 WHERE (((CAST(((443506543)/(291484029)) AS STRING)) BETWEEN (CAST((m0.f0) IS FALSE AS STRING)) AND (((CAST(-932564021 AS STRING))||(CAST(33499183 AS STRING))))) IS TRUE) IS NULL;
----
0.0
0.4131558313302025
0.47166914414715877
0.507623643211476
0.5469987105166848
0.5540439337463335
0.6326195071473769
0.9622249970170084
NULL
NULL
NULL
NULL

query T rowsort
SELECT MAX(-4.88758559E8) FROM m3;
----
-488758559.0

query T rowsort
SELECT MAX(agg0) FROM (SELECT ALL MAX(-4.88758559E8)  as agg0 FROM m3 WHERE (2.054705454E9) NOT IN (0.21952361206409599, 0.8148727002039817) UNION ALL SELECT MAX(-4.88758559E8)  as agg0 FROM m3 WHERE NOT ((2.054705454E9) NOT IN (0.21952361206409599, 0.8148727002039817)) UNION ALL SELECT MAX(-4.88758559E8)  as agg0 FROM m3 WHERE ((2.054705454E9) NOT IN (0.21952361206409599, 0.8148727002039817)) IS NULL) as asdf;
----
-488758559.0

query T rowsort
SELECT ALL m0.f1 FROM m0;
----
0.0
0.4131558313302025
0.47166914414715877
0.507623643211476
0.5469987105166848
0.5540439337463335
0.6326195071473769
0.9622249970170084
NULL
NULL
NULL
NULL

query T rowsort
SELECT ALL m0.f1 FROM m0 WHERE NOT ((('TOk')=(m0.t0))) UNION ALL SELECT ALL m0.f1 FROM m0 WHERE NOT (NOT ((('TOk')=(m0.t0)))) UNION ALL SELECT ALL m0.f1 FROM m0 WHERE (NOT ((('TOk')=(m0.t0)))) IS NULL;
----
0.0
0.4131558313302025
0.47166914414715877
0.507623643211476
0.5469987105166848
0.5540439337463335
0.6326195071473769
0.9622249970170084
NULL
NULL
NULL
NULL

# SELECT m3.f0, m3.t0, m3.t1 FROM m3 CROSS JOIN (SELECT CAST(((((((m1.f0)||(m3.f0)))||(((m3.f0)^(m3.f0)))))||(CAST(CAST(m1.t0 AS STRING) AS BIGINT))) AS STRING) FROM m0, m2, m1, m3) AS sub0;
# SELECT ALL m3.f1, m3.t1, m3.f0, m2.t0 FROM m2 FULL OUTER JOIN m3 ON CAST(m2.f1 AS BOOLEAN);
query T rowsort
SELECT m3.f1, m3.f0, m3.t0, m3.t1 FROM m3;
----
false 0 "t0" "t1"

query T rowsort
SELECT ALL m3.f1, m3.f0, m3.t0, m3.t1 FROM m3 WHERE NOT (m3.f1) UNION ALL SELECT m3.f1, m3.f0, m3.t0, m3.t1 FROM m3 WHERE NOT (NOT (m3.f1)) UNION ALL SELECT m3.f1, m3.f0, m3.t0, m3.t1 FROM m3 WHERE (NOT (m3.f1)) IS NULL;
----
false 0 "t0" "t1"

query T rowsort
SELECT m4.t2, m4.f0, m4.t0, m4.t1 FROM m4;
----
"t2" 0 "t0" "t1"

query T rowsort
SELECT m4.t2, m4.f0, m4.t0, m4.t1 FROM m4 WHERE (((m4.f0)%(CAST(TRUE AS BIGINT)))) IN (1358142640, 740498843);
----

query T rowsort
SELECT m1.f0 FROM m1;
----
"NULL"
"f0"

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m1.f0 FROM m1 WHERE (((CAST(2.6056234E7 AS BOOLEAN)) IS FALSE) BETWEEN SYMMETRIC (CAST((-1085148421) NOT IN (-1500909960) AS BOOLEAN)) AND ((((1573456014) IN (0.13611617631973572, 0.9136097523200366))!=((m1.t0) BETWEEN (m1.f0) AND ('-3d~%24v
'))))) IS UNKNOWN UNION ALL SELECT m1.f0 FROM m1 WHERE NOT ((((CAST(2.6056234E7 AS BOOLEAN)) IS FALSE) BETWEEN SYMMETRIC (CAST((-1085148421) NOT IN (-1500909960) AS BOOLEAN)) AND ((((1573456014) IN (0.13611617631973572, 0.9136097523200366))!=((m1.t0) BETWEEN (m1.f0) AND ('-3d~%24v
'))))) IS UNKNOWN) UNION ALL SELECT ALL m1.f0 FROM m1 WHERE ((((CAST(2.6056234E7 AS BOOLEAN)) IS FALSE) BETWEEN SYMMETRIC (CAST((-1085148421) NOT IN (-1500909960) AS BOOLEAN)) AND ((((1573456014) IN (0.13611617631973572, 0.9136097523200366))!=((m1.t0) BETWEEN (m1.f0) AND ('-3d~%24v
'))))) IS UNKNOWN) IS NULL;

query T rowsort
SELECT m2.f0 FROM m2;
----
false

query T rowsort
SELECT m2.f0 FROM m2 WHERE CAST(0.5103766963294405 AS BOOLEAN) UNION ALL SELECT m2.f0 FROM m2 WHERE NOT (CAST(0.5103766963294405 AS BOOLEAN)) UNION ALL SELECT ALL m2.f0 FROM m2 WHERE (CAST(0.5103766963294405 AS BOOLEAN)) IS NULL;
----
false

# SELECT MIN(0.7751893229677713) FROM m2 RIGHT OUTER JOIN m4 ON CAST(- (CAST(((m4.f0)^(m4.f0)) AS BIGINT)) AS BOOLEAN);
query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Datafusion: External error: Arrow error: Cast error: Cannot cast value 't0' to value of Boolean type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL BOOL_OR((((((m4.t0) IN ('M
-- q')) IS TRUE)OR(CAST(CAST(m3.f0 AS STRING) AS BOOLEAN)))) IS FALSE) FROM m1, m4 LEFT OUTER JOIN m3 ON NOT ((CAST(CAST(m3.t0 AS BOOLEAN) AS BOOLEAN)) IS UNKNOWN);

query T rowsort
SELECT ALL m1.f1, m1.f0, m1.t0 FROM m1 ORDER BY m1.t0 DESC;
----
false "NULL" "NULL"
false "f0" "t0"

query T rowsort
SELECT m1.f1, m1.f0, m1.t0 FROM m1 WHERE ((NOT (((((m1.t0)||(48911391)))IS DISTINCT FROM(CAST(1059668417 AS STRING)))))AND(m1.f1));
----

query T rowsort
SELECT ALL m4.t0, m4.f0, m4.t1 FROM m4;
----
"t0" 0 "t1"

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m4.t0, m4.f0, m4.t1 FROM m4 WHERE (((((((CAST(TRUE AS BOOLEAN)) IN (TRUE))OR(TRUE)))AND((CAST(((m4.f0)-(m4.f0)) AS STRING)) BETWEEN SYMMETRIC (CAST(CAST(m4.f0 AS BIGINT) AS STRING)) AND (CAST(CAST(NULL AS BIGINT) AS STRING)))))AND((((m4.t0)>(m4.t1))) NOT IN (FALSE, FALSE)));

# SELECT ALL m1.f0, m4.t1, m4.t2, m3.f1, m3.t1, m4.f0, m4.t0, m3.f0 FROM m4, m1 LEFT OUTER JOIN m2 ON ((((1403056501)/(m3.f0))) IS NULL) NOT IN (TRUE, FALSE) FULL OUTER JOIN m3 ON CAST(+ (((((m4.f0)+(m4.f0)))/(+ (m3.f0)))) AS BOOLEAN);
query T rowsort
SELECT ALL m3.f1, m3.f0 FROM m3;
----
false 0

query T rowsort
SELECT ALL m3.f1, m3.f0 FROM m3 WHERE ((((CAST(CAST(m3.f0 AS STRING) AS STRING))||(FALSE)))LIKE(CAST(((CAST(6.94936525E8 AS BIGINT))^(+ (m3.f0))) AS STRING))) UNION ALL SELECT m3.f1, m3.f0 FROM m3 WHERE NOT (((((CAST(CAST(m3.f0 AS STRING) AS STRING))||(FALSE)))LIKE(CAST(((CAST(6.94936525E8 AS BIGINT))^(+ (m3.f0))) AS STRING)))) UNION ALL SELECT ALL m3.f1, m3.f0 FROM m3 WHERE (((((CAST(CAST(m3.f0 AS STRING) AS STRING))||(FALSE)))LIKE(CAST(((CAST(6.94936525E8 AS BIGINT))^(+ (m3.f0))) AS STRING)))) IS NULL;
----
false 0

query T rowsort
SELECT ALL MAX(((((CAST(CAST(FALSE AS STRING) AS STRING))||(CAST(((m4.t0)<=(m4.t2)) AS STRING))))IS DISTINCT FROM(((((CAST(TRUE AS STRING))||((('?X')||(m4.t1)))))||(m4.f0))))) FROM m4;
----
true

# SELECT ALL m0.t0, m3.t1, m0.f1, m3.t0, m1.f0 FROM m3, m1 JOIN m0 ON ((NOT ((((m3.t1)||(m3.f1))) BETWEEN (((m3.t0)||(m3.f0))) AND (CAST(m3.f0 AS STRING))))=(m0.f0));
query T rowsort
SELECT m0.f0, m0.t0 FROM m0;
----
NULL "916053861"
NULL "NULL"
false "NULL"
false "t0"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"

query T rowsort
SELECT ALL m0.f0, m0.t0 FROM m0 WHERE ((CAST(- (-283773192) AS BOOLEAN)) IS TRUE) IS UNKNOWN UNION ALL SELECT m0.f0, m0.t0 FROM m0 WHERE NOT (((CAST(- (-283773192) AS BOOLEAN)) IS TRUE) IS UNKNOWN) UNION ALL SELECT ALL m0.f0, m0.t0 FROM m0 WHERE (((CAST(- (-283773192) AS BOOLEAN)) IS TRUE) IS UNKNOWN) IS NULL;
----
NULL "916053861"
NULL "NULL"
false "NULL"
false "t0"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"

# SELECT ALL m3.t0 FROM m3;
# SELECT ALL m3.t0 FROM (select t0 from m3 order by t0 limit 1) WHERE (CAST(+ (CAST(m3.t0 AS BIGINT)) AS BOOLEAN)) IS UNKNOWN;
# SELECT BIT_AND(- (- (CAST(((m2.t0)||(m4.f0)) AS BIGINT)))) FROM m2, m3 RIGHT OUTER JOIN m0 ON m3.f1 CROSS JOIN m4;
# SELECT * FROM m0 CROSS JOIN m4;
# SELECT ALL * FROM m0 CROSS JOIN m4 WHERE ((((((CAST(m0.t0 AS STRING))||(('AYTad|u') BETWEEN SYMMETRIC (m4.t2) AND ('1624016699'))))||(CAST((TRUE) IS UNKNOWN AS BOOLEAN))))LIKE(CAST(CAST(CAST(m0.f1 AS STRING) AS BIGINT) AS STRING)));
# SELECT m2.f0, m4.t1, m2.f1, m3.t1, m4.t0, m3.f1 FROM m2, m4 JOIN m3 ON FALSE;
# SELECT ALL m2.f0, m4.t1, m2.f1, m3.t1, m4.t0, m3.f1 FROM m2, m4 INNER JOIN m3 ON FALSE WHERE CAST(CAST(0.45134172372717385 AS BIGINT) AS BOOLEAN) UNION ALL SELECT ALL m2.f0, m4.t1, m2.f1, m3.t1, m4.t0, m3.f1 FROM m2, m4 INNER JOIN m3 ON FALSE WHERE NOT (CAST(CAST(0.45134172372717385 AS BIGINT) AS BOOLEAN)) UNION ALL SELECT ALL m2.f0, m4.t1, m2.f1, m3.t1, m4.t0, m3.f1 FROM m2, m4 INNER JOIN m3 ON FALSE WHERE (CAST(CAST(0.45134172372717385 AS BIGINT) AS BOOLEAN)) IS NULL;
# SELECT ALL m0.f0, m3.f1, m0.t0, m3.f0 FROM m0 RIGHT OUTER JOIN m3 ON m3.f1;
# SELECT ALL m0.f0, m3.f1, m0.t0, m3.f0 FROM m0 RIGHT OUTER JOIN m3 ON m3.f1 WHERE CAST(((CAST(CAST(m3.t1 AS STRING) AS STRING))LIKE(((((m0.t0)||(m0.f1)))||(- (m3.f0))))) AS BOOLEAN) UNION ALL SELECT ALL m0.f0, m3.f1, m0.t0, m3.f0 FROM m0 RIGHT OUTER JOIN m3 ON m3.f1 WHERE NOT (CAST(((CAST(CAST(m3.t1 AS STRING) AS STRING))LIKE(((((m0.t0)||(m0.f1)))||(- (m3.f0))))) AS BOOLEAN)) UNION ALL SELECT m0.f0, m3.f1, m0.t0, m3.f0 FROM m0 RIGHT OUTER JOIN m3 ON m3.f1 WHERE (CAST(((CAST(CAST(m3.t1 AS STRING) AS STRING))LIKE(((((m0.t0)||(m0.f1)))||(- (m3.f0))))) AS BOOLEAN)) IS NULL;
query T rowsort
SELECT ALL m0.f1 FROM m0;
----
0.0
0.4131558313302025
0.47166914414715877
0.507623643211476
0.5469987105166848
0.5540439337463335
0.6326195071473769
0.9622249970170084
NULL
NULL
NULL
NULL

query T rowsort
SELECT ALL m0.f1 FROM m0 WHERE (((((((((((395826959) NOT IN (421382481, 1997494472))OR(m0.f0)))OR((((m0.f0)AND(m0.f0))) IS UNKNOWN)))OR((((181591174)=(-2085221357))) BETWEEN (((m0.t0)LIKE(m0.t0))) AND (NOT (m0.f0)))))OR(NOT ((m0.f0) IS TRUE))))OR(m0.f0)) UNION ALL SELECT m0.f1 FROM m0 WHERE NOT ((((((((((((395826959) NOT IN (421382481, 1997494472))OR(m0.f0)))OR((((m0.f0)AND(m0.f0))) IS UNKNOWN)))OR((((181591174)=(-2085221357))) BETWEEN (((m0.t0)LIKE(m0.t0))) AND (NOT (m0.f0)))))OR(NOT ((m0.f0) IS TRUE))))OR(m0.f0))) UNION ALL SELECT ALL m0.f1 FROM m0 WHERE ((((((((((((395826959) NOT IN (421382481, 1997494472))OR(m0.f0)))OR((((m0.f0)AND(m0.f0))) IS UNKNOWN)))OR((((181591174)=(-2085221357))) BETWEEN (((m0.t0)LIKE(m0.t0))) AND (NOT (m0.f0)))))OR(NOT ((m0.f0) IS TRUE))))OR(m0.f0))) IS NULL;
----
0.0
0.4131558313302025
0.47166914414715877
0.507623643211476
0.5469987105166848
0.5540439337463335
0.6326195071473769
0.9622249970170084
NULL
NULL
NULL
NULL

# SELECT ALL m4.t1, m3.t1, m2.t0, m4.t0, m3.f1, m2.f1 FROM m2, m0 LEFT OUTER JOIN m3 ON m2.f0 RIGHT OUTER JOIN m4 ON (+ (((m4.f0)^(m3.f0)))) NOT IN (0.8004330669226638, 0.03412800641285252) ORDER BY m4.t1 DESC;
query T rowsort
SELECT ALL SUM(0.05290683551262432) FROM m3;
----
0.05290683551262432

# SELECT ALL MIN((((((-898117395)^(808995049)))+(CAST(m2.f1 AS BIGINT)))) NOT IN (1760856042, -1916149443)) FROM m0, m1 JOIN m2 ON (((-1260504170)-(CAST(-1367087332 AS BIGINT)))) IN (-431203763) GROUP BY CAST(((CAST((('2070740056')^(1827659846)) AS BOOLEAN))IS NOT DISTINCT FROM(((((NOT (m1.f1))OR((m1.t0) IS NOT NULL)))AND((('1633623176')!=(m0.t0)))))) AS STRING);
query T rowsort
SELECT ALL SUM(CAST(0.9609833329171376 AS BIGINT)) FROM m1;
----
0

query T rowsort
SELECT ALL MIN(((((CAST(- (+ (m4.f0)) AS BOOLEAN))OR(CAST(0.18361102209351832 AS BOOLEAN))))OR(CAST(0.14149015016136468 AS BOOLEAN)))) FROM m4;
----
true

# SELECT ALL m1.t0, m2.f1, m1.f1, m3.t0, m3.f0, m4.f0, m3.t1, m3.f1, m1.f0 FROM m1, m4, m2 FULL OUTER JOIN m0 ON (0.008384065200446322) IN (0.6953583729561046) CROSS JOIN m3;
# SELECT m1.t0, m2.f1, m1.f1, m3.t0, m3.f0, m4.f0, m3.t1, m3.f1, m1.f0 FROM m1, m4, m2 FULL OUTER JOIN m0 ON (0.008384065200446322) IN (0.6953583729561046) CROSS JOIN m3 WHERE ((- (389132216)) IN (-1226727804, -1822598906)) IS NOT UNKNOWN UNION ALL SELECT ALL m1.t0, m2.f1, m1.f1, m3.t0, m3.f0, m4.f0, m3.t1, m3.f1, m1.f0 FROM m1, m4, m2 FULL OUTER JOIN m0 ON (0.008384065200446322) IN (0.6953583729561046) CROSS JOIN m3 WHERE NOT (((- (389132216)) IN (-1226727804, -1822598906)) IS NOT UNKNOWN) UNION ALL SELECT ALL m1.t0, m2.f1, m1.f1, m3.t0, m3.f0, m4.f0, m3.t1, m3.f1, m1.f0 FROM m1, m4, m2 FULL OUTER JOIN m0 ON (0.008384065200446322) IN (0.6953583729561046) CROSS JOIN m3 WHERE (((- (389132216)) IN (-1226727804, -1822598906)) IS NOT UNKNOWN) IS NULL;
# SELECT COUNT(((CAST(NOT ((1720243269) IN (171778405)) AS BIGINT))/(245588744))) FROM m0 FULL OUTER JOIN m2 ON (0.17734332741481884) NOT IN (0.4607240061474862, 0.1547139682950095);
# SELECT m4.f0, m2.t0, m2.f1, m2.f0, m4.t0 FROM m4 FULL OUTER JOIN m2 ON m2.f0;
query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Arrow: Cast error: Cannot cast string 't000' to value of Int64 type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT BIT_AND(CAST(CAST(((((m4.t0)||(m4.f0)))||(CAST(m4.f0 AS BIGINT))) AS BIGINT) AS BIGINT)) FROM m4;

query T rowsort
SELECT ALL BIT_OR(CAST(+ (CAST(((m3.f0)+(m3.f0)) AS BIGINT)) AS BIGINT)) FROM m3;
----
0

query T rowsort
SELECT m0.f0, m0.f1, m0.t0 FROM m0;
----
NULL 0.47166914414715877 "NULL"
NULL 0.507623643211476 "916053861"
false 0.0 "t0"
false 0.6326195071473769 "NULL"
true 0.4131558313302025 "NULL"
true 0.5469987105166848 "NULL"
true 0.5540439337463335 "NULL"
true 0.9622249970170084 "NULL"
true NULL "NULL"
true NULL "NULL"
true NULL "NULL"
true NULL "NULL"

# SELECT ALL m0.f0, m0.f1, m0.t0 FROM m0 WHERE (0.5980307755514246) BETWEEN (0.06659352029120968) AND (+ (((+ (2073602548))+(CAST(m0.t0 AS BIGINT))))) ORDER BY m0.time;
# SELECT m0.f0, m0.f1, m0.t0 FROM m0 WHERE NOT ((0.5980307755514246) BETWEEN (0.06659352029120968) AND (+ (((+ (2073602548))+(CAST(m0.t0 AS BIGINT)))))) ORDER BY m0.time;
# SELECT m0.f0, m0.f1, m0.t0 FROM m0 WHERE ((0.5980307755514246) BETWEEN (0.06659352029120968) AND (+ (((+ (2073602548))+(CAST(m0.t0 AS BIGINT)))))) IS NULL ORDER BY m0.time;
# SELECT ALL m3.t1, m3.t0, m1.f0, m1.f1, m1.t0, m4.t2 FROM m1, m3 FULL OUTER JOIN m4 ON (m3.f0) NOTNULL;
query error Arrow error: Io error: Status \{ code: Internal, message: "Execute logical plan: Datafusion: Schema error: No field named m1\.t0\. Valid fields are \\"SUM\(Float64\(0\.6096484376459871\)\)\\"\.", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT SUM(0.6096484376459871) FROM m1 ORDER BY m1.t0 DESC;

# SELECT m1.f0, m0.t0 FROM m1 INNER JOIN m0 ON (9.62753936E8) IN (0.2649352018581309, 0.9814415625106808, 0.7116544352654927);
# SELECT ALL m1.f0, m0.t0 FROM m1 JOIN m0 ON (9.62753936E8) IN (0.2649352018581309, 0.9814415625106808, 0.7116544352654927) WHERE m1.f1 UNION ALL SELECT ALL m1.f0, m0.t0 FROM m1 INNER JOIN m0 ON (9.62753936E8) IN (0.2649352018581309, 0.9814415625106808, 0.7116544352654927) WHERE NOT (m1.f1) UNION ALL SELECT ALL m1.f0, m0.t0 FROM m1 JOIN m0 ON (9.62753936E8) IN (0.2649352018581309, 0.9814415625106808, 0.7116544352654927) WHERE (m1.f1) IS NULL;
# SELECT ALL m0.t0, m4.f0, m3.t0, m1.f1, m4.t2, m4.t0, m0.f1 FROM m4, m3, m2 RIGHT OUTER JOIN m1 ON CAST(m1.f0 AS BOOLEAN) CROSS JOIN m0;
# SELECT m0.t0, m4.f0, m3.t0, m1.f1, m4.t2, m4.t0, m0.f1 FROM m4, m3, m2 RIGHT OUTER JOIN m1 ON CAST(m1.f0 AS BOOLEAN) CROSS JOIN m0 WHERE (NOT (CAST(((m4.f0)+(m3.f0)) AS BOOLEAN))) IS TRUE UNION ALL SELECT ALL m0.t0, m4.f0, m3.t0, m1.f1, m4.t2, m4.t0, m0.f1 FROM m4, m3, m2 RIGHT OUTER JOIN m1 ON CAST(m1.f0 AS BOOLEAN) CROSS JOIN m0 WHERE NOT ((NOT (CAST(((m4.f0)+(m3.f0)) AS BOOLEAN))) IS TRUE) UNION ALL SELECT m0.t0, m4.f0, m3.t0, m1.f1, m4.t2, m4.t0, m0.f1 FROM m4, m3, m2 RIGHT OUTER JOIN m1 ON CAST(m1.f0 AS BOOLEAN) CROSS JOIN m0 WHERE ((NOT (CAST(((m4.f0)+(m3.f0)) AS BOOLEAN))) IS TRUE) IS NULL;
# SELECT m0.t0, m3.t0 FROM m2, m0, m3 RIGHT OUTER JOIN m4 ON CAST(0.5241195170711531 AS BOOLEAN) LEFT OUTER JOIN m1 ON ((+ (m4.f0)) NOT IN (0.8840449269423981, 0.2651520175907188)) IS NOT UNKNOWN;
# SELECT ALL m1.t0, m0.f0, m4.t2, m1.f0, m4.t1, m0.f1 FROM m0, m2, m4 FULL OUTER JOIN m3 ON m3.f1 FULL OUTER JOIN m1 ON ((CAST(m0.f1 AS STRING)) IS NULL) IN (TRUE);
query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL BOOL_OR((((((((((((m2.f1)LIKE(m2.f1)))OR(((m2.f0)AND(m2.f0)))))OR((0.5546139751565915) IN (0.3276204101429546))))AND((m2.t0) BETWEEN ('0.6468887984268011') AND (m2.f1)))) BETWEEN SYMMETRIC ((((m2.f0) BETWEEN SYMMETRIC (m2.f0) AND (m2.f0))AND(m2.f0))) AND (((CAST(m2.f0 AS STRING))LIKE(CAST(m2.f0 AS STRING)))))<=((+ (- (1120541685))) IS NOT NULL))) FROM m2;

query T rowsort
SELECT m1.t0, m1.f1, m1.f0 FROM m1;
----
"NULL" false "NULL"
"t0" false "f0"

query T rowsort
SELECT m1.t0, m1.f1, m1.f0 FROM m1 WHERE m1.f1;
----

query T rowsort
SELECT ALL m1.t0, m1.f1, m1.f0 FROM m1 WHERE NOT (m1.f1);
----
"NULL" false "NULL"
"t0" false "f0"

query T rowsort
SELECT ALL m1.t0, m1.f1, m1.f0 FROM m1 WHERE (m1.f1) IS NULL;
----

# SELECT ALL m2.t0, m2.f1, m3.f0 FROM m3 FULL OUTER JOIN m2 ON (CAST(m2.t0 AS BIGINT)) NOT IN (0.6184061695410201);
# SELECT ALL BOOL_OR(((m0.t0) IN ('2U', '(\3', '')) IS UNKNOWN) FROM m3 RIGHT OUTER JOIN m0 ON ((CAST(m3.f0 AS BIGINT)) IN (-110532589)) IS FALSE;
# SELECT BIT_OR(CAST(0.10793072215986443 AS BIGINT)) FROM m3 CROSS JOIN m4 ORDER BY m3.f1 ASC;
# SELECT ALL BIT_OR(m4.f0) FROM m2, m3, m0 INNER JOIN m4 ON CAST(m3.f0 AS BOOLEAN) LEFT OUTER JOIN m1 ON m2.f0;
# SELECT ALL * FROM m0, m3 LEFT OUTER JOIN m4 ON NOT (m2.f0) CROSS JOIN m2 CROSS JOIN (SELECT ALL 0.8059558945044728 FROM m4 LIMIT 3354958514575617794 OFFSET 251610728943567667) AS sub0 ORDER BY m3.t1 ASC, m2.f1 DESC;
# SELECT ALL m3.f0 FROM m3 INNER JOIN (SELECT m4.f0 FROM m3, m1, m4, m0) AS sub0 ON m3.f1;
# SELECT m3.f0 FROM m3 JOIN (SELECT ALL m4.f0 FROM m3, m1, m4, m0) AS sub0 ON m3.f1 WHERE NOT (m3.f1) UNION ALL SELECT ALL m3.f0 FROM m3 INNER JOIN (SELECT ALL m4.f0 FROM m3, m1, m4, m0) AS sub0 ON m3.f1 WHERE NOT (NOT (m3.f1)) UNION ALL SELECT ALL m3.f0 FROM m3 JOIN (SELECT ALL m4.f0 FROM m3, m1, m4, m0) AS sub0 ON m3.f1 WHERE (NOT (m3.f1)) IS NULL;
# SELECT ALL m2.t0, m1.f1 FROM m4, m2 LEFT OUTER JOIN m1 ON (m4.f0) IN (0.48727659923232713, 0.25244653430276853);
# SELECT ALL m3.f0, m3.f1, m3.t0 FROM m3 LEFT OUTER JOIN (SELECT (((((0.15232122972291917) IS NULL)AND(((((m0.f1) BETWEEN SYMMETRIC (0.6865746487044393) AND (-347180582))AND(((((TRUE)AND(m1.f1)))AND(m1.f1))))) IS NOT UNKNOWN)))OR(NOT ((NOT (m2.f0)) IS TRUE))) FROM m2, m3, m0, m1 WHERE (CAST(CAST(m3.f0 AS BIGINT) AS BIGINT)) IN (0.8243150868957837, 0.9920528564528467)) AS sub0 ON CAST(NOT ((m3.t1) NOT IN ('>', '㥢PJ4E*lᚠ ', 'tX?L膢Y]T')) AS BOOLEAN) ORDER BY m3.f1 DESC;
# SELECT m3.f0, m3.f1, m3.t0 FROM m3 LEFT OUTER JOIN (SELECT (((((0.15232122972291917) IS NULL)AND(((((m0.f1) BETWEEN SYMMETRIC (0.6865746487044393) AND (-347180582))AND(((((TRUE)AND(m1.f1)))AND(m1.f1))))) IS NOT UNKNOWN)))OR(NOT ((NOT (m2.f0)) IS TRUE))) FROM m2, m3, m0, m1 WHERE (CAST(CAST(m3.f0 AS BIGINT) AS BIGINT)) IN (0.8243150868957837, 0.9920528564528467)) AS sub0 ON CAST(NOT ((m3.t1) NOT IN ('>', '㥢PJ4E*lᚠ ', 'tX?L膢Y]T')) AS BOOLEAN) WHERE (CAST(CAST(m3.f0 AS BIGINT) AS BIGINT)) IN (0.528300966591463, 0.6591546997029814);
# SELECT m3.f0, m3.f1, m3.t0 FROM m3 LEFT OUTER JOIN (SELECT (((((0.15232122972291917) IS NULL)AND(((((m0.f1) BETWEEN SYMMETRIC (0.6865746487044393) AND (-347180582))AND(((((TRUE)AND(m1.f1)))AND(m1.f1))))) IS NOT UNKNOWN)))OR(NOT ((NOT (m2.f0)) IS TRUE))) FROM m2, m3, m0, m1 WHERE (CAST(CAST(m3.f0 AS BIGINT) AS BIGINT)) IN (0.8243150868957837, 0.9920528564528467)) AS sub0 ON CAST(NOT ((m3.t1) NOT IN ('>', '㥢PJ4E*lᚠ ', 'tX?L膢Y]T')) AS BOOLEAN) WHERE NOT ((CAST(CAST(m3.f0 AS BIGINT) AS BIGINT)) IN (0.528300966591463, 0.6591546997029814));
# SELECT m3.f0, m3.f1, m3.t0 FROM m3 LEFT OUTER JOIN (SELECT (((((0.15232122972291917) IS NULL)AND(((((m0.f1) BETWEEN SYMMETRIC (0.6865746487044393) AND (-347180582))AND(((((TRUE)AND(m1.f1)))AND(m1.f1))))) IS NOT UNKNOWN)))OR(NOT ((NOT (m2.f0)) IS TRUE))) FROM m2, m3, m0, m1 WHERE (CAST(CAST(m3.f0 AS BIGINT) AS BIGINT)) IN (0.8243150868957837, 0.9920528564528467)) AS sub0 ON CAST(NOT ((m3.t1) NOT IN ('>', '㥢PJ4E*lᚠ ', 'tX?L膢Y]T')) AS BOOLEAN) WHERE ((CAST(CAST(m3.f0 AS BIGINT) AS BIGINT)) IN (0.528300966591463, 0.6591546997029814)) IS NULL;
query T rowsort
SELECT m1.f1, m1.t0, m1.f0 FROM m1;
----
false "NULL" "NULL"
false "t0" "f0"

query T rowsort
SELECT m1.f1, m1.t0, m1.f0 FROM m1 WHERE (((CAST(-936302330 AS BOOLEAN)) IS NOT UNKNOWN) IS NOT UNKNOWN) IS NOT UNKNOWN;
----
false "NULL" "NULL"
false "t0" "f0"

query T rowsort
SELECT m1.f1, m1.t0, m1.f0 FROM m1 WHERE NOT ((((CAST(-936302330 AS BOOLEAN)) IS NOT UNKNOWN) IS NOT UNKNOWN) IS NOT UNKNOWN);
----

query T rowsort
SELECT ALL m1.f1, m1.t0, m1.f0 FROM m1 WHERE ((((CAST(-936302330 AS BOOLEAN)) IS NOT UNKNOWN) IS NOT UNKNOWN) IS NOT UNKNOWN) IS NULL;
----

query T rowsort
SELECT ALL BIT_OR(CAST((CAST(FALSE AS BIGINT)) NOT IN (0.5844695362547421, 0.7511352762098632, 0.02431858285836208) AS BIGINT)) FROM m4;
----
1

query T rowsort
SELECT ALL * FROM m3;
----
1970-01-01T00:00:00 "t0" "t1" 0 false

query T rowsort
SELECT * FROM m3 WHERE (+ (((m3.f0)-(m3.f0)))) IN (311761313, 0, -75068225, -1147098940);
----
1970-01-01T00:00:00 "t0" "t1" 0 false

query T rowsort
SELECT * FROM m3 WHERE NOT ((+ (((m3.f0)-(m3.f0)))) IN (311761313, 0, -75068225, -1147098940));
----

query T rowsort
SELECT * FROM m3 WHERE ((+ (((m3.f0)-(m3.f0)))) IN (311761313, 0, -75068225, -1147098940)) IS NULL;
----

# SELECT ALL COUNT(CAST(((((((m4.f0)-(m4.f0)))%(((m4.f0)/(m4.f0)))))%(((+ (m4.f0))+(CAST(m0.t0 AS BIGINT))))) AS BIGINT)) FROM m0 FULL OUTER JOIN m4 ON m0.f0;
# SELECT ALL MAX(- (CAST(CAST(((m4.t1)LIKE(m4.t2)) AS BOOLEAN) AS BIGINT))) FROM m0 LEFT OUTER JOIN m4 ON CAST(0.3438416482896769 AS BOOLEAN);
query T rowsort
SELECT m4.t1, m4.t2, m4.t0, m4.f0 FROM m4;
----
"t1" "t2" "t0" 0

query T rowsort
SELECT ALL m4.t1, m4.t2, m4.t0, m4.f0 FROM m4 WHERE ((CAST(+ (m4.f0) AS BIGINT))!=(m4.f0));
----

query T rowsort
SELECT m4.t1, m4.t2, m4.t0, m4.f0 FROM m4 WHERE NOT (((CAST(+ (m4.f0) AS BIGINT))!=(m4.f0)));
----
"t1" "t2" "t0" 0

query T rowsort
SELECT m4.t1, m4.t2, m4.t0, m4.f0 FROM m4 WHERE (((CAST(+ (m4.f0) AS BIGINT))!=(m4.f0))) IS NULL;
----

query T rowsort
SELECT ALL MAX(CAST(CAST(((((-1770299815)^(291484029)))-(((706170751)-(-488758559)))) AS STRING) AS BIGINT)) FROM m0;
----
-3222551930

# SELECT ALL m1.t0, m0.t0, m2.t0, m1.f1, m0.f1, m0.f0, m2.f0, m1.f0, m2.f1 FROM m0, m1 LEFT OUTER JOIN m2 ON (((CAST(((m0.t0)||(m0.f1)) AS STRING)) BETWEEN (CAST((1633623176) BETWEEN (-778444572) AND (-1382782409) AS STRING)) AND (CAST(CAST(m0.t0 AS STRING) AS STRING)))IS DISTINCT FROM(((FALSE) IS NOT UNKNOWN) NOT IN (TRUE)));
query T rowsort
SELECT ALL m0.f0, m0.t0 FROM m0;
----
NULL "916053861"
NULL "NULL"
false "NULL"
false "t0"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"

query T rowsort
SELECT ALL m0.f0, m0.t0 FROM m0 WHERE ((CAST(0.4736801693096383 AS STRING))LIKE(CAST((m0.f1) IN (0.9689249390358685, 0.5822675735859034) AS STRING)));
----

query T rowsort
SELECT SUM(0.7211913967091175) FROM m3;
----
0.7211913967091175

query T rowsort
SELECT SUM(agg0) FROM (SELECT ALL SUM(0.7211913967091175)  as agg0 FROM m3 WHERE CAST((0.9192293931564824) NOT IN (0.6760630186109298) AS BOOLEAN) UNION ALL SELECT ALL SUM(0.7211913967091175)  as agg0 FROM m3 WHERE NOT (CAST((0.9192293931564824) NOT IN (0.6760630186109298) AS BOOLEAN)) UNION ALL SELECT ALL SUM(0.7211913967091175)  as agg0 FROM m3 WHERE (CAST((0.9192293931564824) NOT IN (0.6760630186109298) AS BOOLEAN)) IS NULL) as asdf;
----
0.7211913967091175

query error Arrow error: Io error: Status \{ code: Internal, message: "Execute logical plan: Datafusion: Optimizer rule 'simplify_expressions' failed\\ncaused by\\nArrow error: Cast error: Cannot cast string '0\.5224095978421741' to value of Int64 type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT COUNT(CAST(CAST(0.5224095978421741 AS STRING) AS BIGINT)) FROM m1 WHERE (NOT (((m1.t0)LIKE(m1.t0)))) IN (TRUE) GROUP BY CAST(- (CAST(CAST(m1.t0 AS STRING) AS BIGINT)) AS BIGINT);

query T rowsort
SELECT ALL m1.f1, m1.f0, m1.t0 FROM m1;
----
false "NULL" "NULL"
false "f0" "t0"

query T rowsort
SELECT ALL m1.f1, m1.f0, m1.t0 FROM m1 WHERE ((((CAST(- (416542755) AS STRING))||(((CAST(m1.f1 AS STRING))>=(CAST(m1.t0 AS STRING))))))LIKE(CAST(((CAST(-7.83616155E8 AS STRING))||(((m1.t0)=(m1.t0)))) AS STRING))) UNION ALL SELECT m1.f1, m1.f0, m1.t0 FROM m1 WHERE NOT (((((CAST(- (416542755) AS STRING))||(((CAST(m1.f1 AS STRING))>=(CAST(m1.t0 AS STRING))))))LIKE(CAST(((CAST(-7.83616155E8 AS STRING))||(((m1.t0)=(m1.t0)))) AS STRING)))) UNION ALL SELECT m1.f1, m1.f0, m1.t0 FROM m1 WHERE (((((CAST(- (416542755) AS STRING))||(((CAST(m1.f1 AS STRING))>=(CAST(m1.t0 AS STRING))))))LIKE(CAST(((CAST(-7.83616155E8 AS STRING))||(((m1.t0)=(m1.t0)))) AS STRING)))) IS NULL;
----
false "NULL" "NULL"
false "f0" "t0"

query T rowsort
SELECT ALL BIT_OR(- (CAST(CAST(0.10877241438849494 AS DOUBLE) AS BIGINT))) FROM m1;
----
0

# SELECT ALL * FROM m0 RIGHT OUTER JOIN m2 ON CAST((m0.f1) IS NOT NULL AS BOOLEAN);
# SELECT ALL * FROM m0 RIGHT OUTER JOIN m2 ON CAST((m0.f1) IS NOT NULL AS BOOLEAN) WHERE NOT (NOT (m2.f0));
# SELECT * FROM m0 RIGHT OUTER JOIN m2 ON CAST((m0.f1) IS NOT NULL AS BOOLEAN) WHERE NOT (NOT (NOT (m2.f0)));
# SELECT ALL * FROM m0 RIGHT OUTER JOIN m2 ON CAST((m0.f1) IS NOT NULL AS BOOLEAN) WHERE (NOT (NOT (m2.f0))) IS NULL;
query T rowsort
SELECT m0.t0, m0.f1, m0.f0 FROM m0;
----
"916053861" 0.507623643211476 NULL
"NULL" 0.4131558313302025 true
"NULL" 0.47166914414715877 NULL
"NULL" 0.5469987105166848 true
"NULL" 0.5540439337463335 true
"NULL" 0.6326195071473769 false
"NULL" 0.9622249970170084 true
"NULL" NULL true
"NULL" NULL true
"NULL" NULL true
"NULL" NULL true
"t0" 0.0 false

query T rowsort
SELECT m0.t0, m0.f1, m0.f0 FROM m0 WHERE m0.f0 UNION ALL SELECT ALL m0.t0, m0.f1, m0.f0 FROM m0 WHERE NOT (m0.f0) UNION ALL SELECT m0.t0, m0.f1, m0.f0 FROM m0 WHERE (m0.f0) IS NULL;
----
"916053861" 0.507623643211476 NULL
"NULL" 0.4131558313302025 true
"NULL" 0.47166914414715877 NULL
"NULL" 0.5469987105166848 true
"NULL" 0.5540439337463335 true
"NULL" 0.6326195071473769 false
"NULL" 0.9622249970170084 true
"NULL" NULL true
"NULL" NULL true
"NULL" NULL true
"NULL" NULL true
"t0" 0.0 false

query T rowsort
SELECT m2.f0, m2.t0, m2.f1 FROM m2;
----
false "t0" "f1"

query T rowsort
SELECT m2.f0, m2.t0, m2.f1 FROM m2 WHERE CAST(((m2.t0) IN ('{e', '')) IS FALSE AS BOOLEAN) UNION ALL SELECT m2.f0, m2.t0, m2.f1 FROM m2 WHERE NOT (CAST(((m2.t0) IN ('{e', '')) IS FALSE AS BOOLEAN)) UNION ALL SELECT ALL m2.f0, m2.t0, m2.f1 FROM m2 WHERE (CAST(((m2.t0) IN ('{e', '')) IS FALSE AS BOOLEAN)) IS NULL;
----

query T rowsort
SELECT m2.f1 FROM m2;
----
"f1"

query T rowsort
SELECT m2.f1 FROM m2 WHERE CAST(CAST(CAST((m2.f0) BETWEEN (m2.f0) AND (m2.f0) AS BIGINT) AS STRING) AS BOOLEAN) UNION ALL SELECT m2.f1 FROM m2 WHERE NOT (CAST(CAST(CAST((m2.f0) BETWEEN (m2.f0) AND (m2.f0) AS BIGINT) AS STRING) AS BOOLEAN)) UNION ALL SELECT m2.f1 FROM m2 WHERE (CAST(CAST(CAST((m2.f0) BETWEEN (m2.f0) AND (m2.f0) AS BIGINT) AS STRING) AS BOOLEAN)) IS NULL;
----
"f1"

# SELECT ALL m2.t0, m2.f0, m0.t0, m0.f0, m0.f1, m2.f1 FROM m0 RIGHT OUTER JOIN m2 ON NOT (((m0.f1) NOT IN (0.854963106001919, 0.16337675168961685)) IN (TRUE, TRUE, FALSE));
# SELECT ALL m2.t0, m2.f0, m0.t0, m0.f0, m0.f1, m2.f1 FROM m0 RIGHT OUTER JOIN m2 ON NOT (((m0.f1) NOT IN (0.854963106001919, 0.16337675168961685)) IN (TRUE, TRUE, FALSE)) WHERE (NOT (('y') BETWEEN SYMMETRIC (m2.f1) AND (m0.t0))) IN (FALSE);
# SELECT ALL m2.t0, m2.f0, m0.t0, m0.f0, m0.f1, m2.f1 FROM m0 RIGHT OUTER JOIN m2 ON NOT (((m0.f1) NOT IN (0.854963106001919, 0.16337675168961685)) IN (TRUE, TRUE, FALSE)) WHERE NOT ((NOT (('y') BETWEEN SYMMETRIC (m2.f1) AND (m0.t0))) IN (FALSE));
# SELECT ALL m2.t0, m2.f0, m0.t0, m0.f0, m0.f1, m2.f1 FROM m0 RIGHT OUTER JOIN m2 ON NOT (((m0.f1) NOT IN (0.854963106001919, 0.16337675168961685)) IN (TRUE, TRUE, FALSE)) WHERE ((NOT (('y') BETWEEN SYMMETRIC (m2.f1) AND (m0.t0))) IN (FALSE)) IS NULL;
query T rowsort
SELECT m0.f0, m0.f1, m0.t0 FROM m0;
----
NULL 0.47166914414715877 "NULL"
NULL 0.507623643211476 "916053861"
false 0.0 "t0"
false 0.6326195071473769 "NULL"
true 0.4131558313302025 "NULL"
true 0.5469987105166848 "NULL"
true 0.5540439337463335 "NULL"
true 0.9622249970170084 "NULL"
true NULL "NULL"
true NULL "NULL"
true NULL "NULL"
true NULL "NULL"

query T rowsort
SELECT m0.f0, m0.f1, m0.t0 FROM m0 WHERE ((CAST(NOT (((((m0.f0)OR(m0.f0)))AND(m0.f0))) AS STRING))!=(m0.t0)) UNION ALL SELECT ALL m0.f0, m0.f1, m0.t0 FROM m0 WHERE NOT (((CAST(NOT (((((m0.f0)OR(m0.f0)))AND(m0.f0))) AS STRING))!=(m0.t0))) UNION ALL SELECT ALL m0.f0, m0.f1, m0.t0 FROM m0 WHERE (((CAST(NOT (((((m0.f0)OR(m0.f0)))AND(m0.f0))) AS STRING))!=(m0.t0))) IS NULL;
----
NULL 0.47166914414715877 "NULL"
NULL 0.507623643211476 "916053861"
false 0.0 "t0"
false 0.6326195071473769 "NULL"
true 0.4131558313302025 "NULL"
true 0.5469987105166848 "NULL"
true 0.5540439337463335 "NULL"
true 0.9622249970170084 "NULL"
true NULL "NULL"
true NULL "NULL"
true NULL "NULL"
true NULL "NULL"

# SELECT ALL m2.f0, m3.t0 FROM m3, m2 RIGHT OUTER JOIN m0 ON NOT ((- (CAST(m3.f0 AS BIGINT))) IS NULL);
query T rowsort
SELECT ALL m0.f0, m0.f1 FROM m0;
----
NULL 0.47166914414715877
NULL 0.507623643211476
false 0.0
false 0.6326195071473769
true 0.4131558313302025
true 0.5469987105166848
true 0.5540439337463335
true 0.9622249970170084
true NULL
true NULL
true NULL
true NULL

# SELECT ALL m0.f0, m0.f1 FROM m0 WHERE (CAST(m0.t0 AS BOOLEAN)) IS UNKNOWN ORDER BY m0.time;
# SELECT ALL m0.f0, m0.f1 FROM m0 WHERE NOT ((CAST(m0.t0 AS BOOLEAN)) IS UNKNOWN) ORDER BY m0.time;
# SELECT m0.f0, m0.f1 FROM m0 WHERE ((CAST(m0.t0 AS BOOLEAN)) IS UNKNOWN) IS NULL ORDER BY m0.time;
# SELECT m2.f1, m1.f1, m1.t0, m2.t0, m1.f0 FROM m1 FULL OUTER JOIN m2 ON CAST(0.20930940017451694 AS BOOLEAN);
# SELECT ALL m4.t0, m4.t2, m4.t1, m4.f0 FROM m4 RIGHT OUTER JOIN (SELECT ALL NOT (((CAST(m3.f0 AS STRING)) NOTNULL) IS TRUE), 0.8458078010061215 FROM m3, m0, m1 LIMIT 2123069349684844999) AS sub0 ON CAST(CAST(- (+ (m4.f0)) AS BOOLEAN) AS BOOLEAN);
query T rowsort
SELECT ALL m3.t1, m3.t0, m3.f0 FROM m3;
----
"t1" "t0" 0

query T rowsort
SELECT m3.t1, m3.t0, m3.f0 FROM m3 WHERE ((((((((m3.f1) IS NOT UNKNOWN)OR(NOT (FALSE))))OR(CAST(m3.t0 AS BOOLEAN))))OR(NOT (NULL)))) IN (FALSE, TRUE);
----
"t1" "t0" 0

query T rowsort
SELECT m3.t1, m3.t0, m3.f0 FROM m3 WHERE NOT (((((((((m3.f1) IS NOT UNKNOWN)OR(NOT (FALSE))))OR(CAST(m3.t0 AS BOOLEAN))))OR(NOT (NULL)))) IN (FALSE, TRUE));
----

query T rowsort
SELECT m3.t1, m3.t0, m3.f0 FROM m3 WHERE (((((((((m3.f1) IS NOT UNKNOWN)OR(NOT (FALSE))))OR(CAST(m3.t0 AS BOOLEAN))))OR(NOT (NULL)))) IN (FALSE, TRUE)) IS NULL;
----

query T rowsort
SELECT ALL m2.f0, m2.f1, m2.t0 FROM m2;
----
false "f1" "t0"

query T rowsort
SELECT ALL m2.f0, m2.f1, m2.t0 FROM m2 WHERE NOT (CAST(1.765622571E9 AS BOOLEAN));
----

# SELECT ALL m0.t0 FROM m0;
query T rowsort
SELECT m0.t0 FROM m0 WHERE NOT (NOT (((CAST(m0.f1 AS STRING))LIKE(CAST(-1694794127 AS STRING)))));
----

# SELECT m0.f1, m1.t0, m0.f0, m0.t0, m1.f1 FROM m0 FULL OUTER JOIN m1 ON ((CAST((1953366443) IN (-782686718) AS STRING))LIKE((((((('')||(1479831132)))||(0.7069979651760316)))||(CAST(((m1.f0)||(m0.t0)) AS STRING)))));
query T rowsort
SELECT ALL MAX(0.11902110991187975) FROM m0;
----
0.11902110991187975

query T rowsort
SELECT ALL BOOL_AND((0.6217647053258654) IN (0.30980467236273324)) FROM m3;
----
false

# SELECT ALL m4.t0, m4.t2 FROM m4;
query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Coordinator: Tskv: Arrow: Cast error: Cannot cast value '11' to value of Boolean type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m4.t0, m4.t2 FROM m4 WHERE CAST(((CAST(CAST(TRUE AS BIGINT) AS STRING))||(((CAST(0.47117722516469007 AS STRING))>(CAST(m4.f0 AS STRING))))) AS BOOLEAN) UNION ALL SELECT m4.t0, m4.t2 FROM m4 WHERE NOT (CAST(((CAST(CAST(TRUE AS BIGINT) AS STRING))||(((CAST(0.47117722516469007 AS STRING))>(CAST(m4.f0 AS STRING))))) AS BOOLEAN)) UNION ALL SELECT ALL m4.t0, m4.t2 FROM m4 WHERE (CAST(((CAST(CAST(TRUE AS BIGINT) AS STRING))||(((CAST(0.47117722516469007 AS STRING))>(CAST(m4.f0 AS STRING))))) AS BOOLEAN)) IS NULL;

# SELECT ALL m3.f1, m0.f1 FROM m3 LEFT OUTER JOIN m0 ON CAST(m0.t0 AS BOOLEAN);
# SELECT m3.f1, m0.f1 FROM m3 LEFT OUTER JOIN m0 ON CAST(m0.t0 AS BOOLEAN) WHERE (m3.f0) IN (0.5708387799536091);
# SELECT ALL m3.f1, m0.f1 FROM m3 LEFT OUTER JOIN m0 ON CAST(m0.t0 AS BOOLEAN) WHERE NOT ((m3.f0) IN (0.5708387799536091));
# SELECT m3.f1, m0.f1 FROM m3 LEFT OUTER JOIN m0 ON CAST(m0.t0 AS BOOLEAN) WHERE ((m3.f0) IN (0.5708387799536091)) IS NULL;
query T rowsort
SELECT ALL * FROM m2;
----
1970-01-01T00:00:00 "t0" false "f1"

query T rowsort
SELECT * FROM m2 WHERE m2.f0 UNION ALL SELECT ALL * FROM m2 WHERE NOT (m2.f0) UNION ALL SELECT * FROM m2 WHERE (m2.f0) IS NULL;
----
1970-01-01T00:00:00 "t0" false "f1"

# SELECT m4.t0, m4.t1, m1.f0, m1.f1, m0.f1, m0.f0, m4.f0, m0.t0, m4.t2, m1.t0 FROM m4, m1 JOIN m0 ON CAST(m4.f0 AS BOOLEAN) LEFT OUTER JOIN (SELECT ALL + (((- (((m3.f0)*(m3.f0))))/(+ (CAST(m0.f0 AS BIGINT))))) FROM m1, m0, m3, m2 LIMIT 6999205481943698109 OFFSET 4000587741962034753) AS sub0 ON (0.6055693808438042) BETWEEN SYMMETRIC (1.059599835E9) AND (- ((('1500327718')^(((m4.f0)*(m4.f0))))));
query T rowsort
SELECT m1.t0, m1.f0 FROM m1;
----
"NULL" "NULL"
"t0" "f0"

query T rowsort
SELECT ALL m1.t0, m1.f0 FROM m1 WHERE (m1.f1) IS TRUE;
----

query T rowsort
SELECT ALL m1.t0, m1.f0 FROM m1 WHERE NOT ((m1.f1) IS TRUE);
----
"NULL" "NULL"
"t0" "f0"

query T rowsort
SELECT ALL m1.t0, m1.f0 FROM m1 WHERE ((m1.f1) IS TRUE) IS NULL;
----

query T rowsort
SELECT ALL m4.t0, m4.t1, m4.f0 FROM m4;
----
"t0" "t1" 0

query T rowsort
SELECT m4.t0, m4.t1, m4.f0 FROM m4 WHERE CAST(CAST(m4.f0 AS BOOLEAN) AS BOOLEAN) UNION ALL SELECT m4.t0, m4.t1, m4.f0 FROM m4 WHERE NOT (CAST(CAST(m4.f0 AS BOOLEAN) AS BOOLEAN)) UNION ALL SELECT m4.t0, m4.t1, m4.f0 FROM m4 WHERE (CAST(CAST(m4.f0 AS BOOLEAN) AS BOOLEAN)) IS NULL;
----
"t0" "t1" 0

# SELECT ALL m3.t0 FROM m3 ORDER BY m3.t1 DESC;
query T rowsort
SELECT m3.t0 FROM m3 WHERE ((((((NOT (m3.f1))AND(TRUE)))AND((('')LIKE(m3.t1))))) IS FALSE) IS UNKNOWN UNION ALL SELECT m3.t0 FROM m3 WHERE NOT (((((((NOT (m3.f1))AND(TRUE)))AND((('')LIKE(m3.t1))))) IS FALSE) IS UNKNOWN) UNION ALL SELECT m3.t0 FROM m3 WHERE (((((((NOT (m3.f1))AND(TRUE)))AND((('')LIKE(m3.t1))))) IS FALSE) IS UNKNOWN) IS NULL;
----
"t0"

# SELECT ALL m4.t0 FROM m4;
query T rowsort
SELECT m4.t0 FROM m4 WHERE (((m4.t0)||(((m4.f0)IS DISTINCT FROM(m4.f0))))) IN ('', 'ylNEDW?');
----

query T rowsort
SELECT m4.t0 FROM m4 WHERE NOT ((((m4.t0)||(((m4.f0)IS DISTINCT FROM(m4.f0))))) IN ('', 'ylNEDW?'));
----
"t0"

query T rowsort
SELECT ALL m4.t0 FROM m4 WHERE ((((m4.t0)||(((m4.f0)IS DISTINCT FROM(m4.f0))))) IN ('', 'ylNEDW?')) IS NULL;
----

query T rowsort
SELECT ALL m0.f0, m0.f1, m0.t0 FROM m0;
----
NULL 0.47166914414715877 "NULL"
NULL 0.507623643211476 "916053861"
false 0.0 "t0"
false 0.6326195071473769 "NULL"
true 0.4131558313302025 "NULL"
true 0.5469987105166848 "NULL"
true 0.5540439337463335 "NULL"
true 0.9622249970170084 "NULL"
true NULL "NULL"
true NULL "NULL"
true NULL "NULL"
true NULL "NULL"

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m0.f0, m0.f1, m0.t0 FROM m0 WHERE ((((CAST(299102740 AS BOOLEAN))OR(((CAST(CAST(-824534954 AS BIGINT) AS STRING))IS DISTINCT FROM(CAST(0.9496735118924012 AS STRING))))))AND((((((m0.f0) IS TRUE)OR((m0.f0) BETWEEN SYMMETRIC (m0.f0) AND (m0.f0))))<(m0.f0)))) UNION ALL SELECT ALL m0.f0, m0.f1, m0.t0 FROM m0 WHERE NOT (((((CAST(299102740 AS BOOLEAN))OR(((CAST(CAST(-824534954 AS BIGINT) AS STRING))IS DISTINCT FROM(CAST(0.9496735118924012 AS STRING))))))AND((((((m0.f0) IS TRUE)OR((m0.f0) BETWEEN SYMMETRIC (m0.f0) AND (m0.f0))))<(m0.f0))))) UNION ALL SELECT ALL m0.f0, m0.f1, m0.t0 FROM m0 WHERE (((((CAST(299102740 AS BOOLEAN))OR(((CAST(CAST(-824534954 AS BIGINT) AS STRING))IS DISTINCT FROM(CAST(0.9496735118924012 AS STRING))))))AND((((((m0.f0) IS TRUE)OR((m0.f0) BETWEEN SYMMETRIC (m0.f0) AND (m0.f0))))<(m0.f0))))) IS NULL;

# SELECT ALL * FROM m1, m2 FULL OUTER JOIN m4 ON (557480044) NOT IN (1279357181);
# SELECT ALL * FROM m1, m2 FULL OUTER JOIN m4 ON (557480044) NOT IN (1279357181) WHERE (m1.f1) NOT IN (FALSE);
# SELECT ALL * FROM m1, m2 FULL OUTER JOIN m4 ON (557480044) NOT IN (1279357181) WHERE NOT ((m1.f1) NOT IN (FALSE));
# SELECT ALL * FROM m1, m2 FULL OUTER JOIN m4 ON (557480044) NOT IN (1279357181) WHERE ((m1.f1) NOT IN (FALSE)) IS NULL;
query T rowsort
SELECT ALL m0.f1, m0.f0, m0.t0 FROM m0;
----
0.0 false "t0"
0.4131558313302025 true "NULL"
0.47166914414715877 NULL "NULL"
0.507623643211476 NULL "916053861"
0.5469987105166848 true "NULL"
0.5540439337463335 true "NULL"
0.6326195071473769 false "NULL"
0.9622249970170084 true "NULL"
NULL true "NULL"
NULL true "NULL"
NULL true "NULL"
NULL true "NULL"

query T rowsort
SELECT m0.f1, m0.f0, m0.t0 FROM m0 WHERE ((((m0.t0)||(m0.f1))) IN ('', '')) IS NOT UNKNOWN UNION ALL SELECT ALL m0.f1, m0.f0, m0.t0 FROM m0 WHERE NOT (((((m0.t0)||(m0.f1))) IN ('', '')) IS NOT UNKNOWN) UNION ALL SELECT m0.f1, m0.f0, m0.t0 FROM m0 WHERE (((((m0.t0)||(m0.f1))) IN ('', '')) IS NOT UNKNOWN) IS NULL;
----
0.0 false "t0"
0.4131558313302025 true "NULL"
0.47166914414715877 NULL "NULL"
0.507623643211476 NULL "916053861"
0.5469987105166848 true "NULL"
0.5540439337463335 true "NULL"
0.6326195071473769 false "NULL"
0.9622249970170084 true "NULL"
NULL true "NULL"
NULL true "NULL"
NULL true "NULL"
NULL true "NULL"

query T rowsort
SELECT ALL m0.f0 FROM m0;
----
NULL
NULL
false
false
true
true
true
true
true
true
true
true

query T rowsort
SELECT m0.f0 FROM m0 WHERE (m0.f0) IN (NULL, TRUE);
----
true
true
true
true
true
true
true
true

query T rowsort
SELECT m0.f0 FROM m0 WHERE NOT ((m0.f0) IN (NULL, TRUE));
----

query T rowsort
SELECT ALL m0.f0 FROM m0 WHERE ((m0.f0) IN (NULL, TRUE)) IS NULL;
----
NULL
NULL
false
false

# SELECT SUM(0.2080972414069967) FROM m2 RIGHT OUTER JOIN m0 ON m2.f0;
# SELECT ALL m2.f0, m4.t1, m4.t0, m1.t0, m4.f0, m1.f0, m1.f1 FROM m1, m2 LEFT OUTER JOIN m4 ON (CAST(+ (((m4.f0)+(m4.f0))) AS BOOLEAN)) IS TRUE;
query T rowsort
SELECT - (AVG(((((((CAST(-631199003 AS BIGINT))-(- (26056234))))^(CAST(((-1384117880)+(-1715477248)) AS BIGINT))))-(- (- (- (-1568581974))))))) FROM m2 GROUP BY (CAST(m2.f0 AS BIGINT)) IN (-703875107);
----
-1062405681.0

query T rowsort
SELECT m2.f0 FROM m2;
----
false

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Arrow: Cast error: Cannot cast value 't0' to value of Boolean type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m2.f0 FROM m2 WHERE NOT (CAST(CAST(CAST(m2.t0 AS STRING) AS STRING) AS BOOLEAN)) ORDER BY m2.time;

# SELECT m4.t0, m2.f0, m1.t0, m1.f1, m4.t2, m1.f0, m2.t0, m4.f0 FROM m1, m4 CROSS JOIN m2;
# SELECT ALL m4.t0, m2.f0, m1.t0, m1.f1, m4.t2, m1.f0, m2.t0, m4.f0 FROM m1, m4 CROSS JOIN m2 WHERE (NOT (((((m4.t1)IS NOT DISTINCT FROM(m4.t0)))AND(CAST(m4.t1 AS BOOLEAN))))) IS TRUE;
# SELECT ALL m4.t0, m2.f0, m1.t0, m1.f1, m4.t2, m1.f0, m2.t0, m4.f0 FROM m1, m4 CROSS JOIN m2 WHERE NOT ((NOT (((((m4.t1)IS NOT DISTINCT FROM(m4.t0)))AND(CAST(m4.t1 AS BOOLEAN))))) IS TRUE);
# SELECT m4.t0, m2.f0, m1.t0, m1.f1, m4.t2, m1.f0, m2.t0, m4.f0 FROM m1, m4 CROSS JOIN m2 WHERE ((NOT (((((m4.t1)IS NOT DISTINCT FROM(m4.t0)))AND(CAST(m4.t1 AS BOOLEAN))))) IS TRUE) IS NULL;
# SELECT ALL m1.f0, m3.t0, m0.f1, m1.f1, m3.t1, m3.f0, m0.f0, m1.t0 FROM m1, m0 LEFT OUTER JOIN m3 ON NOT ((CAST(CAST(1827659846 AS BIGINT) AS STRING)) BETWEEN (CAST(((m3.t1)||(m3.f0)) AS STRING)) AND (m0.t0));
query T rowsort
SELECT ALL m2.f1, m2.t0 FROM m2;
----
"f1" "t0"

query T rowsort
SELECT ALL m2.f1, m2.t0 FROM m2 WHERE NOT (CAST(CAST(((m2.f0)AND(m2.f0)) AS BOOLEAN) AS BOOLEAN));
----
"f1" "t0"

query T rowsort
SELECT ALL m2.f1, m2.t0 FROM m2 WHERE NOT (NOT (CAST(CAST(((m2.f0)AND(m2.f0)) AS BOOLEAN) AS BOOLEAN)));
----

query T rowsort
SELECT m2.f1, m2.t0 FROM m2 WHERE (NOT (CAST(CAST(((m2.f0)AND(m2.f0)) AS BOOLEAN) AS BOOLEAN))) IS NULL;
----

query T rowsort
SELECT COUNT(CAST(CAST(0.17801957922120693 AS BIGINT) AS BIGINT)) FROM m2;
----
1

query T rowsort
SELECT m3.f1 FROM m3;
----
false

query T rowsort
SELECT ALL m3.f1 FROM m3 WHERE CAST(0.048016781693070554 AS BOOLEAN);
----
false

query T rowsort
SELECT m3.f1, m3.t1 FROM m3;
----
false "t1"

query T rowsort
SELECT ALL m3.f1, m3.t1 FROM m3 WHERE (CAST(CAST(m3.f1 AS BIGINT) AS BIGINT)) NOT IN (0.8666212197321519) UNION ALL SELECT m3.f1, m3.t1 FROM m3 WHERE NOT ((CAST(CAST(m3.f1 AS BIGINT) AS BIGINT)) NOT IN (0.8666212197321519)) UNION ALL SELECT ALL m3.f1, m3.t1 FROM m3 WHERE ((CAST(CAST(m3.f1 AS BIGINT) AS BIGINT)) NOT IN (0.8666212197321519)) IS NULL;
----
false "t1"

# SELECT ALL m1.f0, m1.t0, m2.f0, m2.f1, m2.t0, m1.f1 FROM m2 RIGHT OUTER JOIN m1 ON CAST(CAST(CAST(((m1.t0)||(NULL)) AS BIGINT) AS STRING) AS BOOLEAN);
query T rowsort
SELECT BIT_OR(- (- (-1577037646))) FROM m2;
----
-1577037646

query T rowsort
SELECT ALL m2.f0, m2.f1, m2.t0 FROM m2 ORDER BY m2.t0 DESC;
----
false "f1" "t0"

query T rowsort
SELECT m2.f0, m2.f1, m2.t0 FROM m2 WHERE (CAST(((-1424580636)*(1068537236)) AS BIGINT)) NOT IN (972022768) UNION ALL SELECT m2.f0, m2.f1, m2.t0 FROM m2 WHERE NOT ((CAST(((-1424580636)*(1068537236)) AS BIGINT)) NOT IN (972022768)) UNION ALL SELECT ALL m2.f0, m2.f1, m2.t0 FROM m2 WHERE ((CAST(((-1424580636)*(1068537236)) AS BIGINT)) NOT IN (972022768)) IS NULL;
----
false "f1" "t0"

query T rowsort
SELECT m4.f0, m4.t0, m4.t2, m4.t1 FROM m4;
----
0 "t0" "t2" "t1"

query T rowsort
SELECT ALL m4.f0, m4.t0, m4.t2, m4.t1 FROM m4 WHERE CAST(0.4802726047760667 AS BOOLEAN);
----
0 "t0" "t2" "t1"

# SELECT m0.f1, m3.t1, m3.f0, m3.f1, m0.t0 FROM m0 INNER JOIN m3 ON NOT ((0.03806252218269757) NOT IN (0.2477093334910364));
# SELECT m0.f1, m3.t1, m3.f0, m3.f1, m0.t0 FROM m0 INNER JOIN m3 ON NOT ((0.03806252218269757) NOT IN (0.2477093334910364)) WHERE ((CAST(((CAST(m3.f0 AS STRING))LIKE(CAST(m0.t0 AS STRING))) AS STRING))!=(CAST(m3.f0 AS STRING))) UNION ALL SELECT m0.f1, m3.t1, m3.f0, m3.f1, m0.t0 FROM m0 JOIN m3 ON NOT ((0.03806252218269757) NOT IN (0.2477093334910364)) WHERE NOT (((CAST(((CAST(m3.f0 AS STRING))LIKE(CAST(m0.t0 AS STRING))) AS STRING))!=(CAST(m3.f0 AS STRING)))) UNION ALL SELECT m0.f1, m3.t1, m3.f0, m3.f1, m0.t0 FROM m0 JOIN m3 ON NOT ((0.03806252218269757) NOT IN (0.2477093334910364)) WHERE (((CAST(((CAST(m3.f0 AS STRING))LIKE(CAST(m0.t0 AS STRING))) AS STRING))!=(CAST(m3.f0 AS STRING)))) IS NULL;
query T rowsort
SELECT ALL m0.t0, m0.f1 FROM m0;
----
"916053861" 0.507623643211476
"NULL" 0.4131558313302025
"NULL" 0.47166914414715877
"NULL" 0.5469987105166848
"NULL" 0.5540439337463335
"NULL" 0.6326195071473769
"NULL" 0.9622249970170084
"NULL" NULL
"NULL" NULL
"NULL" NULL
"NULL" NULL
"t0" 0.0

query error Arrow error: Io error: Status \{ code: Internal, message: "Execute logical plan: Datafusion: Optimizer rule 'simplify_expressions' failed\\ncaused by\\nArrow error: Cast error: Cannot cast string '<\{QdbO勌' to value of Int64 type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m0.t0, m0.f1 FROM m0 WHERE (- (CAST('<{QdbO勌' AS BIGINT))) NOT IN (993617280) UNION ALL SELECT ALL m0.t0, m0.f1 FROM m0 WHERE NOT ((- (CAST('<{QdbO勌' AS BIGINT))) NOT IN (993617280)) UNION ALL SELECT ALL m0.t0, m0.f1 FROM m0 WHERE ((- (CAST('<{QdbO勌' AS BIGINT))) NOT IN (993617280)) IS NULL;

# SELECT * FROM m0 FULL OUTER JOIN m2 ON ((((m2.t0) NOTNULL) IS NOT UNKNOWN)AND((((m2.t0)||(-217143237))) IN ('1퓇qhM<4g', 'n')));
query T rowsort
SELECT ALL m1.f0 FROM m1;
----
"NULL"
"f0"

query T rowsort
SELECT ALL m1.f0 FROM m1 WHERE CAST(CAST((-898117395) IN (-1907483300) AS STRING) AS BOOLEAN);
----

query T rowsort
SELECT m4.f0, m4.t2, m4.t1 FROM m4;
----
0 "t2" "t1"

query T rowsort
SELECT ALL m4.f0, m4.t2, m4.t1 FROM m4 WHERE TRUE;
----
0 "t2" "t1"

query T rowsort
SELECT m4.f0, m4.t2, m4.t1 FROM m4 WHERE NOT (TRUE);
----

query T rowsort
SELECT ALL m4.f0, m4.t2, m4.t1 FROM m4 WHERE (TRUE) IS NULL;
----

# SELECT m4.t0 FROM m4;
query T rowsort
SELECT ALL m4.t0 FROM m4 WHERE (3.99847122E8) NOT IN (0.6940150660530665, 0.902131412197604) UNION ALL SELECT ALL m4.t0 FROM m4 WHERE NOT ((3.99847122E8) NOT IN (0.6940150660530665, 0.902131412197604)) UNION ALL SELECT m4.t0 FROM m4 WHERE ((3.99847122E8) NOT IN (0.6940150660530665, 0.902131412197604)) IS NULL;
----
"t0"

# SELECT ALL m0.t0 FROM m0;
query T rowsort
SELECT ALL m0.t0 FROM m0 WHERE (((((m0.t0)||(m0.f0)))||(CAST(m0.t0 AS STRING)))) NOT IN ('Hp', '');
----
"t0"

# SELECT BIT_OR(((m3.f0)+(- (- (CAST(m3.f0 AS BIGINT)))))) FROM m3 FULL OUTER JOIN m1 ON (0.5392897400293365) IS NOT NULL;
# SELECT BIT_AND(+ (CAST(CAST(((m3.t1)||(m3.f0)) AS BIGINT) AS BIGINT))) FROM m2 RIGHT OUTER JOIN m3 ON ((((((CAST(CAST(0.3002240715225859 AS DOUBLE) AS BIGINT))<(CAST((m2.f0) BETWEEN (m3.f1) AND (m3.f1) AS BIGINT))))OR(NOT (((CAST(0.6388989010967958 AS STRING))LIKE(((m2.f1)||(m3.f0))))))))OR((- (m3.f0)) IN (590200401)));
# SELECT ALL m2.t0, m2.f0, m1.f0, m2.f1, m0.f0, m1.t0, m0.f1 FROM m1, m2 RIGHT OUTER JOIN m0 ON m0.f0;
# SELECT ALL m2.t0, m2.f0, m1.f0, m2.f1, m0.f0, m1.t0, m0.f1 FROM m1, m2 RIGHT OUTER JOIN m0 ON m0.f0 WHERE ((CAST(CAST(CAST(m0.f1 AS STRING) AS STRING) AS STRING))LIKE(CAST(+ (CAST(950269204 AS BIGINT)) AS STRING)));
query T rowsort
SELECT BIT_AND(1546514567) FROM m1;
----
1546514567

query T rowsort
SELECT BIT_AND(agg0) FROM (SELECT ALL BIT_AND(1546514567)  as agg0 FROM m1 WHERE CAST(0.6984529796083262 AS BOOLEAN) UNION ALL SELECT ALL BIT_AND(1546514567)  as agg0 FROM m1 WHERE NOT (CAST(0.6984529796083262 AS BOOLEAN)) UNION ALL SELECT BIT_AND(1546514567)  as agg0 FROM m1 WHERE (CAST(0.6984529796083262 AS BOOLEAN)) IS NULL) as asdf;
----
1546514567

# SELECT * FROM m4 FULL OUTER JOIN m2 ON (+ (((m4.f0)%(m4.f0)))) NOT IN (253867456);
# SELECT ALL m0.t0, m0.f0, m2.f1 FROM m0 CROSS JOIN m2;
# SELECT ALL m0.t0, m0.f0, m2.f1 FROM m0 CROSS JOIN m2 WHERE CAST(((CAST(((m2.f1)||(m0.f0)) AS BIGINT))-(CAST(CAST(0.502543600098422 AS BIGINT) AS BIGINT))) AS BOOLEAN) UNION ALL SELECT ALL m0.t0, m0.f0, m2.f1 FROM m0 CROSS JOIN m2 WHERE NOT (CAST(((CAST(((m2.f1)||(m0.f0)) AS BIGINT))-(CAST(CAST(0.502543600098422 AS BIGINT) AS BIGINT))) AS BOOLEAN)) UNION ALL SELECT ALL m0.t0, m0.f0, m2.f1 FROM m0 CROSS JOIN m2 WHERE (CAST(((CAST(((m2.f1)||(m0.f0)) AS BIGINT))-(CAST(CAST(0.502543600098422 AS BIGINT) AS BIGINT))) AS BOOLEAN)) IS NULL;
query T rowsort
SELECT MAX(m4.f0) FROM m4;
----
0

query T rowsort
SELECT * FROM m3;
----
1970-01-01T00:00:00 "t0" "t1" 0 false

query T rowsort
SELECT ALL * FROM m3 WHERE (((CAST(((m3.t0)<('N')) AS STRING))LIKE(CAST(0.5307694906163952 AS STRING)))) IS NOT UNKNOWN;
----
1970-01-01T00:00:00 "t0" "t1" 0 false

# SELECT m0.f1, m4.t2, m1.f0, m1.f1, m0.f0, m0.t0, m1.t0, m4.t0, m4.t1 FROM m1, m0 CROSS JOIN m4;
# SELECT ALL m0.f1, m4.t2, m1.f0, m1.f1, m0.f0, m0.t0, m1.t0, m4.t0, m4.t1 FROM m1, m0 CROSS JOIN m4 WHERE (((CAST(m4.t1 AS BIGINT))-(CAST(+ (m4.f0) AS BIGINT)))) IS NULL UNION ALL SELECT m0.f1, m4.t2, m1.f0, m1.f1, m0.f0, m0.t0, m1.t0, m4.t0, m4.t1 FROM m1, m0 CROSS JOIN m4 WHERE NOT ((((CAST(m4.t1 AS BIGINT))-(CAST(+ (m4.f0) AS BIGINT)))) IS NULL) UNION ALL SELECT ALL m0.f1, m4.t2, m1.f0, m1.f1, m0.f0, m0.t0, m1.t0, m4.t0, m4.t1 FROM m1, m0 CROSS JOIN m4 WHERE ((((CAST(m4.t1 AS BIGINT))-(CAST(+ (m4.f0) AS BIGINT)))) IS NULL) IS NULL;
query T rowsort
SELECT m4.t2, m4.f0 FROM m4;
----
"t2" 0

query T rowsort
SELECT ALL m4.t2, m4.f0 FROM m4 WHERE ((CAST(CAST(((m4.t1)LIKE(m4.t1)) AS BOOLEAN) AS STRING))IS NOT DISTINCT FROM(CAST(-1.020629854E9 AS STRING))) UNION ALL SELECT ALL m4.t2, m4.f0 FROM m4 WHERE NOT (((CAST(CAST(((m4.t1)LIKE(m4.t1)) AS BOOLEAN) AS STRING))IS NOT DISTINCT FROM(CAST(-1.020629854E9 AS STRING)))) UNION ALL SELECT m4.t2, m4.f0 FROM m4 WHERE (((CAST(CAST(((m4.t1)LIKE(m4.t1)) AS BOOLEAN) AS STRING))IS NOT DISTINCT FROM(CAST(-1.020629854E9 AS STRING)))) IS NULL;
----
"t2" 0

# SELECT ALL m4.t1, m2.f1, m3.f0, m2.f0 FROM m3, m2 CROSS JOIN m4;
# SELECT ALL m4.t1, m2.f1, m3.f0, m2.f0 FROM m3, m2 CROSS JOIN m4 WHERE CAST(m2.f0 AS BOOLEAN) UNION ALL SELECT ALL m4.t1, m2.f1, m3.f0, m2.f0 FROM m3, m2 CROSS JOIN m4 WHERE NOT (CAST(m2.f0 AS BOOLEAN)) UNION ALL SELECT m4.t1, m2.f1, m3.f0, m2.f0 FROM m3, m2 CROSS JOIN m4 WHERE (CAST(m2.f0 AS BOOLEAN)) IS NULL;
# SELECT m3.t1, m4.t1, m3.f0 FROM m4, m0 FULL OUTER JOIN m3 ON (- (((m3.f0)^(m3.f0)))) IN (0.5234847805157601, 0.6379618164389862);
# SELECT m4.t1 FROM m4;
# SELECT m4.t1 FROM m4 WHERE FALSE UNION ALL SELECT ALL m4.t1 FROM m4 WHERE NOT (FALSE) UNION ALL SELECT ALL m4.t1 FROM m4 WHERE (FALSE) IS NULL;
query T rowsort
SELECT ALL m3.f0, m3.t1, m3.f1, m3.t0 FROM m3;
----
0 "t1" false "t0"

query T rowsort
SELECT m3.f0, m3.t1, m3.f1, m3.t0 FROM m3 WHERE m3.f1 UNION ALL SELECT m3.f0, m3.t1, m3.f1, m3.t0 FROM m3 WHERE NOT (m3.f1) UNION ALL SELECT ALL m3.f0, m3.t1, m3.f1, m3.t0 FROM m3 WHERE (m3.f1) IS NULL;
----
0 "t1" false "t0"

query T rowsort
SELECT * FROM m4;
----
1970-01-01T00:00:00 "t0" "t1" "t2" 0

query T rowsort
SELECT ALL * FROM m4 WHERE FALSE;
----

query T rowsort
SELECT * FROM m4 WHERE NOT (FALSE);
----
1970-01-01T00:00:00 "t0" "t1" "t2" 0

query T rowsort
SELECT * FROM m4 WHERE (FALSE) IS NULL;
----

# SELECT BIT_OR(CAST((m3.t0) IN ('M섧!^p(섧', 'DZ*', '&', '￿') AS BIGINT)) FROM m4, m3 RIGHT OUTER JOIN m2 ON (m2.f0) IS FALSE;
# SELECT m3.t0 FROM m3;
query T rowsort
SELECT ALL m3.t0 FROM m3 WHERE NOT ((((m3.f0)*(m3.f0))) IN (2007382636));
----
"t0"

query T rowsort
SELECT ALL m3.t0 FROM m3 WHERE NOT (NOT ((((m3.f0)*(m3.f0))) IN (2007382636)));
----

query T rowsort
SELECT m3.t0 FROM m3 WHERE (NOT ((((m3.f0)*(m3.f0))) IN (2007382636))) IS NULL;
----

query T rowsort
SELECT m4.t1, m4.f0 FROM m4;
----
"t1" 0

query T rowsort
SELECT m4.t1, m4.f0 FROM m4 WHERE ((((((((m4.t1)||(m4.t0)))||(CAST(FALSE AS STRING))))||(m4.t0)))LIKE(((CAST(CAST(TRUE AS BIGINT) AS STRING))||(0.23558933987103448))));
----

# SELECT ALL m0.f0, m0.f1 FROM m2 LEFT OUTER JOIN m0 ON TRUE;
# SELECT ALL m0.f0, m0.f1 FROM m2 LEFT OUTER JOIN m0 ON TRUE WHERE NOT ((((((-1002944191) IN (0.6635120063802076))OR(CAST(CAST(1201158478 AS BIGINT) AS BOOLEAN))))OR(CAST(((-449412586)*(754649551)) AS BOOLEAN)))) UNION ALL SELECT ALL m0.f0, m0.f1 FROM m2 LEFT OUTER JOIN m0 ON TRUE WHERE NOT (NOT ((((((-1002944191) IN (0.6635120063802076))OR(CAST(CAST(1201158478 AS BIGINT) AS BOOLEAN))))OR(CAST(((-449412586)*(754649551)) AS BOOLEAN))))) UNION ALL SELECT m0.f0, m0.f1 FROM m2 LEFT OUTER JOIN m0 ON TRUE WHERE (NOT ((((((-1002944191) IN (0.6635120063802076))OR(CAST(CAST(1201158478 AS BIGINT) AS BOOLEAN))))OR(CAST(((-449412586)*(754649551)) AS BOOLEAN))))) IS NULL;
# SELECT ALL m0.f0, m4.f0, m4.t2, m2.f1, m0.t0, m4.t1 FROM m4, m0 FULL OUTER JOIN m2 ON NOT ((((((m0.t0)LIKE(m4.t2))) BETWEEN (CAST(m4.f0 AS BOOLEAN)) AND (CAST(m0.f1 AS BOOLEAN)))AND(CAST(0.3830509111302297 AS BOOLEAN))));
query T rowsort
SELECT ALL m3.t0, m3.f0, m3.f1 FROM m3;
----
"t0" 0 false

query T rowsort
SELECT ALL m3.t0, m3.f0, m3.f1 FROM m3 WHERE (NOT (NOT (((m3.t1)LIKE('XWI[}\룮f'))))) IS TRUE;
----

query T rowsort
SELECT m3.t0, m3.f0, m3.f1 FROM m3 WHERE NOT ((NOT (NOT (((m3.t1)LIKE('XWI[}\룮f'))))) IS TRUE);
----
"t0" 0 false

query T rowsort
SELECT ALL m3.t0, m3.f0, m3.f1 FROM m3 WHERE ((NOT (NOT (((m3.t1)LIKE('XWI[}\룮f'))))) IS TRUE) IS NULL;
----

# SELECT ALL * FROM m2 RIGHT OUTER JOIN m3 ON ((m3.t1)<(CAST(CAST(- (m3.f0) AS STRING) AS STRING)));
query T rowsort
SELECT m3.t1, m3.t0, m3.f1, m3.f0 FROM m3;
----
"t1" "t0" false 0

query T rowsort
SELECT ALL m3.t1, m3.t0, m3.f1, m3.f0 FROM m3 WHERE NOT (((m3.f0) NOT IN (-1387950188)) IN (FALSE));
----
"t1" "t0" false 0

query T rowsort
SELECT m3.t1, m3.t0, m3.f1, m3.f0 FROM m3 WHERE NOT (NOT (((m3.f0) NOT IN (-1387950188)) IN (FALSE)));
----

query T rowsort
SELECT ALL m3.t1, m3.t0, m3.f1, m3.f0 FROM m3 WHERE (NOT (((m3.f0) NOT IN (-1387950188)) IN (FALSE))) IS NULL;
----

query T rowsort
SELECT ALL m0.f1, m0.t0 FROM m0;
----
0.0 "t0"
0.4131558313302025 "NULL"
0.47166914414715877 "NULL"
0.507623643211476 "916053861"
0.5469987105166848 "NULL"
0.5540439337463335 "NULL"
0.6326195071473769 "NULL"
0.9622249970170084 "NULL"
NULL "NULL"
NULL "NULL"
NULL "NULL"
NULL "NULL"

query T rowsort
SELECT m0.f1, m0.t0 FROM m0 WHERE ((0.047015893638823414)<=(CAST(+ (- (-333024665)) AS BIGINT))) UNION ALL SELECT m0.f1, m0.t0 FROM m0 WHERE NOT (((0.047015893638823414)<=(CAST(+ (- (-333024665)) AS BIGINT)))) UNION ALL SELECT ALL m0.f1, m0.t0 FROM m0 WHERE (((0.047015893638823414)<=(CAST(+ (- (-333024665)) AS BIGINT)))) IS NULL;
----
0.0 "t0"
0.4131558313302025 "NULL"
0.47166914414715877 "NULL"
0.507623643211476 "916053861"
0.5469987105166848 "NULL"
0.5540439337463335 "NULL"
0.6326195071473769 "NULL"
0.9622249970170084 "NULL"
NULL "NULL"
NULL "NULL"
NULL "NULL"
NULL "NULL"

query T rowsort
SELECT 0.3000222763276785 FROM m3 GROUP BY CAST(0.8263429614430379 AS STRING);
----
0.3000222763276785

query T rowsort
SELECT ALL m0.t0, m0.f0 FROM m0 ORDER BY m0.t0 DESC;
----
"916053861" NULL
"NULL" NULL
"NULL" false
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"t0" false

query T rowsort
SELECT ALL m0.t0, m0.f0 FROM m0 WHERE (NOT ((0.114734690079073) NOT IN (0.16365240511015255, 0.42955713688800734, 0.172575140114413))) IS UNKNOWN UNION ALL SELECT ALL m0.t0, m0.f0 FROM m0 WHERE NOT ((NOT ((0.114734690079073) NOT IN (0.16365240511015255, 0.42955713688800734, 0.172575140114413))) IS UNKNOWN) UNION ALL SELECT m0.t0, m0.f0 FROM m0 WHERE ((NOT ((0.114734690079073) NOT IN (0.16365240511015255, 0.42955713688800734, 0.172575140114413))) IS UNKNOWN) IS NULL;
----
"916053861" NULL
"NULL" NULL
"NULL" false
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"t0" false

# SELECT ALL m1.f0, m2.t0, m1.f1, m2.f1, m0.f0, m1.t0, m2.f0, m0.f1 FROM m2, m1 FULL OUTER JOIN m0 ON (NOT (((m1.f0)LIKE(m0.t0)))) IN (FALSE);
# SELECT m0.f1, m2.t0, m2.f0, m2.f1, m0.t0, m1.f0, m1.t0 FROM m2, m1 RIGHT OUTER JOIN m0 ON (((((((m2.t0)||(149450536)))||((m1.f0) BETWEEN ('') AND ('堻suq᲼3읃'))))<(CAST(((-119883811)%(179989443)) AS STRING)))) IS FALSE;
query T rowsort
SELECT m1.t0, m1.f1 FROM m1;
----
"NULL" false
"t0" false

query T rowsort
SELECT ALL m1.t0, m1.f1 FROM m1 WHERE m1.f1;
----

query T rowsort
SELECT m1.t0, m1.f1 FROM m1 WHERE NOT (m1.f1);
----
"NULL" false
"t0" false

query T rowsort
SELECT m1.t0, m1.f1 FROM m1 WHERE (m1.f1) IS NULL;
----

# SELECT m4.t1, m4.f0, m3.f0, m3.t1 FROM m3 RIGHT OUTER JOIN m4 ON CAST(CAST(CAST(- (m4.f0) AS BOOLEAN) AS BIGINT) AS BOOLEAN);
# SELECT ALL m2.t0, m2.f1, m0.f1, m2.f0 FROM m0 INNER JOIN m2 ON (((CAST(1827659846 AS STRING))||(m0.f0))) IN ('>Z5QUF쁴^g', 'DD<_J*5');
query T rowsort
SELECT * FROM m0;
----
1970-01-01T00:00:00 "t0" false 0.0
1981-08-07T06:10:24.080382889 "NULL" false 0.6326195071473769
1990-01-03T22:50:52.613557553 "NULL" true NULL
2003-01-04T08:51:33.467254361 "916053861" NULL 0.507623643211476
2070-08-01T14:24:06.074400477 "NULL" NULL 0.47166914414715877
2096-05-01T02:46:47.649375642 "NULL" true NULL
2105-09-29T02:51:25.038645395 "NULL" true 0.4131558313302025
2148-08-02T22:07:02.062413216 "NULL" true 0.5469987105166848
2155-12-04T02:07:05.191822176 "NULL" true NULL
2169-05-25T00:03:51.914973050 "NULL" true 0.5540439337463335
2207-04-02T03:26:32.909450783 "NULL" true NULL
2208-09-18T16:29:32.643168002 "NULL" true 0.9622249970170084

query T rowsort
SELECT ALL * FROM m0 WHERE m0.f0;
----
1990-01-03T22:50:52.613557553 "NULL" true NULL
2096-05-01T02:46:47.649375642 "NULL" true NULL
2105-09-29T02:51:25.038645395 "NULL" true 0.4131558313302025
2148-08-02T22:07:02.062413216 "NULL" true 0.5469987105166848
2155-12-04T02:07:05.191822176 "NULL" true NULL
2169-05-25T00:03:51.914973050 "NULL" true 0.5540439337463335
2207-04-02T03:26:32.909450783 "NULL" true NULL
2208-09-18T16:29:32.643168002 "NULL" true 0.9622249970170084

query T rowsort
SELECT ALL * FROM m0 WHERE NOT (m0.f0);
----
1970-01-01T00:00:00 "t0" false 0.0
1981-08-07T06:10:24.080382889 "NULL" false 0.6326195071473769

query T rowsort
SELECT ALL * FROM m0 WHERE (m0.f0) IS NULL;
----
2003-01-04T08:51:33.467254361 "916053861" NULL 0.507623643211476
2070-08-01T14:24:06.074400477 "NULL" NULL 0.47166914414715877

query T rowsort
SELECT m4.t1, m4.f0, m4.t2 FROM m4;
----
"t1" 0 "t2"

query T rowsort
SELECT m4.t1, m4.f0, m4.t2 FROM m4 WHERE CAST(0.020640877848865924 AS BOOLEAN);
----
"t1" 0 "t2"

# SELECT m2.f0, m3.t0, m4.f0, m4.t1, m0.t0, m2.f1, m1.f0 FROM m3, m0, m2 JOIN m1 ON (CAST((m2.f1) NOT IN ('4)Rs', '*') AS BIGINT)) IN (458583645) RIGHT OUTER JOIN m4 ON ((((m0.f1) BETWEEN SYMMETRIC (m3.f0) AND (m3.f0)) IS UNKNOWN) IS FALSE) IS FALSE;
# SELECT BIT_OR(m4.f0) FROM m4 FULL OUTER JOIN m2 ON m2.f0;
query T rowsort
SELECT m0.t0, m0.f0, m0.f1 FROM m0 ORDER BY m0.f0 DESC;
----
"916053861" NULL 0.507623643211476
"NULL" NULL 0.47166914414715877
"NULL" false 0.6326195071473769
"NULL" true 0.4131558313302025
"NULL" true 0.5469987105166848
"NULL" true 0.5540439337463335
"NULL" true 0.9622249970170084
"NULL" true NULL
"NULL" true NULL
"NULL" true NULL
"NULL" true NULL
"t0" false 0.0

query T rowsort
SELECT ALL m0.t0, m0.f0, m0.f1 FROM m0 WHERE NOT ((m0.f1) IN (0.2836052453526412, 0.7626602242778882, 0.5360537057906514));
----
"916053861" NULL 0.507623643211476
"NULL" NULL 0.47166914414715877
"NULL" false 0.6326195071473769
"NULL" true 0.4131558313302025
"NULL" true 0.5469987105166848
"NULL" true 0.5540439337463335
"NULL" true 0.9622249970170084
"t0" false 0.0

query T rowsort
SELECT m0.t0, m0.f0, m0.f1 FROM m0 WHERE NOT (NOT ((m0.f1) IN (0.2836052453526412, 0.7626602242778882, 0.5360537057906514)));
----

query T rowsort
SELECT m0.t0, m0.f0, m0.f1 FROM m0 WHERE (NOT ((m0.f1) IN (0.2836052453526412, 0.7626602242778882, 0.5360537057906514))) IS NULL;
----
"NULL" true NULL
"NULL" true NULL
"NULL" true NULL
"NULL" true NULL

# SELECT ALL BOOL_OR((NOT (((CAST(m3.t1 AS STRING))LIKE(CAST(m3.f0 AS STRING))))) IS NULL) FROM m3 CROSS JOIN (SELECT m3.f0 FROM m1, m3, m0 LIMIT 36538866607834412) AS sub0;
# SELECT m4.f0, m4.t1, m3.t0, m4.t0, m3.f1, m1.f1, m3.t1, m1.f0, m1.t0, m3.f0 FROM m3, m1 CROSS JOIN m4;
# SELECT m4.f0, m4.t1, m3.t0, m4.t0, m3.f1, m1.f1, m3.t1, m1.f0, m1.t0, m3.f0 FROM m3, m1 CROSS JOIN m4 WHERE (NOT ((m1.f1) IN (TRUE, NULL))) BETWEEN ((NOT (((m3.t0)>=(m1.f0)))) IS NOT UNKNOWN) AND (CAST(((((m4.t1)||(m3.t0)))||(((m3.f0)+(m3.f0)))) AS BOOLEAN));
# SELECT m4.f0, m4.t1, m3.t0, m4.t0, m3.f1, m1.f1, m3.t1, m1.f0, m1.t0, m3.f0 FROM m3, m1 CROSS JOIN m4 WHERE NOT ((NOT ((m1.f1) IN (TRUE, NULL))) BETWEEN ((NOT (((m3.t0)>=(m1.f0)))) IS NOT UNKNOWN) AND (CAST(((((m4.t1)||(m3.t0)))||(((m3.f0)+(m3.f0)))) AS BOOLEAN)));
# SELECT m4.f0, m4.t1, m3.t0, m4.t0, m3.f1, m1.f1, m3.t1, m1.f0, m1.t0, m3.f0 FROM m3, m1 CROSS JOIN m4 WHERE ((NOT ((m1.f1) IN (TRUE, NULL))) BETWEEN ((NOT (((m3.t0)>=(m1.f0)))) IS NOT UNKNOWN) AND (CAST(((((m4.t1)||(m3.t0)))||(((m3.f0)+(m3.f0)))) AS BOOLEAN))) IS NULL;
# SELECT ALL m4.t1, m3.f0, m4.f0 FROM m4 INNER JOIN m3 ON ((CAST(m4.t0 AS BIGINT)) NOT IN (0.7452966755631395, 0.8480703681415422)) IS NOT NULL;
# SELECT m4.t1, m3.f0, m4.f0 FROM m4 JOIN m3 ON ((CAST(m4.t0 AS BIGINT)) NOT IN (0.7452966755631395, 0.8480703681415422)) IS NOT NULL WHERE m3.f1 UNION ALL SELECT ALL m4.t1, m3.f0, m4.f0 FROM m4 INNER JOIN m3 ON ((CAST(m4.t0 AS BIGINT)) NOT IN (0.7452966755631395, 0.8480703681415422)) IS NOT NULL WHERE NOT (m3.f1) UNION ALL SELECT ALL m4.t1, m3.f0, m4.f0 FROM m4 JOIN m3 ON ((CAST(m4.t0 AS BIGINT)) NOT IN (0.7452966755631395, 0.8480703681415422)) IS NOT NULL WHERE (m3.f1) IS NULL;
query T rowsort
SELECT m3.t0, m3.f0, m3.t1, m3.f1 FROM m3;
----
"t0" 0 "t1" false

query T rowsort
SELECT ALL m3.t0, m3.f0, m3.t1, m3.f1 FROM m3 WHERE CAST(- (m3.f0) AS BOOLEAN) UNION ALL SELECT m3.t0, m3.f0, m3.t1, m3.f1 FROM m3 WHERE NOT (CAST(- (m3.f0) AS BOOLEAN)) UNION ALL SELECT ALL m3.t0, m3.f0, m3.t1, m3.f1 FROM m3 WHERE (CAST(- (m3.f0) AS BOOLEAN)) IS NULL;
----
"t0" 0 "t1" false

# SELECT ALL m0.t0, m0.f1, m0.f0, m2.t0, m2.f0 FROM m2 CROSS JOIN m0;
# SELECT m0.t0, m0.f1, m0.f0, m2.t0, m2.f0 FROM m2 CROSS JOIN m0 WHERE ((0.9614557522475116)=(((- (+ (1732614752)))^(CAST(CAST(m2.f0 AS STRING) AS BIGINT))))) UNION ALL SELECT m0.t0, m0.f1, m0.f0, m2.t0, m2.f0 FROM m2 CROSS JOIN m0 WHERE NOT (((0.9614557522475116)=(((- (+ (1732614752)))^(CAST(CAST(m2.f0 AS STRING) AS BIGINT)))))) UNION ALL SELECT ALL m0.t0, m0.f1, m0.f0, m2.t0, m2.f0 FROM m2 CROSS JOIN m0 WHERE (((0.9614557522475116)=(((- (+ (1732614752)))^(CAST(CAST(m2.f0 AS STRING) AS BIGINT)))))) IS NULL;
# SELECT m4.t2 FROM m4;
# SELECT m4.t2 FROM m4 WHERE TRUE;
query T rowsort
SELECT m4.t2 FROM m4 WHERE NOT (TRUE);
----

query T rowsort
SELECT ALL m4.t2 FROM m4 WHERE (TRUE) IS NULL;
----

# SELECT m3.f1, m3.t0, m0.t0, m0.f0, m0.f1 FROM m3 LEFT OUTER JOIN m0 ON (m0.f0) IN (TRUE, TRUE);
# SELECT ALL m3.f1, m3.t0, m0.t0, m0.f0, m0.f1 FROM m3 LEFT OUTER JOIN m0 ON (m0.f0) IN (TRUE, TRUE) WHERE (m0.f0) IS UNKNOWN UNION ALL SELECT m3.f1, m3.t0, m0.t0, m0.f0, m0.f1 FROM m3 LEFT OUTER JOIN m0 ON (m0.f0) IN (TRUE, TRUE) WHERE NOT ((m0.f0) IS UNKNOWN) UNION ALL SELECT m3.f1, m3.t0, m0.t0, m0.f0, m0.f1 FROM m3 LEFT OUTER JOIN m0 ON (m0.f0) IN (TRUE, TRUE) WHERE ((m0.f0) IS UNKNOWN) IS NULL;
query T rowsort
SELECT m0.f1, m0.f0 FROM m0;
----
0.0 false
0.4131558313302025 true
0.47166914414715877 NULL
0.507623643211476 NULL
0.5469987105166848 true
0.5540439337463335 true
0.6326195071473769 false
0.9622249970170084 true
NULL true
NULL true
NULL true
NULL true

query T rowsort
SELECT m0.f1, m0.f0 FROM m0 WHERE ((CAST(-1826088151 AS BIGINT)) NOT IN (-1169738310, -848444240)) IS UNKNOWN;
----

query T rowsort
SELECT ALL m0.f1, m0.f0 FROM m0 WHERE NOT (((CAST(-1826088151 AS BIGINT)) NOT IN (-1169738310, -848444240)) IS UNKNOWN);
----
0.0 false
0.4131558313302025 true
0.47166914414715877 NULL
0.507623643211476 NULL
0.5469987105166848 true
0.5540439337463335 true
0.6326195071473769 false
0.9622249970170084 true
NULL true
NULL true
NULL true
NULL true

query T rowsort
SELECT ALL m0.f1, m0.f0 FROM m0 WHERE (((CAST(-1826088151 AS BIGINT)) NOT IN (-1169738310, -848444240)) IS UNKNOWN) IS NULL;
----

# SELECT SUM(0.578829438644664) FROM m2, m4 RIGHT OUTER JOIN m3 ON CAST(CAST(CAST(+ (-1606426810) AS BIGINT) AS BIGINT) AS BOOLEAN);
query T rowsort
SELECT ALL m3.t0, m3.f1, m3.t1 FROM m3;
----
"t0" false "t1"

query T rowsort
SELECT m3.t0, m3.f1, m3.t1 FROM m3 WHERE m3.f1 UNION ALL SELECT ALL m3.t0, m3.f1, m3.t1 FROM m3 WHERE NOT (m3.f1) UNION ALL SELECT ALL m3.t0, m3.f1, m3.t1 FROM m3 WHERE (m3.f1) IS NULL;
----
"t0" false "t1"

# SELECT m0.t0, m2.t0, m2.f1, m3.t1, m3.t0, m3.f1 FROM m0, m2 CROSS JOIN m3;
# SELECT m0.t0, m2.t0, m2.f1, m3.t1, m3.t0, m3.f1 FROM m0, m2 CROSS JOIN m3 WHERE (((CAST(0.4262717670656908 AS STRING))||(((m3.f0)^(m3.f0))))) IN ('at', '+[C>났fE퍎') UNION ALL SELECT ALL m0.t0, m2.t0, m2.f1, m3.t1, m3.t0, m3.f1 FROM m0, m2 CROSS JOIN m3 WHERE NOT ((((CAST(0.4262717670656908 AS STRING))||(((m3.f0)^(m3.f0))))) IN ('at', '+[C>났fE퍎')) UNION ALL SELECT ALL m0.t0, m2.t0, m2.f1, m3.t1, m3.t0, m3.f1 FROM m0, m2 CROSS JOIN m3 WHERE ((((CAST(0.4262717670656908 AS STRING))||(((m3.f0)^(m3.f0))))) IN ('at', '+[C>났fE퍎')) IS NULL;
query T rowsort
SELECT ALL m4.t2, m4.t0, m4.f0 FROM m4;
----
"t2" "t0" 0

query T rowsort
SELECT ALL m4.t2, m4.t0, m4.f0 FROM m4 WHERE TRUE UNION ALL SELECT m4.t2, m4.t0, m4.f0 FROM m4 WHERE NOT (TRUE) UNION ALL SELECT m4.t2, m4.t0, m4.f0 FROM m4 WHERE (TRUE) IS NULL;
----
"t2" "t0" 0

# SELECT ALL m4.t1, m3.t0 FROM m3 LEFT OUTER JOIN m4 ON NOT ((((m3.t1)||('f/Qwf5'))) NOT IN ('
# QL', 'X%vi	N'));
# SELECT m4.t1, m3.t0 FROM m3 LEFT OUTER JOIN m4 ON NOT ((((m3.t1)||('f/Qwf5'))) NOT IN ('
# QL', 'X%vi	N')) WHERE NOT ((+ (+ (1633623176))) NOTNULL) UNION ALL SELECT ALL m4.t1, m3.t0 FROM m3 LEFT OUTER JOIN m4 ON NOT ((((m3.t1)||('f/Qwf5'))) NOT IN ('
# QL', 'X%vi	N')) WHERE NOT (NOT ((+ (+ (1633623176))) NOTNULL)) UNION ALL SELECT m4.t1, m3.t0 FROM m3 LEFT OUTER JOIN m4 ON NOT ((((m3.t1)||('f/Qwf5'))) NOT IN ('
# QL', 'X%vi	N')) WHERE (NOT ((+ (+ (1633623176))) NOTNULL)) IS NULL;
query T rowsort
SELECT m4.f0, m4.t2 FROM m4;
----
0 "t2"

query T rowsort
SELECT ALL m4.f0, m4.t2 FROM m4 WHERE (CAST(((((((TRUE)OR(TRUE)))AND(TRUE)))AND(FALSE)) AS BOOLEAN)) NOT IN (FALSE) UNION ALL SELECT m4.f0, m4.t2 FROM m4 WHERE NOT ((CAST(((((((TRUE)OR(TRUE)))AND(TRUE)))AND(FALSE)) AS BOOLEAN)) NOT IN (FALSE)) UNION ALL SELECT ALL m4.f0, m4.t2 FROM m4 WHERE ((CAST(((((((TRUE)OR(TRUE)))AND(TRUE)))AND(FALSE)) AS BOOLEAN)) NOT IN (FALSE)) IS NULL;
----
0 "t2"

# SELECT ALL m3.f0, m3.f1, m4.t1, m4.t2, m4.f0, m3.t1 FROM m3 CROSS JOIN m4;
# SELECT m3.f0, m3.f1, m4.t1, m4.t2, m4.f0, m3.t1 FROM m3 CROSS JOIN m4 WHERE CAST(0.4892353024948941 AS BOOLEAN);
query T rowsort
SELECT ALL m0.f1, m0.f0, m0.t0 FROM m0;
----
0.0 false "t0"
0.4131558313302025 true "NULL"
0.47166914414715877 NULL "NULL"
0.507623643211476 NULL "916053861"
0.5469987105166848 true "NULL"
0.5540439337463335 true "NULL"
0.6326195071473769 false "NULL"
0.9622249970170084 true "NULL"
NULL true "NULL"
NULL true "NULL"
NULL true "NULL"
NULL true "NULL"

query T rowsort
SELECT ALL m0.f1, m0.f0, m0.t0 FROM m0 WHERE (CAST(CAST(108498909 AS STRING) AS STRING)) NOT IN ('㟶VdҴ|R') UNION ALL SELECT ALL m0.f1, m0.f0, m0.t0 FROM m0 WHERE NOT ((CAST(CAST(108498909 AS STRING) AS STRING)) NOT IN ('㟶VdҴ|R')) UNION ALL SELECT m0.f1, m0.f0, m0.t0 FROM m0 WHERE ((CAST(CAST(108498909 AS STRING) AS STRING)) NOT IN ('㟶VdҴ|R')) IS NULL;
----
0.0 false "t0"
0.4131558313302025 true "NULL"
0.47166914414715877 NULL "NULL"
0.507623643211476 NULL "916053861"
0.5469987105166848 true "NULL"
0.5540439337463335 true "NULL"
0.6326195071473769 false "NULL"
0.9622249970170084 true "NULL"
NULL true "NULL"
NULL true "NULL"
NULL true "NULL"
NULL true "NULL"

query T rowsort
SELECT * FROM m0;
----
1970-01-01T00:00:00 "t0" false 0.0
1981-08-07T06:10:24.080382889 "NULL" false 0.6326195071473769
1990-01-03T22:50:52.613557553 "NULL" true NULL
2003-01-04T08:51:33.467254361 "916053861" NULL 0.507623643211476
2070-08-01T14:24:06.074400477 "NULL" NULL 0.47166914414715877
2096-05-01T02:46:47.649375642 "NULL" true NULL
2105-09-29T02:51:25.038645395 "NULL" true 0.4131558313302025
2148-08-02T22:07:02.062413216 "NULL" true 0.5469987105166848
2155-12-04T02:07:05.191822176 "NULL" true NULL
2169-05-25T00:03:51.914973050 "NULL" true 0.5540439337463335
2207-04-02T03:26:32.909450783 "NULL" true NULL
2208-09-18T16:29:32.643168002 "NULL" true 0.9622249970170084

query T rowsort
SELECT * FROM m0 WHERE (CAST(((-983671546)*(1075247831)) AS BIGINT)) NOT IN (-2040259374, 935034281, 1026141981, 1998939448);
----
1970-01-01T00:00:00 "t0" false 0.0
1981-08-07T06:10:24.080382889 "NULL" false 0.6326195071473769
1990-01-03T22:50:52.613557553 "NULL" true NULL
2003-01-04T08:51:33.467254361 "916053861" NULL 0.507623643211476
2070-08-01T14:24:06.074400477 "NULL" NULL 0.47166914414715877
2096-05-01T02:46:47.649375642 "NULL" true NULL
2105-09-29T02:51:25.038645395 "NULL" true 0.4131558313302025
2148-08-02T22:07:02.062413216 "NULL" true 0.5469987105166848
2155-12-04T02:07:05.191822176 "NULL" true NULL
2169-05-25T00:03:51.914973050 "NULL" true 0.5540439337463335
2207-04-02T03:26:32.909450783 "NULL" true NULL
2208-09-18T16:29:32.643168002 "NULL" true 0.9622249970170084

# SELECT m3.f1, m3.t1, m1.t0, m3.t0, m3.f0 FROM m1 LEFT OUTER JOIN m3 ON ((((CAST(m3.t0 AS STRING))<(CAST(m3.t0 AS STRING)))) IS FALSE) NOTNULL;
# SELECT m0.f1, m2.f0, m2.f1, m2.t0, m0.t0, m0.f0 FROM m2 RIGHT OUTER JOIN m0 ON CAST(CAST(((m0.t0)||(NOT (m0.f0))) AS STRING) AS BOOLEAN);
query T rowsort
SELECT ALL m1.f1 FROM m1;
----
false
false

query T rowsort
SELECT ALL m1.f1 FROM m1 WHERE CAST(CAST(((CAST(1442669721 AS BIGINT))^(CAST(m1.f1 AS BIGINT))) AS BIGINT) AS BOOLEAN);
----
false
false

# SELECT m1.t0, m4.t2, m3.t1, m1.f1, m4.t0 FROM m3, m4 RIGHT OUTER JOIN m1 ON (CAST(((m3.f0)%(1622616140)) AS BOOLEAN)) NOT IN (TRUE, FALSE);
query T rowsort
SELECT m4.f0 FROM m4;
----
0

query T rowsort
SELECT m4.f0 FROM m4 WHERE NOT (((TRUE) NOT IN (TRUE, FALSE)) IS TRUE) UNION ALL SELECT ALL m4.f0 FROM m4 WHERE NOT (NOT (((TRUE) NOT IN (TRUE, FALSE)) IS TRUE)) UNION ALL SELECT m4.f0 FROM m4 WHERE (NOT (((TRUE) NOT IN (TRUE, FALSE)) IS TRUE)) IS NULL;
----
0

# SELECT ALL m3.t1, m3.f1, m3.t0, m1.f1, m0.f0, m0.f1 FROM m3, m0 JOIN m1 ON CAST(+ (CAST(m3.t0 AS BIGINT)) AS BOOLEAN);
# SELECT m1.f1, m3.t1, m4.t1, m4.f0, m3.t0 FROM m4, m1 INNER JOIN m3 ON m1.f1;
# SELECT ALL m1.f1, m3.t1, m4.t1, m4.f0, m3.t0 FROM m4, m1 JOIN m3 ON m1.f1 WHERE ((CAST(((((m4.t2)||(m4.f0)))IS DISTINCT FROM(CAST(m1.f0 AS STRING))) AS BOOLEAN))OR((NOT (((((((((m1.f1)AND(m1.f1)))OR(m3.f1)))AND(TRUE)))OR(m1.f1)))) IS NOT NULL)) UNION ALL SELECT m1.f1, m3.t1, m4.t1, m4.f0, m3.t0 FROM m4, m1 INNER JOIN m3 ON m1.f1 WHERE NOT (((CAST(((((m4.t2)||(m4.f0)))IS DISTINCT FROM(CAST(m1.f0 AS STRING))) AS BOOLEAN))OR((NOT (((((((((m1.f1)AND(m1.f1)))OR(m3.f1)))AND(TRUE)))OR(m1.f1)))) IS NOT NULL))) UNION ALL SELECT m1.f1, m3.t1, m4.t1, m4.f0, m3.t0 FROM m4, m1 INNER JOIN m3 ON m1.f1 WHERE (((CAST(((((m4.t2)||(m4.f0)))IS DISTINCT FROM(CAST(m1.f0 AS STRING))) AS BOOLEAN))OR((NOT (((((((((m1.f1)AND(m1.f1)))OR(m3.f1)))AND(TRUE)))OR(m1.f1)))) IS NOT NULL))) IS NULL;
query T rowsort
SELECT m1.t0, m1.f0, m1.f1 FROM m1;
----
"NULL" "NULL" false
"t0" "f0" false

query T rowsort
SELECT m1.t0, m1.f0, m1.f1 FROM m1 WHERE CAST(((((((1185127241)%(1836419101)))^(+ (-1460414512))))^(+ (+ (336207901)))) AS BOOLEAN) UNION ALL SELECT m1.t0, m1.f0, m1.f1 FROM m1 WHERE NOT (CAST(((((((1185127241)%(1836419101)))^(+ (-1460414512))))^(+ (+ (336207901)))) AS BOOLEAN)) UNION ALL SELECT ALL m1.t0, m1.f0, m1.f1 FROM m1 WHERE (CAST(((((((1185127241)%(1836419101)))^(+ (-1460414512))))^(+ (+ (336207901)))) AS BOOLEAN)) IS NULL;
----
"NULL" "NULL" false
"t0" "f0" false

# SELECT BIT_AND(- (((CAST(+ (-1221120959) AS BIGINT))-(CAST(CAST(m0.f0 AS BIGINT) AS BIGINT))))) FROM m0 LEFT OUTER JOIN m1 ON ((CAST(((CAST(m1.f0 AS STRING))||(CAST(m0.f1 AS BIGINT))) AS STRING))LIKE(CAST(CAST(((((m1.f1)AND(m1.f1)))OR(m1.f1)) AS BIGINT) AS STRING)));
query T rowsort
SELECT ALL m1.f0 FROM m1;
----
"NULL"
"f0"

query T rowsort
SELECT m1.f0 FROM m1 WHERE m1.f1 UNION ALL SELECT m1.f0 FROM m1 WHERE NOT (m1.f1) UNION ALL SELECT m1.f0 FROM m1 WHERE (m1.f1) IS NULL;
----
"NULL"
"f0"

query T rowsort
SELECT BIT_OR(+ (- (CAST(CAST(m3.f0 AS BIGINT) AS BIGINT)))) FROM m3;
----
0

# SELECT ALL m2.f0, m1.f1, m3.f0, m2.t0, m3.f1 FROM m1, m0, m4 RIGHT OUTER JOIN m2 ON ((((CAST(((m4.f0)+(m4.f0)) AS STRING))||(((((m4.f0)+(m3.f0)))^(((m4.f0)-(811149237)))))))LIKE(CAST((m0.f1) IN (0.5817418157536297, 0.5012220503223734) AS STRING))) LEFT OUTER JOIN m3 ON (0.16393570037104765) NOT IN (0.5293532910048114);
query T rowsort
SELECT ALL BOOL_OR((CAST(((m4.f0)*(360976499)) AS BIGINT)) NOT IN (0.2624596958986172, 0.685835611344487)) FROM m4;
----
true

# SELECT ALL m0.t0, m4.t1, m4.t0 FROM m4, m0 CROSS JOIN m2;
# SELECT ALL m0.t0, m4.t1, m4.t0 FROM m4, m0 CROSS JOIN m2 WHERE CAST((CAST(m0.f0 AS BIGINT)) IN (0.9957100834296094, 0.9817620987969857, 0.9809589199110798) AS BOOLEAN);
query T rowsort
SELECT m1.f1, m1.t0, m1.f0 FROM m1;
----
false "NULL" "NULL"
false "t0" "f0"

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m1.f1, m1.t0, m1.f0 FROM m1 WHERE NOT ((((-1775207148) IN (0.1688741619134384, 0.39268540295479615, 0.4546068705461972, -0.0, 0.5989936450918769)) BETWEEN SYMMETRIC (((m1.f0)IS NOT DISTINCT FROM(m1.f0))) AND ((('L')>=(m1.f0)))) IS NOT UNKNOWN);

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m1.f1, m1.t0, m1.f0 FROM m1 WHERE NOT (NOT ((((-1775207148) IN (0.1688741619134384, 0.39268540295479615, 0.4546068705461972, -0.0, 0.5989936450918769)) BETWEEN SYMMETRIC (((m1.f0)IS NOT DISTINCT FROM(m1.f0))) AND ((('L')>=(m1.f0)))) IS NOT UNKNOWN));

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m1.f1, m1.t0, m1.f0 FROM m1 WHERE (NOT ((((-1775207148) IN (0.1688741619134384, 0.39268540295479615, 0.4546068705461972, -0.0, 0.5989936450918769)) BETWEEN SYMMETRIC (((m1.f0)IS NOT DISTINCT FROM(m1.f0))) AND ((('L')>=(m1.f0)))) IS NOT UNKNOWN)) IS NULL;

query T rowsort
SELECT m0.f0, m0.t0, m0.f1 FROM m0;
----
NULL "916053861" 0.507623643211476
NULL "NULL" 0.47166914414715877
false "NULL" 0.6326195071473769
false "t0" 0.0
true "NULL" 0.4131558313302025
true "NULL" 0.5469987105166848
true "NULL" 0.5540439337463335
true "NULL" 0.9622249970170084
true "NULL" NULL
true "NULL" NULL
true "NULL" NULL
true "NULL" NULL

query T rowsort
SELECT ALL m0.f0, m0.t0, m0.f1 FROM m0 WHERE CAST((NOT (((m0.f0)OR(m0.f0)))) IS NOT NULL AS BOOLEAN) UNION ALL SELECT m0.f0, m0.t0, m0.f1 FROM m0 WHERE NOT (CAST((NOT (((m0.f0)OR(m0.f0)))) IS NOT NULL AS BOOLEAN)) UNION ALL SELECT m0.f0, m0.t0, m0.f1 FROM m0 WHERE (CAST((NOT (((m0.f0)OR(m0.f0)))) IS NOT NULL AS BOOLEAN)) IS NULL;
----
NULL "916053861" 0.507623643211476
NULL "NULL" 0.47166914414715877
false "NULL" 0.6326195071473769
false "t0" 0.0
true "NULL" 0.4131558313302025
true "NULL" 0.5469987105166848
true "NULL" 0.5540439337463335
true "NULL" 0.9622249970170084
true "NULL" NULL
true "NULL" NULL
true "NULL" NULL
true "NULL" NULL

# SELECT m3.t0 FROM m3;
query T rowsort
SELECT m3.t0 FROM m3 WHERE ((CAST(CAST(((m3.t0)LIKE(m3.t0)) AS BIGINT) AS STRING))IS NOT DISTINCT FROM(CAST(CAST(CAST(m3.f0 AS STRING) AS STRING) AS STRING)));
----

# SELECT m1.f0, m0.f0, m0.f1, m1.t0 FROM m0 LEFT OUTER JOIN m1 ON NOT ((0.8923225309672689) IN (0.18309209582245778, 0.20469501179582605));
# SELECT ALL m1.f0, m0.f0, m0.f1, m1.t0 FROM m0 LEFT OUTER JOIN m1 ON NOT ((0.8923225309672689) IN (0.18309209582245778, 0.20469501179582605)) WHERE (NOT (NOT ((FALSE) IS UNKNOWN))) IS TRUE;
# SELECT ALL m1.f0, m0.f0, m0.f1, m1.t0 FROM m0 LEFT OUTER JOIN m1 ON NOT ((0.8923225309672689) IN (0.18309209582245778, 0.20469501179582605)) WHERE NOT ((NOT (NOT ((FALSE) IS UNKNOWN))) IS TRUE);
# SELECT m1.f0, m0.f0, m0.f1, m1.t0 FROM m0 LEFT OUTER JOIN m1 ON NOT ((0.8923225309672689) IN (0.18309209582245778, 0.20469501179582605)) WHERE ((NOT (NOT ((FALSE) IS UNKNOWN))) IS TRUE) IS NULL;
query T rowsort
SELECT m4.f0, m4.t1, m4.t0, m4.t2 FROM m4;
----
0 "t1" "t0" "t2"

query T rowsort
SELECT ALL m4.f0, m4.t1, m4.t0, m4.t2 FROM m4 WHERE TRUE;
----
0 "t1" "t0" "t2"

query T rowsort
SELECT ALL m4.f0, m4.t1, m4.t0, m4.t2 FROM m4 WHERE NOT (TRUE);
----

query T rowsort
SELECT m4.f0, m4.t1, m4.t0, m4.t2 FROM m4 WHERE (TRUE) IS NULL;
----

# SELECT m4.t2, m0.f1 FROM m4, m2 CROSS JOIN m0 CROSS JOIN m3;
# SELECT m4.t2, m0.f1 FROM m4, m2 CROSS JOIN m0 CROSS JOIN m3 WHERE m3.f1;
# SELECT ALL m4.t2, m0.f1 FROM m4, m2 CROSS JOIN m0 CROSS JOIN m3 WHERE NOT (m3.f1);
# SELECT ALL m4.t2, m0.f1 FROM m4, m2 CROSS JOIN m0 CROSS JOIN m3 WHERE (m3.f1) IS NULL;
query T rowsort
SELECT SUM(0.743111469303056) FROM m2;
----
0.743111469303056

# SELECT m1.t0, m2.f1, m2.t0, m4.f0, m0.f1, m4.t2, m4.t1, m0.t0, m0.f0, m1.f1, m1.f0 FROM m2, m1 FULL OUTER JOIN m4 ON (CAST(CAST(m2.f0 AS BIGINT) AS BIGINT)) NOT IN (1652786228, 1614661983) LEFT OUTER JOIN m0 ON (- (+ (m4.f0))) IN (576037805, -1246373896);
query T rowsort
SELECT m1.f0, m1.f1 FROM m1;
----
"NULL" false
"f0" false

query T rowsort
SELECT ALL m1.f0, m1.f1 FROM m1 WHERE (CAST(+ (145121856) AS STRING)) IN ('');
----

# SELECT ALL BOOL_AND(((((CAST(m0.f0 AS STRING))LIKE(((m2.t0)||(m0.f0))))) IS NOT UNKNOWN) IS NOT UNKNOWN) FROM m1, m2 FULL OUTER JOIN m0 ON (((CAST(-1270320226 AS BIGINT))-(- (-488758559)))) NOT IN (-674243287, -535666956);
# SELECT ALL m2.t0 FROM m2;
# SELECT m2.t0 FROM m2 WHERE (- (CAST(m2.f0 AS BIGINT))) NOT IN (-1500810744);
query T rowsort
SELECT m1.f1, m1.f0, m1.t0 FROM m1;
----
false "NULL" "NULL"
false "f0" "t0"

query T rowsort
SELECT ALL m1.f1, m1.f0, m1.t0 FROM m1 WHERE CAST(+ (- (((-683547521)^(-595803483)))) AS BOOLEAN) UNION ALL SELECT m1.f1, m1.f0, m1.t0 FROM m1 WHERE NOT (CAST(+ (- (((-683547521)^(-595803483)))) AS BOOLEAN)) UNION ALL SELECT ALL m1.f1, m1.f0, m1.t0 FROM m1 WHERE (CAST(+ (- (((-683547521)^(-595803483)))) AS BOOLEAN)) IS NULL;
----
false "NULL" "NULL"
false "f0" "t0"

query T rowsort
SELECT ALL m2.f1, m2.t0, m2.f0 FROM m2;
----
"f1" "t0" false

query T rowsort
SELECT ALL m2.f1, m2.t0, m2.f0 FROM m2 WHERE (CAST(((2147222458)%(-1798940471)) AS BOOLEAN)) IN (TRUE, TRUE);
----
"f1" "t0" false

query T rowsort
SELECT ALL m2.f1, m2.t0, m2.f0 FROM m2 WHERE NOT ((CAST(((2147222458)%(-1798940471)) AS BOOLEAN)) IN (TRUE, TRUE));
----

query T rowsort
SELECT m2.f1, m2.t0, m2.f0 FROM m2 WHERE ((CAST(((2147222458)%(-1798940471)) AS BOOLEAN)) IN (TRUE, TRUE)) IS NULL;
----

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Projections require unique expression names but the expression \\"m0\.f1\\" at position 1 and \\"m0\.f1\\" at position 2 have the same name\. Consider aliasing \(\\"AS\\"\) one of them\.", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m0.f0 FROM m0 ORDER BY m0.f1 ASC, m0.f1 ASC;

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Coordinator: Tskv: Arrow: Cast error: Cannot cast value 'ࢀ\+h3356161281' to value of Boolean type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m0.f0 FROM m0 WHERE (CAST((((('ࢀ+h')||('335616128')))||((m0.t0) NOT IN ('', 'A6<k['''))) AS BOOLEAN)) IS TRUE;

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Coordinator: Tskv: Arrow: Cast error: Cannot cast value 'ࢀ\+h3356161281' to value of Boolean type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m0.f0 FROM m0 WHERE NOT ((CAST((((('ࢀ+h')||('335616128')))||((m0.t0) NOT IN ('', 'A6<k['''))) AS BOOLEAN)) IS TRUE);

query T rowsort
SELECT m0.f0 FROM m0 WHERE ((CAST((((('ࢀ+h')||('335616128')))||((m0.t0) NOT IN ('', 'A6<k['''))) AS BOOLEAN)) IS TRUE) IS NULL;
----

query T rowsort
SELECT m0.f0, m0.f1, m0.t0 FROM m0;
----
NULL 0.47166914414715877 "NULL"
NULL 0.507623643211476 "916053861"
false 0.0 "t0"
false 0.6326195071473769 "NULL"
true 0.4131558313302025 "NULL"
true 0.5469987105166848 "NULL"
true 0.5540439337463335 "NULL"
true 0.9622249970170084 "NULL"
true NULL "NULL"
true NULL "NULL"
true NULL "NULL"
true NULL "NULL"

query T rowsort
SELECT ALL m0.f0, m0.f1, m0.t0 FROM m0 WHERE CAST(-1759240892 AS BOOLEAN);
----
NULL 0.47166914414715877 "NULL"
NULL 0.507623643211476 "916053861"
false 0.0 "t0"
false 0.6326195071473769 "NULL"
true 0.4131558313302025 "NULL"
true 0.5469987105166848 "NULL"
true 0.5540439337463335 "NULL"
true 0.9622249970170084 "NULL"
true NULL "NULL"
true NULL "NULL"
true NULL "NULL"
true NULL "NULL"

query T rowsort
SELECT ALL m0.f0, m0.f1, m0.t0 FROM m0 WHERE NOT (CAST(-1759240892 AS BOOLEAN));
----

query T rowsort
SELECT ALL m0.f0, m0.f1, m0.t0 FROM m0 WHERE (CAST(-1759240892 AS BOOLEAN)) IS NULL;
----

query T rowsort
SELECT ALL m2.f1 FROM m2;
----
"f1"

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Coordinator: Tskv: Arrow: Divide by zero error", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m2.f1 FROM m2 WHERE (((- (817932306))%(CAST(m2.f0 AS BIGINT)))) NOT IN (694810662, -319337649, -1259189301);

query T rowsort
SELECT ALL * FROM m1;
----
1970-01-01T00:00:00 "t0" "f0" false
2207-04-18T13:56:55.539246350 "NULL" "NULL" false

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL * FROM m1 WHERE (((m1.f1) NOT IN (FALSE, TRUE, FALSE, TRUE)) IN (NULL, FALSE, TRUE)) BETWEEN SYMMETRIC (NOT (NOT (((m1.f0)LIKE(m1.f0))))) AND ((NOT (m1.f1)) NOT IN (TRUE, TRUE, FALSE));

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL * FROM m1 WHERE NOT ((((m1.f1) NOT IN (FALSE, TRUE, FALSE, TRUE)) IN (NULL, FALSE, TRUE)) BETWEEN SYMMETRIC (NOT (NOT (((m1.f0)LIKE(m1.f0))))) AND ((NOT (m1.f1)) NOT IN (TRUE, TRUE, FALSE)));

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL * FROM m1 WHERE ((((m1.f1) NOT IN (FALSE, TRUE, FALSE, TRUE)) IN (NULL, FALSE, TRUE)) BETWEEN SYMMETRIC (NOT (NOT (((m1.f0)LIKE(m1.f0))))) AND ((NOT (m1.f1)) NOT IN (TRUE, TRUE, FALSE))) IS NULL;

# SELECT ALL m3.f0, m3.t1, m1.t0, m3.f1, m1.f0, m3.t0 FROM m1 LEFT OUTER JOIN m3 ON CAST(CAST(NOT ((m1.f1) IS UNKNOWN) AS STRING) AS BOOLEAN);
query T rowsort
SELECT ALL m1.f1 FROM m1;
----
false
false

query T rowsort
SELECT m1.f1 FROM m1 WHERE NOT (NOT (((m1.t0) BETWEEN (m1.f0) AND (m1.f0)) IS NOT UNKNOWN));
----
false

query T rowsort
SELECT m1.f1 FROM m1 WHERE NOT (NOT (NOT (((m1.t0) BETWEEN (m1.f0) AND (m1.f0)) IS NOT UNKNOWN)));
----

query T rowsort
SELECT m1.f1 FROM m1 WHERE (NOT (NOT (((m1.t0) BETWEEN (m1.f0) AND (m1.f0)) IS NOT UNKNOWN))) IS NULL;
----

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Arrow: Divide by zero error", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT COUNT(- (+ (((((m3.f0)%(m3.f0)))-(CAST(m3.f1 AS BIGINT)))))) FROM m3;

query T rowsort
SELECT m1.f1 FROM m1;
----
false
false

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: sql parser error: Expected AS, found: NOTNULL", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m1.f1 FROM m1 WHERE CAST((((((m1.f1)AND(m1.f1)))IS DISTINCT FROM((m1.f1) IS NULL))) NOTNULL AS BOOLEAN) UNION ALL SELECT m1.f1 FROM m1 WHERE NOT (CAST((((((m1.f1)AND(m1.f1)))IS DISTINCT FROM((m1.f1) IS NULL))) NOTNULL AS BOOLEAN)) UNION ALL SELECT ALL m1.f1 FROM m1 WHERE (CAST((((((m1.f1)AND(m1.f1)))IS DISTINCT FROM((m1.f1) IS NULL))) NOTNULL AS BOOLEAN)) IS NULL;

query T rowsort
SELECT ALL COUNT(+ (CAST(0.5249418544831504 AS BIGINT))) FROM m2;
----
1

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Coordinator: Tskv: Arrow: Cast error: Cannot cast string 'f10' to value of Int64 type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT SUM(agg0) FROM (SELECT ALL COUNT(+ (CAST(0.5249418544831504 AS BIGINT)))  as agg0 FROM m2 WHERE CAST(((CAST(((m2.f1)||(m2.f0)) AS BIGINT))*(((+ (-670907606))%(- (1202595187))))) AS BOOLEAN) UNION ALL SELECT ALL COUNT(+ (CAST(0.5249418544831504 AS BIGINT)))  as agg0 FROM m2 WHERE NOT (CAST(((CAST(((m2.f1)||(m2.f0)) AS BIGINT))*(((+ (-670907606))%(- (1202595187))))) AS BOOLEAN)) UNION ALL SELECT ALL COUNT(+ (CAST(0.5249418544831504 AS BIGINT)))  as agg0 FROM m2 WHERE (CAST(((CAST(((m2.f1)||(m2.f0)) AS BIGINT))*(((+ (-670907606))%(- (1202595187))))) AS BOOLEAN)) IS NULL) as asdf;

# SELECT m3.f1, m4.t1, m4.t2, m3.f0, m3.t0, m4.f0, m0.f1, m0.t0, m3.t1, m4.t0, m0.f0 FROM m0, m4 RIGHT OUTER JOIN m3 ON (m0.f0) IS UNKNOWN;
# SELECT ALL m2.t0 FROM m2;
# SELECT m2.t0 FROM m2 WHERE (NOT (CAST(CAST(m2.t0 AS BOOLEAN) AS BOOLEAN))) IS UNKNOWN UNION ALL SELECT ALL m2.t0 FROM m2 WHERE NOT ((NOT (CAST(CAST(m2.t0 AS BOOLEAN) AS BOOLEAN))) IS UNKNOWN) UNION ALL SELECT m2.t0 FROM m2 WHERE ((NOT (CAST(CAST(m2.t0 AS BOOLEAN) AS BOOLEAN))) IS UNKNOWN) IS NULL;
query T rowsort
SELECT ALL m0.t0, m0.f0, m0.f1 FROM m0;
----
"916053861" NULL 0.507623643211476
"NULL" NULL 0.47166914414715877
"NULL" false 0.6326195071473769
"NULL" true 0.4131558313302025
"NULL" true 0.5469987105166848
"NULL" true 0.5540439337463335
"NULL" true 0.9622249970170084
"NULL" true NULL
"NULL" true NULL
"NULL" true NULL
"NULL" true NULL
"t0" false 0.0

query T rowsort
SELECT m0.t0, m0.f0, m0.f1 FROM m0 WHERE NOT (NOT (TRUE)) UNION ALL SELECT ALL m0.t0, m0.f0, m0.f1 FROM m0 WHERE NOT (NOT (NOT (TRUE))) UNION ALL SELECT m0.t0, m0.f0, m0.f1 FROM m0 WHERE (NOT (NOT (TRUE))) IS NULL;
----
"916053861" NULL 0.507623643211476
"NULL" NULL 0.47166914414715877
"NULL" false 0.6326195071473769
"NULL" true 0.4131558313302025
"NULL" true 0.5469987105166848
"NULL" true 0.5540439337463335
"NULL" true 0.9622249970170084
"NULL" true NULL
"NULL" true NULL
"NULL" true NULL
"NULL" true NULL
"t0" false 0.0

query T rowsort
SELECT m0.f0, m0.t0 FROM m0;
----
NULL "916053861"
NULL "NULL"
false "NULL"
false "t0"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"

query T rowsort
SELECT ALL m0.f0, m0.t0 FROM m0 WHERE CAST(((((((CAST(NOT (m0.f0) AS BOOLEAN))AND((((((((m0.f0)OR(m0.f0)))AND(m0.f0)))OR(m0.f0))) IS TRUE)))AND(CAST(NOT (m0.f0) AS BOOLEAN))))AND(((m0.t0)LIKE(((m0.t0)||(m0.f0)))))) AS BOOLEAN) UNION ALL SELECT ALL m0.f0, m0.t0 FROM m0 WHERE NOT (CAST(((((((CAST(NOT (m0.f0) AS BOOLEAN))AND((((((((m0.f0)OR(m0.f0)))AND(m0.f0)))OR(m0.f0))) IS TRUE)))AND(CAST(NOT (m0.f0) AS BOOLEAN))))AND(((m0.t0)LIKE(((m0.t0)||(m0.f0)))))) AS BOOLEAN)) UNION ALL SELECT ALL m0.f0, m0.t0 FROM m0 WHERE (CAST(((((((CAST(NOT (m0.f0) AS BOOLEAN))AND((((((((m0.f0)OR(m0.f0)))AND(m0.f0)))OR(m0.f0))) IS TRUE)))AND(CAST(NOT (m0.f0) AS BOOLEAN))))AND(((m0.t0)LIKE(((m0.t0)||(m0.f0)))))) AS BOOLEAN)) IS NULL;
----
NULL "916053861"
NULL "NULL"
false "NULL"
false "t0"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"

# SELECT ALL BIT_AND(CAST(0.17465477853586175 AS BIGINT)) FROM m0 INNER JOIN m3 ON NOT (CAST(0.32730273191062886 AS BOOLEAN));
# SELECT ALL m2.f0, m2.t0, m0.t0, m2.f1 FROM m0 LEFT OUTER JOIN m2 ON m0.f0;
# SELECT m2.f0, m2.t0, m0.t0, m2.f1 FROM m0 LEFT OUTER JOIN m2 ON m0.f0 WHERE NOT (m0.f0);
# SELECT ALL m2.f0, m2.t0, m0.t0, m2.f1 FROM m0 LEFT OUTER JOIN m2 ON m0.f0 WHERE NOT (NOT (m0.f0));
# SELECT ALL m2.f0, m2.t0, m0.t0, m2.f1 FROM m0 LEFT OUTER JOIN m2 ON m0.f0 WHERE (NOT (m0.f0)) IS NULL;
# SELECT ALL m4.t1 FROM m4;
# SELECT ALL m4.t1 FROM m4 WHERE TRUE;
query T rowsort
SELECT m4.t1 FROM m4 WHERE NOT (TRUE);
----

query T rowsort
SELECT m4.t1 FROM m4 WHERE (TRUE) IS NULL;
----

query T rowsort
SELECT ALL m2.f0, m2.t0, m2.f1 FROM m2;
----
false "t0" "f1"

query T rowsort
SELECT ALL m2.f0, m2.t0, m2.f1 FROM m2 WHERE (m2.f0) IS NOT UNKNOWN UNION ALL SELECT m2.f0, m2.t0, m2.f1 FROM m2 WHERE NOT ((m2.f0) IS NOT UNKNOWN) UNION ALL SELECT m2.f0, m2.t0, m2.f1 FROM m2 WHERE ((m2.f0) IS NOT UNKNOWN) IS NULL;
----
false "t0" "f1"

# SELECT m4.t1, m3.t0, m4.t2, m4.t0, m3.f1, m3.t1, m3.f0 FROM m3 FULL OUTER JOIN m4 ON ((CAST(CAST(m4.f0 AS BIGINT) AS STRING))IS NOT DISTINCT FROM(((CAST(CAST(m3.f0 AS BOOLEAN) AS STRING))||(NOT ((m3.t0) NOT IN ('+ਢ7ਢ', 'RHJK)'))))));
query T rowsort
SELECT ALL * FROM m3;
----
1970-01-01T00:00:00 "t0" "t1" 0 false

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Arrow: Divide by zero error", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT * FROM m3 WHERE NOT (((((((((((((m3.f0)%(m3.f0)))<=(+ (m3.f0))))OR(CAST(NOT (m3.f1) AS BOOLEAN))))OR(NOT (m3.f1))))AND((((m3.t1)LIKE(m3.t1))) IS TRUE)))OR(NOT ((m3.f1) NOT IN (TRUE, TRUE)))));

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Coordinator: Tskv: Arrow: Divide by zero error", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT * FROM m3 WHERE NOT (NOT (((((((((((((m3.f0)%(m3.f0)))<=(+ (m3.f0))))OR(CAST(NOT (m3.f1) AS BOOLEAN))))OR(NOT (m3.f1))))AND((((m3.t1)LIKE(m3.t1))) IS TRUE)))OR(NOT ((m3.f1) NOT IN (TRUE, TRUE))))));

query T rowsort
SELECT * FROM m3 WHERE (NOT (((((((((((((m3.f0)%(m3.f0)))<=(+ (m3.f0))))OR(CAST(NOT (m3.f1) AS BOOLEAN))))OR(NOT (m3.f1))))AND((((m3.t1)LIKE(m3.t1))) IS TRUE)))OR(NOT ((m3.f1) NOT IN (TRUE, TRUE)))))) IS NULL;
----

query T rowsort
SELECT ALL m0.t0, m0.f0, m0.f1 FROM m0;
----
"916053861" NULL 0.507623643211476
"NULL" NULL 0.47166914414715877
"NULL" false 0.6326195071473769
"NULL" true 0.4131558313302025
"NULL" true 0.5469987105166848
"NULL" true 0.5540439337463335
"NULL" true 0.9622249970170084
"NULL" true NULL
"NULL" true NULL
"NULL" true NULL
"NULL" true NULL
"t0" false 0.0

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m0.t0, m0.f0, m0.f1 FROM m0 WHERE NOT ((CAST((m0.f0) BETWEEN SYMMETRIC (m0.f0) AND (m0.f0) AS BOOLEAN)) IS TRUE) UNION ALL SELECT ALL m0.t0, m0.f0, m0.f1 FROM m0 WHERE NOT (NOT ((CAST((m0.f0) BETWEEN SYMMETRIC (m0.f0) AND (m0.f0) AS BOOLEAN)) IS TRUE)) UNION ALL SELECT m0.t0, m0.f0, m0.f1 FROM m0 WHERE (NOT ((CAST((m0.f0) BETWEEN SYMMETRIC (m0.f0) AND (m0.f0) AS BOOLEAN)) IS TRUE)) IS NULL;

query T rowsort
SELECT BIT_OR(m4.f0) FROM m4;
----
0

query T rowsort
SELECT BIT_AND(-483484156) FROM m1;
----
-483484156

# SELECT ALL m1.f0, m0.t0, m3.t1, m2.t0, m4.t1, m0.f0, m4.f0, m3.f1, m2.f0, m3.f0, m3.t0, m4.t2 FROM m1, m0, m3 CROSS JOIN m2 LEFT OUTER JOIN m4 ON CAST(m0.f0 AS BOOLEAN);
# SELECT m0.t0 FROM m0;
query T rowsort
SELECT ALL m0.t0 FROM m0 WHERE CAST((((CAST(m0.f1 AS BOOLEAN))=((m0.f0) BETWEEN (m0.f0) AND (m0.f0)))) BETWEEN (m0.f0) AND (((NOT (m0.f0))OR(CAST(m0.f0 AS BOOLEAN)))) AS BOOLEAN) UNION ALL SELECT m0.t0 FROM m0 WHERE NOT (CAST((((CAST(m0.f1 AS BOOLEAN))=((m0.f0) BETWEEN (m0.f0) AND (m0.f0)))) BETWEEN (m0.f0) AND (((NOT (m0.f0))OR(CAST(m0.f0 AS BOOLEAN)))) AS BOOLEAN)) UNION ALL SELECT ALL m0.t0 FROM m0 WHERE (CAST((((CAST(m0.f1 AS BOOLEAN))=((m0.f0) BETWEEN (m0.f0) AND (m0.f0)))) BETWEEN (m0.f0) AND (((NOT (m0.f0))OR(CAST(m0.f0 AS BOOLEAN)))) AS BOOLEAN)) IS NULL;
----
"916053861"
"NULL"
"NULL"
"NULL"
"NULL"
"NULL"
"NULL"
"NULL"
"NULL"
"NULL"
"NULL"
"t0"

query T rowsort
SELECT ALL SUM(0.2270785075878876) FROM m1;
----
0.4541570151757752

# SELECT MAX(-1.497906008E9) FROM m0 LEFT OUTER JOIN m2 ON ((((CAST(1.140511682E9 AS BOOLEAN))AND(((((((((((((m0.f0)OR(m2.f0)))AND(m2.f0)))OR(NOT (FALSE))))OR((-1800798167) NOT IN (1349325681, 1920632917))))OR(((CAST(1843633281 AS STRING))LIKE(CAST(m2.f1 AS STRING))))))AND(((('?')>=(m2.f1))) BETWEEN (((m2.f0)AND(m0.f0))) AND (((m2.f0)OR(m0.f0))))))))AND((+ (1720243269)) IN (1544176690)));
# SELECT m4.t0 FROM m4;
# SELECT m4.t0 FROM m4 WHERE (0.48791563994884113) IN (0.780135220930507, 0.5604948451284412, 0.6007404384359013);
# SELECT m4.t0 FROM m4 WHERE NOT ((0.48791563994884113) IN (0.780135220930507, 0.5604948451284412, 0.6007404384359013));
query T rowsort
SELECT ALL m4.t0 FROM m4 WHERE ((0.48791563994884113) IN (0.780135220930507, 0.5604948451284412, 0.6007404384359013)) IS NULL;
----

# SELECT ALL COUNT(- (+ (CAST(5.43535954E8 AS BIGINT)))) FROM m4, m1 LEFT OUTER JOIN m3 ON ((CAST(((- (m4.f0))+(((m3.f0)^(m4.f0)))) AS STRING))LIKE(CAST(6.16187422E8 AS STRING)));
# SELECT ALL m3.t1, m3.t0 FROM m3;
query T rowsort
SELECT ALL m3.t1, m3.t0 FROM m3 WHERE NOT (m3.f1);
----
"t1" "t0"

query T rowsort
SELECT ALL m3.t1, m3.t0 FROM m3 WHERE NOT (NOT (m3.f1));
----

query T rowsort
SELECT m3.t1, m3.t0 FROM m3 WHERE (NOT (m3.f1)) IS NULL;
----

# SELECT m3.f1, m4.t2, m4.t1, m4.f0 FROM m3, m1 JOIN m4 ON (CAST(((m4.t0)||(m4.f0)) AS STRING)) NOT IN ('㟋7', 'M龬03i|');
query T rowsort
SELECT m2.f1 FROM m2;
----
"f1"

query T rowsort
SELECT m2.f1 FROM m2 WHERE CAST(((((1542062485)-(CAST(m2.f0 AS BIGINT))))*(-1870405309)) AS BOOLEAN);
----
"f1"

query T rowsort
SELECT m3.t0, m3.t1, m3.f0 FROM m3;
----
"t0" "t1" 0

query T rowsort
SELECT m3.t0, m3.t1, m3.f0 FROM m3 WHERE (0.9762128074916361) NOT IN (0.9726400600003514) UNION ALL SELECT ALL m3.t0, m3.t1, m3.f0 FROM m3 WHERE NOT ((0.9762128074916361) NOT IN (0.9726400600003514)) UNION ALL SELECT m3.t0, m3.t1, m3.f0 FROM m3 WHERE ((0.9762128074916361) NOT IN (0.9726400600003514)) IS NULL;
----
"t0" "t1" 0

# SELECT m0.f0, m3.f0, m0.t0, m3.t1, m0.f1, m3.f1, m3.t0 FROM m0 RIGHT OUTER JOIN m3 ON (0.881364960727508) IS NOT NULL;
# SELECT ALL m0.f0, m3.f0, m0.t0, m3.t1, m0.f1, m3.f1, m3.t0 FROM m0 RIGHT OUTER JOIN m3 ON (0.881364960727508) IS NOT NULL WHERE (m3.f0) BETWEEN SYMMETRIC (0.7291429070652525) AND (- (((+ (m3.f0))+(CAST(m0.t0 AS BIGINT)))));
# SELECT m0.f0, m3.f0, m0.t0, m3.t1, m0.f1, m3.f1, m3.t0 FROM m0 RIGHT OUTER JOIN m3 ON (0.881364960727508) IS NOT NULL WHERE NOT ((m3.f0) BETWEEN SYMMETRIC (0.7291429070652525) AND (- (((+ (m3.f0))+(CAST(m0.t0 AS BIGINT))))));
# SELECT ALL m0.f0, m3.f0, m0.t0, m3.t1, m0.f1, m3.f1, m3.t0 FROM m0 RIGHT OUTER JOIN m3 ON (0.881364960727508) IS NOT NULL WHERE ((m3.f0) BETWEEN SYMMETRIC (0.7291429070652525) AND (- (((+ (m3.f0))+(CAST(m0.t0 AS BIGINT)))))) IS NULL;
# SELECT m0.t0, m3.t0 FROM m3, m4 RIGHT OUTER JOIN m0 ON (((m3.f1) IS NOT UNKNOWN) IS NOT UNKNOWN) IN (FALSE);
query T rowsort
SELECT BIT_OR(m4.f0) FROM m4;
----
0

query T rowsort
SELECT * FROM m0;
----
1970-01-01T00:00:00 "t0" false 0.0
1981-08-07T06:10:24.080382889 "NULL" false 0.6326195071473769
1990-01-03T22:50:52.613557553 "NULL" true NULL
2003-01-04T08:51:33.467254361 "916053861" NULL 0.507623643211476
2070-08-01T14:24:06.074400477 "NULL" NULL 0.47166914414715877
2096-05-01T02:46:47.649375642 "NULL" true NULL
2105-09-29T02:51:25.038645395 "NULL" true 0.4131558313302025
2148-08-02T22:07:02.062413216 "NULL" true 0.5469987105166848
2155-12-04T02:07:05.191822176 "NULL" true NULL
2169-05-25T00:03:51.914973050 "NULL" true 0.5540439337463335
2207-04-02T03:26:32.909450783 "NULL" true NULL
2208-09-18T16:29:32.643168002 "NULL" true 0.9622249970170084

# SELECT ALL * FROM m0 WHERE NOT ((((((((CAST(m0.f1 AS BIGINT)) IS NULL)OR(((CAST(-1906695061 AS STRING))LIKE(((m0.t0)||(TRUE)))))))AND(CAST(CAST(m0.t0 AS STRING) AS BOOLEAN))))OR(((((((((m0.f0)OR(m0.f0)))AND(m0.f0)))AND(m0.f0)))OR(((m0.t0)IS DISTINCT FROM(m0.t0))))))) ORDER BY m0.time;
query T rowsort
SELECT ALL m1.f0, m1.f1, m1.t0 FROM m1;
----
"NULL" false "NULL"
"f0" false "t0"

query T rowsort
SELECT ALL m1.f0, m1.f1, m1.t0 FROM m1 WHERE m1.f1 UNION ALL SELECT ALL m1.f0, m1.f1, m1.t0 FROM m1 WHERE NOT (m1.f1) UNION ALL SELECT m1.f0, m1.f1, m1.t0 FROM m1 WHERE (m1.f1) IS NULL;
----
"NULL" false "NULL"
"f0" false "t0"

query T rowsort
SELECT m4.f0 FROM m4;
----
0

query T rowsort
SELECT ALL m4.f0 FROM m4 WHERE FALSE UNION ALL SELECT ALL m4.f0 FROM m4 WHERE NOT (FALSE) UNION ALL SELECT ALL m4.f0 FROM m4 WHERE (FALSE) IS NULL;
----
0

query T rowsort
SELECT m2.f1, m2.f0 FROM m2;
----
"f1" false

query T rowsort
SELECT ALL m2.f1, m2.f0 FROM m2 WHERE m2.f0 UNION ALL SELECT m2.f1, m2.f0 FROM m2 WHERE NOT (m2.f0) UNION ALL SELECT ALL m2.f1, m2.f0 FROM m2 WHERE (m2.f0) IS NULL;
----
"f1" false

query error Arrow error: Io error: Status \{ code: Internal, message: "Execute logical plan: Datafusion: Optimizer rule 'simplify_expressions' failed\\ncaused by\\nArrow error: Cast error: Cannot cast string 'Infinity' to value of Int64 type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT MIN(CAST(((CAST('Infinity' AS BIGINT))-(((((m4.f0)+(m4.f0)))%(CAST(m4.f0 AS BIGINT))))) AS BIGINT)) FROM m4;

# SELECT m3.t0, m0.f0, m2.f1, m1.f1, m1.t0, m3.f0, m2.f0, m3.t1, m0.f1, m0.t0, m2.t0, m3.f1, m1.f0 FROM m2, m3 LEFT OUTER JOIN m0 ON m0.f0 CROSS JOIN m1;
# SELECT m3.t0, m0.f0, m2.f1, m1.f1, m1.t0, m3.f0, m2.f0, m3.t1, m0.f1, m0.t0, m2.t0, m3.f1, m1.f0 FROM m2, m3 LEFT OUTER JOIN m0 ON m0.f0 CROSS JOIN m1 WHERE CAST(0.07091082834655904 AS BOOLEAN) UNION ALL SELECT ALL m3.t0, m0.f0, m2.f1, m1.f1, m1.t0, m3.f0, m2.f0, m3.t1, m0.f1, m0.t0, m2.t0, m3.f1, m1.f0 FROM m2, m3 LEFT OUTER JOIN m0 ON m0.f0 CROSS JOIN m1 WHERE NOT (CAST(0.07091082834655904 AS BOOLEAN)) UNION ALL SELECT m3.t0, m0.f0, m2.f1, m1.f1, m1.t0, m3.f0, m2.f0, m3.t1, m0.f1, m0.t0, m2.t0, m3.f1, m1.f0 FROM m2, m3 LEFT OUTER JOIN m0 ON m0.f0 CROSS JOIN m1 WHERE (CAST(0.07091082834655904 AS BOOLEAN)) IS NULL;
query T rowsort
SELECT m3.t1, m3.f0 FROM m3;
----
"t1" 0

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Arrow: Cast error: Cannot cast value 't1t1t00' to value of Boolean type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m3.t1, m3.f0 FROM m3 WHERE CAST(((((((m3.t1)||(m3.t1)))||(CAST(m3.t0 AS STRING))))||(CAST(- (m3.f0) AS BIGINT))) AS BOOLEAN) UNION ALL SELECT ALL m3.t1, m3.f0 FROM m3 WHERE NOT (CAST(((((((m3.t1)||(m3.t1)))||(CAST(m3.t0 AS STRING))))||(CAST(- (m3.f0) AS BIGINT))) AS BOOLEAN)) UNION ALL SELECT ALL m3.t1, m3.f0 FROM m3 WHERE (CAST(((((((m3.t1)||(m3.t1)))||(CAST(m3.t0 AS STRING))))||(CAST(- (m3.f0) AS BIGINT))) AS BOOLEAN)) IS NULL;

# SELECT ALL m2.t0, m1.f1, m1.f0, m2.f0, m2.f1 FROM m2 INNER JOIN m1 ON CAST(0.42280758279144903 AS BOOLEAN) ORDER BY m2.t0 DESC, m2.f0 ASC;
query T rowsort
SELECT ALL m2.f1, m2.f0, m2.t0 FROM m2 ORDER BY m2.f0 DESC;
----
"f1" false "t0"

query error Arrow error: Io error: Status \{ code: Internal, message: "Execute logical plan: Datafusion: Optimizer rule 'simplify_expressions' failed\\ncaused by\\nArrow error: Cast error: Cannot cast value '0\.9464404925619687' to value of Boolean type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m2.f1, m2.f0, m2.t0 FROM m2 WHERE ((NOT (CAST(1826216466 AS BOOLEAN)))AND(CAST(CAST(0.9464404925619687 AS STRING) AS BOOLEAN)));

# SELECT ALL m0.f1, m0.t0, m2.f0, m2.t0, m2.f1, m0.f0 FROM m0 FULL OUTER JOIN m2 ON (((0.13097656951149195) IS NOT NULL)OR(m0.f0));
# SELECT m0.f1, m0.t0, m2.f0, m2.t0, m2.f1, m0.f0 FROM m0 FULL OUTER JOIN m2 ON (((0.13097656951149195) IS NOT NULL)OR(m0.f0)) WHERE 'TR' UNION ALL SELECT ALL m0.f1, m0.t0, m2.f0, m2.t0, m2.f1, m0.f0 FROM m0 FULL OUTER JOIN m2 ON (((0.13097656951149195) IS NOT NULL)OR(m0.f0)) WHERE NOT ('TR') UNION ALL SELECT ALL m0.f1, m0.t0, m2.f0, m2.t0, m2.f1, m0.f0 FROM m0 FULL OUTER JOIN m2 ON (((0.13097656951149195) IS NOT NULL)OR(m0.f0)) WHERE ('TR') IS NULL;
# SELECT m1.t0 FROM m1;
query T rowsort
SELECT m1.t0 FROM m1 WHERE NOT (NOT ((m1.f1) IN (TRUE, TRUE)));
----

query T rowsort
SELECT ALL m1.t0 FROM m1 WHERE NOT (NOT (NOT ((m1.f1) IN (TRUE, TRUE))));
----
"NULL"
"t0"

query T rowsort
SELECT m1.t0 FROM m1 WHERE (NOT (NOT ((m1.f1) IN (TRUE, TRUE)))) IS NULL;
----

query T rowsort
SELECT m2.f0 FROM m2;
----
false

query T rowsort
SELECT ALL m2.f0 FROM m2 WHERE NOT ((((m2.t0)||(m2.f1))) IN ('GdG'));
----
false

query T rowsort
SELECT m2.f0 FROM m2 WHERE NOT (NOT ((((m2.t0)||(m2.f1))) IN ('GdG')));
----

query T rowsort
SELECT ALL m2.f0 FROM m2 WHERE (NOT ((((m2.t0)||(m2.f1))) IN ('GdG'))) IS NULL;
----

query T rowsort
SELECT ALL m0.t0, m0.f0, m0.f1 FROM m0;
----
"916053861" NULL 0.507623643211476
"NULL" NULL 0.47166914414715877
"NULL" false 0.6326195071473769
"NULL" true 0.4131558313302025
"NULL" true 0.5469987105166848
"NULL" true 0.5540439337463335
"NULL" true 0.9622249970170084
"NULL" true NULL
"NULL" true NULL
"NULL" true NULL
"NULL" true NULL
"t0" false 0.0

query T rowsort
SELECT m0.t0, m0.f0, m0.f1 FROM m0 WHERE CAST(((((-1854084498) NOT IN (0.9166874677479094)) IS TRUE)AND(CAST(((m0.t0)IS NOT DISTINCT FROM(m0.t0)) AS BOOLEAN))) AS BOOLEAN) UNION ALL SELECT ALL m0.t0, m0.f0, m0.f1 FROM m0 WHERE NOT (CAST(((((-1854084498) NOT IN (0.9166874677479094)) IS TRUE)AND(CAST(((m0.t0)IS NOT DISTINCT FROM(m0.t0)) AS BOOLEAN))) AS BOOLEAN)) UNION ALL SELECT ALL m0.t0, m0.f0, m0.f1 FROM m0 WHERE (CAST(((((-1854084498) NOT IN (0.9166874677479094)) IS TRUE)AND(CAST(((m0.t0)IS NOT DISTINCT FROM(m0.t0)) AS BOOLEAN))) AS BOOLEAN)) IS NULL;
----
"916053861" NULL 0.507623643211476
"NULL" NULL 0.47166914414715877
"NULL" false 0.6326195071473769
"NULL" true 0.4131558313302025
"NULL" true 0.5469987105166848
"NULL" true 0.5540439337463335
"NULL" true 0.9622249970170084
"NULL" true NULL
"NULL" true NULL
"NULL" true NULL
"NULL" true NULL
"t0" false 0.0

query T rowsort
SELECT ALL m1.f0, m1.t0 FROM m1;
----
"NULL" "NULL"
"f0" "t0"

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Coordinator: Tskv: Arrow: Cast error: Cannot cast string 'f0' to value of Int64 type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m1.f0, m1.t0 FROM m1 WHERE (CAST(((CAST(-324786405 AS STRING))||(CAST(m1.f0 AS BIGINT))) AS BOOLEAN)) IS UNKNOWN UNION ALL SELECT m1.f0, m1.t0 FROM m1 WHERE NOT ((CAST(((CAST(-324786405 AS STRING))||(CAST(m1.f0 AS BIGINT))) AS BOOLEAN)) IS UNKNOWN) UNION ALL SELECT m1.f0, m1.t0 FROM m1 WHERE ((CAST(((CAST(-324786405 AS STRING))||(CAST(m1.f0 AS BIGINT))) AS BOOLEAN)) IS UNKNOWN) IS NULL;

# SELECT ALL m4.t2, m3.t1, m2.f0, m4.t1, m1.f0, m3.f0 FROM m2, m1 RIGHT OUTER JOIN m3 ON (0.8819521718449512) IN (0.6798660489437052) LEFT OUTER JOIN m4 ON (0.0070604465630143) NOT IN (0.8303409423330035, 0.8276017401363478);
# SELECT ALL m4.t2, m3.t1, m2.f0, m4.t1, m1.f0, m3.f0 FROM m2, m1 RIGHT OUTER JOIN m3 ON (0.8819521718449512) IN (0.6798660489437052) LEFT OUTER JOIN m4 ON (0.0070604465630143) NOT IN (0.8303409423330035, 0.8276017401363478) WHERE (NOT (CAST((m4.f0) IN (-1687569623, -51195965, -2009106672) AS BOOLEAN))) IS TRUE;
# SELECT m4.t2, m3.t1, m2.f0, m4.t1, m1.f0, m3.f0 FROM m2, m1 RIGHT OUTER JOIN m3 ON (0.8819521718449512) IN (0.6798660489437052) LEFT OUTER JOIN m4 ON (0.0070604465630143) NOT IN (0.8303409423330035, 0.8276017401363478) WHERE NOT ((NOT (CAST((m4.f0) IN (-1687569623, -51195965, -2009106672) AS BOOLEAN))) IS TRUE);
# SELECT m4.t2, m3.t1, m2.f0, m4.t1, m1.f0, m3.f0 FROM m2, m1 RIGHT OUTER JOIN m3 ON (0.8819521718449512) IN (0.6798660489437052) LEFT OUTER JOIN m4 ON (0.0070604465630143) NOT IN (0.8303409423330035, 0.8276017401363478) WHERE ((NOT (CAST((m4.f0) IN (-1687569623, -51195965, -2009106672) AS BOOLEAN))) IS TRUE) IS NULL;
# SELECT ALL BIT_AND(CAST(CAST(m4.f0 AS BIGINT) AS BIGINT)) FROM m4, m3 CROSS JOIN m1;
query T rowsort
SELECT ALL m3.t1, m3.f1 FROM m3;
----
"t1" false

query T rowsort
SELECT ALL m3.t1, m3.f1 FROM m3 WHERE NOT ((0.3582040656326446) NOT IN (0.6487956785564597));
----

query T rowsort
SELECT ALL m3.t1, m3.f1 FROM m3 WHERE NOT (NOT ((0.3582040656326446) NOT IN (0.6487956785564597)));
----
"t1" false

query T rowsort
SELECT m3.t1, m3.f1 FROM m3 WHERE (NOT ((0.3582040656326446) NOT IN (0.6487956785564597))) IS NULL;
----

query T rowsort
SELECT ALL MAX(m3.f0) FROM m3;
----
0

# SELECT m4.f0, m1.f1, m1.f0 FROM m1 CROSS JOIN m4;
# SELECT ALL m4.f0, m1.f1, m1.f0 FROM m1 CROSS JOIN m4 WHERE (2080633059) IS NULL UNION ALL SELECT m4.f0, m1.f1, m1.f0 FROM m1 CROSS JOIN m4 WHERE NOT ((2080633059) IS NULL) UNION ALL SELECT m4.f0, m1.f1, m1.f0 FROM m1 CROSS JOIN m4 WHERE ((2080633059) IS NULL) IS NULL;
# SELECT m4.t1 FROM m4;
query T rowsort
SELECT ALL m4.t1 FROM m4 WHERE NOT ((((((((((TRUE)AND(FALSE)))OR(TRUE)))OR((FALSE) IS FALSE)))AND(FALSE))) IS FALSE);
----

# SELECT m4.t1 FROM m4 WHERE NOT (NOT ((((((((((TRUE)AND(FALSE)))OR(TRUE)))OR((FALSE) IS FALSE)))AND(FALSE))) IS FALSE));
query T rowsort
SELECT m4.t1 FROM m4 WHERE (NOT ((((((((((TRUE)AND(FALSE)))OR(TRUE)))OR((FALSE) IS FALSE)))AND(FALSE))) IS FALSE)) IS NULL;
----

# SELECT BOOL_AND(m3.f1) FROM m2, m4, m3 CROSS JOIN m1 LEFT OUTER JOIN m0 ON (m0.f0) IS NOT UNKNOWN;
# SELECT ALL m3.f0, m3.t0, m4.t2, m3.f1, m3.t1, m4.f0, m4.t1, m4.t0 FROM m3 RIGHT OUTER JOIN m4 ON (((CAST(m3.f0 AS STRING))LIKE(((m4.t0)||(0.2270785075878876))))) IN (TRUE, TRUE);
# SELECT ALL m3.f1 FROM m3 CROSS JOIN m0;
# SELECT ALL m3.f1 FROM m3 CROSS JOIN m0 WHERE CAST(- (CAST(+ (m3.f0) AS BIGINT)) AS BOOLEAN) UNION ALL SELECT ALL m3.f1 FROM m3 CROSS JOIN m0 WHERE NOT (CAST(- (CAST(+ (m3.f0) AS BIGINT)) AS BOOLEAN)) UNION ALL SELECT m3.f1 FROM m3 CROSS JOIN m0 WHERE (CAST(- (CAST(+ (m3.f0) AS BIGINT)) AS BOOLEAN)) IS NULL;
# SELECT m3.f1, m1.f0, m3.t0, m1.t0 FROM m1 RIGHT OUTER JOIN m3 ON NOT ((CAST(m3.t1 AS STRING)) BETWEEN SYMMETRIC (((CAST(m3.t0 AS STRING))||(CAST(0.5527799556630597 AS STRING)))) AND (((CAST(m1.f1 AS STRING))||(((m1.t0)||(-1969816740))))));
# SELECT ALL m1.t0 FROM m1;
query T rowsort
SELECT ALL m1.t0 FROM m1 WHERE NOT (((m1.f0)!=(CAST(NOT (m1.f1) AS STRING)))) UNION ALL SELECT m1.t0 FROM m1 WHERE NOT (NOT (((m1.f0)!=(CAST(NOT (m1.f1) AS STRING))))) UNION ALL SELECT ALL m1.t0 FROM m1 WHERE (NOT (((m1.f0)!=(CAST(NOT (m1.f1) AS STRING))))) IS NULL;
----
"NULL"
"t0"

# SELECT ALL m2.t0 FROM m3 INNER JOIN m2 ON m2.f0;
# SELECT ALL m2.t0 FROM m3 INNER JOIN m2 ON m2.f0 WHERE (CAST(- (m3.f0) AS BIGINT)) NOT IN (0.15941184217285798);
# SELECT m2.t0 FROM m3 INNER JOIN m2 ON m2.f0 WHERE NOT ((CAST(- (m3.f0) AS BIGINT)) NOT IN (0.15941184217285798));
# SELECT m2.t0 FROM m3 INNER JOIN m2 ON m2.f0 WHERE ((CAST(- (m3.f0) AS BIGINT)) NOT IN (0.15941184217285798)) IS NULL;
query T rowsort
SELECT ALL MIN(0.22987745635426093) FROM m4;
----
0.22987745635426093

# SELECT m0.t0, m4.t0 FROM m0, m4 CROSS JOIN m1 LEFT OUTER JOIN m2 ON (0.953604872101026) IN (0.9714870584979204);
# SELECT ALL m0.t0, m4.t0 FROM m0, m4 CROSS JOIN m1 LEFT OUTER JOIN m2 ON (0.953604872101026) IN (0.9714870584979204) WHERE NOT (NOT (CAST(((m4.f0)<(m4.f0)) AS BOOLEAN))) UNION ALL SELECT ALL m0.t0, m4.t0 FROM m0, m4 CROSS JOIN m1 LEFT OUTER JOIN m2 ON (0.953604872101026) IN (0.9714870584979204) WHERE NOT (NOT (NOT (CAST(((m4.f0)<(m4.f0)) AS BOOLEAN)))) UNION ALL SELECT m0.t0, m4.t0 FROM m0, m4 CROSS JOIN m1 LEFT OUTER JOIN m2 ON (0.953604872101026) IN (0.9714870584979204) WHERE (NOT (NOT (CAST(((m4.f0)<(m4.f0)) AS BOOLEAN)))) IS NULL;
# SELECT m1.f1, m0.f0, m4.t2, m1.f0, m0.f1, m4.t0 FROM m1, m0 LEFT OUTER JOIN m4 ON NOT ((- (m4.f0)) NOT IN (0.8974657182977517));
# SELECT m1.f1, m0.f0, m4.t2, m1.f0, m0.f1, m4.t0 FROM m1, m0 LEFT OUTER JOIN m4 ON NOT ((- (m4.f0)) NOT IN (0.8974657182977517)) WHERE NOT (CAST(0.06208708503176885 AS BOOLEAN)) UNION ALL SELECT ALL m1.f1, m0.f0, m4.t2, m1.f0, m0.f1, m4.t0 FROM m1, m0 LEFT OUTER JOIN m4 ON NOT ((- (m4.f0)) NOT IN (0.8974657182977517)) WHERE NOT (NOT (CAST(0.06208708503176885 AS BOOLEAN))) UNION ALL SELECT m1.f1, m0.f0, m4.t2, m1.f0, m0.f1, m4.t0 FROM m1, m0 LEFT OUTER JOIN m4 ON NOT ((- (m4.f0)) NOT IN (0.8974657182977517)) WHERE (NOT (CAST(0.06208708503176885 AS BOOLEAN))) IS NULL;
# SELECT BOOL_AND((5.74679056E8) IS NULL) FROM m2, m1 RIGHT OUTER JOIN m0 ON (0.9567466139919629) IS NULL;
# SELECT BOOL_AND(agg0) FROM (SELECT ALL BOOL_AND((5.74679056E8) IS NULL)  as agg0 FROM m2, m1 RIGHT OUTER JOIN m0 ON (0.9567466139919629) IS NULL WHERE ((CAST(0.26668849395520156 AS BOOLEAN)) IS NOT NULL) IS FALSE UNION ALL SELECT ALL BOOL_AND((5.74679056E8) IS NULL)  as agg0 FROM m2, m1 RIGHT OUTER JOIN m0 ON (0.9567466139919629) IS NULL WHERE NOT (((CAST(0.26668849395520156 AS BOOLEAN)) IS NOT NULL) IS FALSE) UNION ALL SELECT ALL BOOL_AND((5.74679056E8) IS NULL)  as agg0 FROM m2, m1 RIGHT OUTER JOIN m0 ON (0.9567466139919629) IS NULL WHERE (((CAST(0.26668849395520156 AS BOOLEAN)) IS NOT NULL) IS FALSE) IS NULL) as asdf;
# SELECT ALL m0.f0, m3.f0, m4.t2, m3.t0, m4.t1, m0.t0, m4.t0, m2.f0, m1.f0 FROM m4, m2, m1 CROSS JOIN m3 LEFT OUTER JOIN m0 ON ((((CAST((TRUE) IS TRUE AS BIGINT))%(CAST((m3.f0) IN (-1411042798, 920085104, 619925583) AS BIGINT))))!=(CAST(NOT ((m4.t1) BETWEEN (m4.t0) AND (m2.f1)) AS BIGINT)));
# SELECT * FROM m2, m1 FULL OUTER JOIN m0 ON (((931351624) IN (505455151, -1510920183, 2136032895)) IS FALSE) IS TRUE;
# SELECT * FROM m2, m1 FULL OUTER JOIN m0 ON (((931351624) IN (505455151, -1510920183, 2136032895)) IS FALSE) IS TRUE WHERE (CAST(((m1.t0)||(-653861686)) AS BIGINT)) IN (211746329, 11370980);
# SELECT * FROM m2, m1 FULL OUTER JOIN m0 ON (((931351624) IN (505455151, -1510920183, 2136032895)) IS FALSE) IS TRUE WHERE NOT ((CAST(((m1.t0)||(-653861686)) AS BIGINT)) IN (211746329, 11370980));
# SELECT ALL * FROM m2, m1 FULL OUTER JOIN m0 ON (((931351624) IN (505455151, -1510920183, 2136032895)) IS FALSE) IS TRUE WHERE ((CAST(((m1.t0)||(-653861686)) AS BIGINT)) IN (211746329, 11370980)) IS NULL;
query T rowsort
SELECT ALL COUNT(26056234) FROM m2;
----
1

# SELECT m1.f1, m2.f0, m2.t0, m1.f0 FROM m1 RIGHT OUTER JOIN m2 ON m2.f0;
# SELECT ALL m1.f1, m2.f0, m2.t0, m1.f0 FROM m1 RIGHT OUTER JOIN m2 ON m2.f0 WHERE (+ (- (CAST(-49326259 AS BIGINT)))) IS NOT NULL UNION ALL SELECT ALL m1.f1, m2.f0, m2.t0, m1.f0 FROM m1 RIGHT OUTER JOIN m2 ON m2.f0 WHERE NOT ((+ (- (CAST(-49326259 AS BIGINT)))) IS NOT NULL) UNION ALL SELECT m1.f1, m2.f0, m2.t0, m1.f0 FROM m1 RIGHT OUTER JOIN m2 ON m2.f0 WHERE ((+ (- (CAST(-49326259 AS BIGINT)))) IS NOT NULL) IS NULL;
query T rowsort
SELECT BIT_OR(- (CAST(CAST(((712230685)-(NULL)) AS STRING) AS BIGINT))) FROM m0;
----
NULL

# SELECT ALL m1.t0, m0.f1, m4.f0, m0.f0, m1.f1, m4.t1, m4.t2 FROM m4, m0 FULL OUTER JOIN m1 ON m1.f1 ORDER BY m4.t2 ASC;
query T rowsort
SELECT m2.f0, m2.f1 FROM m2;
----
false "f1"

query T rowsort
SELECT ALL m2.f0, m2.f1 FROM m2 WHERE (-2094431287) NOT IN (-231573578, 1814079848) UNION ALL SELECT m2.f0, m2.f1 FROM m2 WHERE NOT ((-2094431287) NOT IN (-231573578, 1814079848)) UNION ALL SELECT m2.f0, m2.f1 FROM m2 WHERE ((-2094431287) NOT IN (-231573578, 1814079848)) IS NULL;
----
false "f1"

query T rowsort
SELECT ALL m1.t0, m1.f1 FROM m1;
----
"NULL" false
"t0" false

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Arrow: Cast error: Cannot cast value 't02038183158' to value of Boolean type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m1.t0, m1.f1 FROM m1 WHERE ((((m1.f1)OR(NOT (CAST(((m1.t0)||(2038183158)) AS BOOLEAN)))))AND((- (-721725046)) NOT IN (0.5544287962532598, 0.6049615636568972))) UNION ALL SELECT m1.t0, m1.f1 FROM m1 WHERE NOT (((((m1.f1)OR(NOT (CAST(((m1.t0)||(2038183158)) AS BOOLEAN)))))AND((- (-721725046)) NOT IN (0.5544287962532598, 0.6049615636568972)))) UNION ALL SELECT m1.t0, m1.f1 FROM m1 WHERE (((((m1.f1)OR(NOT (CAST(((m1.t0)||(2038183158)) AS BOOLEAN)))))AND((- (-721725046)) NOT IN (0.5544287962532598, 0.6049615636568972)))) IS NULL;

query T rowsort
SELECT ALL COUNT(CAST(0.5759978377746883 AS BIGINT)) FROM m0;
----
12

# SELECT ALL m0.t0, m2.t0, m2.f1, m1.f1, m2.f0, m0.f0, m0.f1, m1.f0 FROM m0, m1 CROSS JOIN m2;
# SELECT m0.t0, m2.t0, m2.f1, m1.f1, m2.f0, m0.f0, m0.f1, m1.f0 FROM m0, m1 CROSS JOIN m2 WHERE NOT ((((m1.f1)AND(m1.f1))) NOT IN (FALSE, NULL)) UNION ALL SELECT m0.t0, m2.t0, m2.f1, m1.f1, m2.f0, m0.f0, m0.f1, m1.f0 FROM m0, m1 CROSS JOIN m2 WHERE NOT (NOT ((((m1.f1)AND(m1.f1))) NOT IN (FALSE, NULL))) UNION ALL SELECT m0.t0, m2.t0, m2.f1, m1.f1, m2.f0, m0.f0, m0.f1, m1.f0 FROM m0, m1 CROSS JOIN m2 WHERE (NOT ((((m1.f1)AND(m1.f1))) NOT IN (FALSE, NULL))) IS NULL;
query T rowsort
SELECT ALL m0.f0, m0.t0, m0.f1 FROM m0;
----
NULL "916053861" 0.507623643211476
NULL "NULL" 0.47166914414715877
false "NULL" 0.6326195071473769
false "t0" 0.0
true "NULL" 0.4131558313302025
true "NULL" 0.5469987105166848
true "NULL" 0.5540439337463335
true "NULL" 0.9622249970170084
true "NULL" NULL
true "NULL" NULL
true "NULL" NULL
true "NULL" NULL

query T rowsort
SELECT m0.f0, m0.t0, m0.f1 FROM m0 WHERE m0.f0 UNION ALL SELECT ALL m0.f0, m0.t0, m0.f1 FROM m0 WHERE NOT (m0.f0) UNION ALL SELECT m0.f0, m0.t0, m0.f1 FROM m0 WHERE (m0.f0) IS NULL;
----
NULL "916053861" 0.507623643211476
NULL "NULL" 0.47166914414715877
false "NULL" 0.6326195071473769
false "t0" 0.0
true "NULL" 0.4131558313302025
true "NULL" 0.5469987105166848
true "NULL" 0.5540439337463335
true "NULL" 0.9622249970170084
true "NULL" NULL
true "NULL" NULL
true "NULL" NULL
true "NULL" NULL

# SELECT m0.f1, m4.t0 FROM m4, m0 RIGHT OUTER JOIN m1 ON NOT (((NOT (m0.f0)) IS TRUE) IS TRUE);
# SELECT m0.f1, m4.t0 FROM m4, m0 RIGHT OUTER JOIN m1 ON NOT (((NOT (m0.f0)) IS TRUE) IS TRUE) WHERE NOT (NOT ((m0.f0) NOT IN (FALSE, FALSE)));
# SELECT m0.f1, m4.t0 FROM m4, m0 RIGHT OUTER JOIN m1 ON NOT (((NOT (m0.f0)) IS TRUE) IS TRUE) WHERE NOT (NOT (NOT ((m0.f0) NOT IN (FALSE, FALSE))));
# SELECT ALL m0.f1, m4.t0 FROM m4, m0 RIGHT OUTER JOIN m1 ON NOT (((NOT (m0.f0)) IS TRUE) IS TRUE) WHERE (NOT (NOT ((m0.f0) NOT IN (FALSE, FALSE)))) IS NULL;
query T rowsort
SELECT ALL m1.t0, m1.f1 FROM m1;
----
"NULL" false
"t0" false

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m1.t0, m1.f1 FROM m1 WHERE NOT (NOT ((((m1.t0)||(-255724532))) BETWEEN SYMMETRIC (CAST(-1326988525 AS STRING)) AND (CAST('*[' AS STRING))));

query T rowsort
SELECT m3.f1, m3.f0, m3.t1, m3.t0 FROM m3;
----
false 0 "t1" "t0"

query T rowsort
SELECT m3.f1, m3.f0, m3.t1, m3.t0 FROM m3 WHERE (+ (CAST(('533580250') IN ('뢱0', '9', 'Za(x&>a') AS BIGINT))) IS NULL;
----

# SELECT ALL m1.f0 FROM m0 CROSS JOIN m1;
# SELECT m1.f0 FROM m0 CROSS JOIN m1 WHERE ((NOT ((m1.f1) IN (TRUE, FALSE))) IS FALSE) IS TRUE;
# SELECT ALL m1.f0 FROM m0 CROSS JOIN m1 WHERE NOT (((NOT ((m1.f1) IN (TRUE, FALSE))) IS FALSE) IS TRUE);
# SELECT m1.f0 FROM m0 CROSS JOIN m1 WHERE (((NOT ((m1.f1) IN (TRUE, FALSE))) IS FALSE) IS TRUE) IS NULL;
query T rowsort
SELECT ALL m1.t0, m1.f0, m1.f1 FROM m1;
----
"NULL" "NULL" false
"t0" "f0" false

query T rowsort
SELECT ALL m1.t0, m1.f0, m1.f1 FROM m1 WHERE ((m1.f1)!=((((m1.f1) IN (TRUE, TRUE, FALSE))AND(NOT ((-1.364967176E9) IN (0.8836829452216858, 0.804891941659314, 0.057194778779184774)))))) UNION ALL SELECT m1.t0, m1.f0, m1.f1 FROM m1 WHERE NOT (((m1.f1)!=((((m1.f1) IN (TRUE, TRUE, FALSE))AND(NOT ((-1.364967176E9) IN (0.8836829452216858, 0.804891941659314, 0.057194778779184774))))))) UNION ALL SELECT m1.t0, m1.f0, m1.f1 FROM m1 WHERE (((m1.f1)!=((((m1.f1) IN (TRUE, TRUE, FALSE))AND(NOT ((-1.364967176E9) IN (0.8836829452216858, 0.804891941659314, 0.057194778779184774))))))) IS NULL;
----
"NULL" "NULL" false
"t0" "f0" false

# SELECT m2.f1, m1.f0 FROM m1, m4 INNER JOIN m2 ON ((((((m4.f0)%(m4.f0)))+(CAST(0.45711721155808605 AS BIGINT)))) NOTNULL) IS FALSE;
# SELECT ALL m2.f1, m1.f0 FROM m1, m4 JOIN m2 ON ((((((m4.f0)%(m4.f0)))+(CAST(0.45711721155808605 AS BIGINT)))) NOTNULL) IS FALSE WHERE m1.f1 UNION ALL SELECT ALL m2.f1, m1.f0 FROM m1, m4 INNER JOIN m2 ON ((((((m4.f0)%(m4.f0)))+(CAST(0.45711721155808605 AS BIGINT)))) NOTNULL) IS FALSE WHERE NOT (m1.f1) UNION ALL SELECT m2.f1, m1.f0 FROM m1, m4 JOIN m2 ON ((((((m4.f0)%(m4.f0)))+(CAST(0.45711721155808605 AS BIGINT)))) NOTNULL) IS FALSE WHERE (m1.f1) IS NULL;
query T rowsort
SELECT m1.f0, m1.t0, m1.f1 FROM m1;
----
"NULL" "NULL" false
"f0" "t0" false

query T rowsort
SELECT ALL m1.f0, m1.t0, m1.f1 FROM m1 WHERE CAST(CAST(2.070740056E9 AS BIGINT) AS BOOLEAN);
----
"NULL" "NULL" false
"f0" "t0" false

query T rowsort
SELECT * FROM m3;
----
1970-01-01T00:00:00 "t0" "t1" 0 false

query T rowsort
SELECT * FROM m3 WHERE (((((m3.f0)/(m3.f0)))*(((1720243269)/(m3.f0))))) IN (0.11609437700844338, 0.7128171476947955) UNION ALL SELECT * FROM m3 WHERE NOT ((((((m3.f0)/(m3.f0)))*(((1720243269)/(m3.f0))))) IN (0.11609437700844338, 0.7128171476947955)) UNION ALL SELECT * FROM m3 WHERE ((((((m3.f0)/(m3.f0)))*(((1720243269)/(m3.f0))))) IN (0.11609437700844338, 0.7128171476947955)) IS NULL;
----
1970-01-01T00:00:00 "t0" "t1" 0 false

# SELECT MIN(-1.959534426E9) FROM m2 INNER JOIN m1 ON ((m1.f0)LIKE(CAST(- (((-1902857243)/(-2094431287))) AS STRING)));
# SELECT m0.f1, m2.t0, m2.f1, m3.t0, m3.f1, m0.f0, m4.t0, m4.t2, m4.f0, m4.t1, m1.t0, m1.f1, m1.f0, m2.f0 FROM m3, m2, m0 FULL OUTER JOIN m4 ON m2.f0 FULL OUTER JOIN m1 ON (m4.f0) NOT IN (-1224295777);
# SELECT ALL m3.t0 FROM m3;
query T rowsort
SELECT m3.t0 FROM m3 WHERE NOT (TRUE);
----

# SELECT m3.t0 FROM m3 WHERE NOT (NOT (TRUE));
query T rowsort
SELECT ALL m3.t0 FROM m3 WHERE (NOT (TRUE)) IS NULL;
----

# SELECT ALL m3.f1, m4.t0 FROM m3 LEFT OUTER JOIN m4 ON CAST((((CAST(52673092 AS BOOLEAN))AND(CAST(m3.t0 AS BOOLEAN)))) IS UNKNOWN AS BOOLEAN);
# SELECT ALL m3.f1, m4.t0 FROM m3 LEFT OUTER JOIN m4 ON CAST((((CAST(52673092 AS BOOLEAN))AND(CAST(m3.t0 AS BOOLEAN)))) IS UNKNOWN AS BOOLEAN) WHERE FALSE UNION ALL SELECT m3.f1, m4.t0 FROM m3 LEFT OUTER JOIN m4 ON CAST((((CAST(52673092 AS BOOLEAN))AND(CAST(m3.t0 AS BOOLEAN)))) IS UNKNOWN AS BOOLEAN) WHERE NOT (FALSE) UNION ALL SELECT m3.f1, m4.t0 FROM m3 LEFT OUTER JOIN m4 ON CAST((((CAST(52673092 AS BOOLEAN))AND(CAST(m3.t0 AS BOOLEAN)))) IS UNKNOWN AS BOOLEAN) WHERE (FALSE) IS NULL;
# SELECT ALL m4.f0 FROM m3, m0, m4 RIGHT OUTER JOIN m1 ON NOT (NOT (NOT (((m4.t2)!=(m3.t1))))) FULL OUTER JOIN m2 ON (NULL) NOT IN (0.1271252278523194);
# SELECT ALL m4.f0, m2.f1, m3.f0, m2.f0 FROM m4, m3 RIGHT OUTER JOIN m2 ON ((((((((m4.t2)||(m3.f1)))||(CAST(m2.f0 AS BIGINT))))||(((- (m4.f0))^(CAST(m2.f1 AS BIGINT))))))>(m4.t1));
# SELECT ALL m1.f0 FROM m1 JOIN m0 ON (CAST(0.1678278880880505 AS BIGINT)) NOT IN (0.23848693613377836);
# SELECT m1.f0 FROM m1 INNER JOIN m0 ON (CAST(0.1678278880880505 AS BIGINT)) NOT IN (0.23848693613377836) WHERE FALSE;
# SELECT m1.f0 FROM m1 JOIN m0 ON (CAST(0.1678278880880505 AS BIGINT)) NOT IN (0.23848693613377836) WHERE NOT (FALSE);
# SELECT m1.f0 FROM m1 JOIN m0 ON (CAST(0.1678278880880505 AS BIGINT)) NOT IN (0.23848693613377836) WHERE (FALSE) IS NULL;
# SELECT m4.t1 FROM m4;
query T rowsort
SELECT m4.t1 FROM m4 WHERE ((CAST(m4.f0 AS STRING)) NOT IN ('^')) IS FALSE UNION ALL SELECT ALL m4.t1 FROM m4 WHERE NOT (((CAST(m4.f0 AS STRING)) NOT IN ('^')) IS FALSE) UNION ALL SELECT ALL m4.t1 FROM m4 WHERE (((CAST(m4.f0 AS STRING)) NOT IN ('^')) IS FALSE) IS NULL;
----
"t1"

query T rowsort
SELECT ALL m2.f1, m2.f0 FROM m2;
----
"f1" false

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Arrow: Cast error: Cannot cast value 't0' to value of Boolean type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m2.f1, m2.f0 FROM m2 WHERE (CAST(CAST(CAST(m2.t0 AS BOOLEAN) AS BOOLEAN) AS BOOLEAN)) IS TRUE UNION ALL SELECT ALL m2.f1, m2.f0 FROM m2 WHERE NOT ((CAST(CAST(CAST(m2.t0 AS BOOLEAN) AS BOOLEAN) AS BOOLEAN)) IS TRUE) UNION ALL SELECT m2.f1, m2.f0 FROM m2 WHERE ((CAST(CAST(CAST(m2.t0 AS BOOLEAN) AS BOOLEAN) AS BOOLEAN)) IS TRUE) IS NULL;

# SELECT m2.f0 FROM m0, m4 CROSS JOIN m2 INNER JOIN m3 ON ((((CAST((1400383550) IN (-2069970659) AS BOOLEAN))AND(TRUE)))AND(CAST(((204350423)%(CAST(m4.f0 AS BIGINT))) AS BOOLEAN)));
# SELECT ALL m3.t0 FROM m3;
query T rowsort
SELECT m3.t0 FROM m3 WHERE NOT ((CAST(- (m3.f0) AS DOUBLE)) IS NULL) UNION ALL SELECT ALL m3.t0 FROM m3 WHERE NOT (NOT ((CAST(- (m3.f0) AS DOUBLE)) IS NULL)) UNION ALL SELECT ALL m3.t0 FROM m3 WHERE (NOT ((CAST(- (m3.f0) AS DOUBLE)) IS NULL)) IS NULL;
----
"t0"

query T rowsort
SELECT m2.f1, m2.f0, m2.t0 FROM m2;
----
"f1" false "t0"

query T rowsort
SELECT ALL m2.f1, m2.f0, m2.t0 FROM m2 WHERE CAST(CAST(CAST(- (-506071032) AS BIGINT) AS BIGINT) AS BOOLEAN) UNION ALL SELECT ALL m2.f1, m2.f0, m2.t0 FROM m2 WHERE NOT (CAST(CAST(CAST(- (-506071032) AS BIGINT) AS BIGINT) AS BOOLEAN)) UNION ALL SELECT ALL m2.f1, m2.f0, m2.t0 FROM m2 WHERE (CAST(CAST(CAST(- (-506071032) AS BIGINT) AS BIGINT) AS BOOLEAN)) IS NULL;
----
"f1" false "t0"

# SELECT ALL BIT_AND(m4.f0) FROM m4 FULL OUTER JOIN m0 ON (0.6725866365620903) NOT IN (0.047727842816797206, 0.21968980030290985);
# SELECT BIT_AND(agg0) FROM (SELECT BIT_AND(m4.f0)  as agg0 FROM m4 FULL OUTER JOIN m0 ON (0.6725866365620903) NOT IN (0.047727842816797206, 0.21968980030290985) WHERE (((CAST(CAST(m4.f0 AS BOOLEAN) AS STRING))LIKE(CAST((('616562117')||(m0.t0)) AS STRING)))) IS NOT UNKNOWN UNION ALL SELECT ALL BIT_AND(m4.f0)  as agg0 FROM m4 FULL OUTER JOIN m0 ON (0.6725866365620903) NOT IN (0.047727842816797206, 0.21968980030290985) WHERE NOT ((((CAST(CAST(m4.f0 AS BOOLEAN) AS STRING))LIKE(CAST((('616562117')||(m0.t0)) AS STRING)))) IS NOT UNKNOWN) UNION ALL SELECT BIT_AND(m4.f0)  as agg0 FROM m4 FULL OUTER JOIN m0 ON (0.6725866365620903) NOT IN (0.047727842816797206, 0.21968980030290985) WHERE ((((CAST(CAST(m4.f0 AS BOOLEAN) AS STRING))LIKE(CAST((('616562117')||(m0.t0)) AS STRING)))) IS NOT UNKNOWN) IS NULL) as asdf;
# SELECT ALL m2.f1, m4.f0, m3.t0, m4.t0, m3.f0, m4.t2, m2.t0, m2.f0, m3.f1, m3.t1 FROM m2, m3 CROSS JOIN m4;
# SELECT ALL m2.f1, m4.f0, m3.t0, m4.t0, m3.f0, m4.t2, m2.t0, m2.f0, m3.f1, m3.t1 FROM m2, m3 CROSS JOIN m4 WHERE m3.f1 UNION ALL SELECT m2.f1, m4.f0, m3.t0, m4.t0, m3.f0, m4.t2, m2.t0, m2.f0, m3.f1, m3.t1 FROM m2, m3 CROSS JOIN m4 WHERE NOT (m3.f1) UNION ALL SELECT ALL m2.f1, m4.f0, m3.t0, m4.t0, m3.f0, m4.t2, m2.t0, m2.f0, m3.f1, m3.t1 FROM m2, m3 CROSS JOIN m4 WHERE (m3.f1) IS NULL;
query T rowsort
SELECT m1.f0 FROM m1;
----
"NULL"
"f0"

query T rowsort
SELECT ALL m1.f0 FROM m1 WHERE m1.f1;
----

query T rowsort
SELECT ALL m1.f0 FROM m1 WHERE NOT (m1.f1);
----
"NULL"
"f0"

query T rowsort
SELECT m1.f0 FROM m1 WHERE (m1.f1) IS NULL;
----

query T rowsort
SELECT ALL m0.f0, m0.t0 FROM m0;
----
NULL "916053861"
NULL "NULL"
false "NULL"
false "t0"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"

query T rowsort
SELECT m0.f0, m0.t0 FROM m0 WHERE m0.f0 UNION ALL SELECT ALL m0.f0, m0.t0 FROM m0 WHERE NOT (m0.f0) UNION ALL SELECT m0.f0, m0.t0 FROM m0 WHERE (m0.f0) IS NULL;
----
NULL "916053861"
NULL "NULL"
false "NULL"
false "t0"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"

query T rowsort
SELECT * FROM m2;
----
1970-01-01T00:00:00 "t0" false "f1"

query T rowsort
SELECT * FROM m2 WHERE NOT (m2.f0);
----
1970-01-01T00:00:00 "t0" false "f1"

query T rowsort
SELECT * FROM m2 WHERE NOT (NOT (m2.f0));
----

query T rowsort
SELECT ALL * FROM m2 WHERE (NOT (m2.f0)) IS NULL;
----

query T rowsort
SELECT ALL m0.f0, m0.t0 FROM m0;
----
NULL "916053861"
NULL "NULL"
false "NULL"
false "t0"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"

query T rowsort
SELECT ALL m0.f0, m0.t0 FROM m0 WHERE CAST(-1488079281 AS BOOLEAN) UNION ALL SELECT ALL m0.f0, m0.t0 FROM m0 WHERE NOT (CAST(-1488079281 AS BOOLEAN)) UNION ALL SELECT ALL m0.f0, m0.t0 FROM m0 WHERE (CAST(-1488079281 AS BOOLEAN)) IS NULL;
----
NULL "916053861"
NULL "NULL"
false "NULL"
false "t0"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"

query T rowsort
SELECT ALL * FROM m2;
----
1970-01-01T00:00:00 "t0" false "f1"

query T rowsort
SELECT ALL * FROM m2 WHERE (-1.497906008E9) IN (0.277040821627761);
----

query T rowsort
SELECT * FROM m2 WHERE NOT ((-1.497906008E9) IN (0.277040821627761));
----
1970-01-01T00:00:00 "t0" false "f1"

query T rowsort
SELECT * FROM m2 WHERE ((-1.497906008E9) IN (0.277040821627761)) IS NULL;
----

# SELECT m4.t0, m2.f1, m3.t1, m1.f1, m1.f0 FROM m3, m1 RIGHT OUTER JOIN m4 ON CAST(CAST(m3.t1 AS BIGINT) AS BOOLEAN) FULL OUTER JOIN m2 ON CAST(((CAST(- (m4.f0) AS STRING))||(610194467)) AS BOOLEAN);
query T rowsort
SELECT m1.f0 FROM m1;
----
"NULL"
"f0"

query T rowsort
SELECT m1.f0 FROM m1 WHERE NOT (CAST(0.389040859566277 AS BOOLEAN));
----

# SELECT ALL m0.f0, m1.t0, m2.f0, m4.f0, m2.t0, m3.f1, m2.f1, m3.t1, m4.t2 FROM m0, m1, m2 INNER JOIN m4 ON (m3.f0) IN (-485676182, 481158198) FULL OUTER JOIN m3 ON (0.5720764004558129) IS NULL;
query T rowsort
SELECT ALL * FROM m0;
----
1970-01-01T00:00:00 "t0" false 0.0
1981-08-07T06:10:24.080382889 "NULL" false 0.6326195071473769
1990-01-03T22:50:52.613557553 "NULL" true NULL
2003-01-04T08:51:33.467254361 "916053861" NULL 0.507623643211476
2070-08-01T14:24:06.074400477 "NULL" NULL 0.47166914414715877
2096-05-01T02:46:47.649375642 "NULL" true NULL
2105-09-29T02:51:25.038645395 "NULL" true 0.4131558313302025
2148-08-02T22:07:02.062413216 "NULL" true 0.5469987105166848
2155-12-04T02:07:05.191822176 "NULL" true NULL
2169-05-25T00:03:51.914973050 "NULL" true 0.5540439337463335
2207-04-02T03:26:32.909450783 "NULL" true NULL
2208-09-18T16:29:32.643168002 "NULL" true 0.9622249970170084

query T rowsort
SELECT ALL * FROM m0 WHERE m0.f0 UNION ALL SELECT * FROM m0 WHERE NOT (m0.f0) UNION ALL SELECT * FROM m0 WHERE (m0.f0) IS NULL;
----
1970-01-01T00:00:00 "t0" false 0.0
1981-08-07T06:10:24.080382889 "NULL" false 0.6326195071473769
1990-01-03T22:50:52.613557553 "NULL" true NULL
2003-01-04T08:51:33.467254361 "916053861" NULL 0.507623643211476
2070-08-01T14:24:06.074400477 "NULL" NULL 0.47166914414715877
2096-05-01T02:46:47.649375642 "NULL" true NULL
2105-09-29T02:51:25.038645395 "NULL" true 0.4131558313302025
2148-08-02T22:07:02.062413216 "NULL" true 0.5469987105166848
2155-12-04T02:07:05.191822176 "NULL" true NULL
2169-05-25T00:03:51.914973050 "NULL" true 0.5540439337463335
2207-04-02T03:26:32.909450783 "NULL" true NULL
2208-09-18T16:29:32.643168002 "NULL" true 0.9622249970170084

# SELECT m3.t1 FROM m3;
query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m3.t1 FROM m3 WHERE NOT (CAST((351281739) BETWEEN SYMMETRIC (((m3.f0)/(m3.f0))) AND (+ (m3.f0)) AS BOOLEAN));

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m3.t1 FROM m3 WHERE NOT (NOT (CAST((351281739) BETWEEN SYMMETRIC (((m3.f0)/(m3.f0))) AND (+ (m3.f0)) AS BOOLEAN)));

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m3.t1 FROM m3 WHERE (NOT (CAST((351281739) BETWEEN SYMMETRIC (((m3.f0)/(m3.f0))) AND (+ (m3.f0)) AS BOOLEAN))) IS NULL;

# SELECT m4.t1, m2.f1, m2.f0, m4.t2, m1.f0, m4.t0 FROM m2, m1 FULL OUTER JOIN m4 ON (CAST(- (m4.f0) AS STRING)) NOT IN ('', '', 'E]WI-~᷷gs');
query T rowsort
SELECT ALL m3.f0, m3.t1 FROM m3;
----
0 "t1"

query T rowsort
SELECT ALL m3.f0, m3.t1 FROM m3 WHERE ((CAST(- (+ (m3.f0)) AS BOOLEAN))OR((((m3.f0)^(m3.f0))) IN ('Infinity', NULL)));
----

query error Arrow error: Io error: Status \{ code: Internal, message: "Execute logical plan: Datafusion: Schema error: No field named m2\.f1\. Valid fields are \\"MAX\(m2\.f1 \|\| m2\.f1 LIKE Utf8\(\\"\\"C\\"\\"\) \|\| m2\.t0 \)\\"\.", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT MAX(+ (CAST(((((m2.f1)||(m2.f1)))LIKE((('C')||(m2.t0)))) AS BIGINT))) FROM m2 ORDER BY m2.f1 DESC, m2.f0 DESC;

query T rowsort
SELECT m3.t1, m3.t0, m3.f1 FROM m3;
----
"t1" "t0" false

query T rowsort
SELECT ALL m3.t1, m3.t0, m3.f1 FROM m3 WHERE ((m3.f1) NOT IN (TRUE, TRUE)) IN (FALSE);
----

query T rowsort
SELECT ALL m3.t1, m3.t0, m3.f1 FROM m3 WHERE NOT (((m3.f1) NOT IN (TRUE, TRUE)) IN (FALSE));
----
"t1" "t0" false

query T rowsort
SELECT ALL m3.t1, m3.t0, m3.f1 FROM m3 WHERE (((m3.f1) NOT IN (TRUE, TRUE)) IN (FALSE)) IS NULL;
----

query T rowsort
SELECT m1.t0, m1.f0, m1.f1 FROM m1;
----
"NULL" "NULL" false
"t0" "f0" false

# SELECT ALL m1.t0, m1.f0, m1.f1 FROM m1 WHERE (((-24313008) NOT IN (0.5789588919379464, 0.6440105044101978, 0.7972080808201099)) IS FALSE) BETWEEN ((((((((((m1.f0)LIKE(m1.f0))) IS TRUE)AND(CAST(- (-1020801281) AS BOOLEAN))))AND(((((m1.f0)||(-1729544348)))LIKE(((m1.f0)||(-720546436)))))))AND((CAST(m1.t0 AS BIGINT)) IS NULL))) AND ((0.22813901513261792) NOT IN (0.8213931760851978, 0.47525756645462913)) UNION ALL SELECT ALL m1.t0, m1.f0, m1.f1 FROM m1 WHERE NOT ((((-24313008) NOT IN (0.5789588919379464, 0.6440105044101978, 0.7972080808201099)) IS FALSE) BETWEEN ((((((((((m1.f0)LIKE(m1.f0))) IS TRUE)AND(CAST(- (-1020801281) AS BOOLEAN))))AND(((((m1.f0)||(-1729544348)))LIKE(((m1.f0)||(-720546436)))))))AND((CAST(m1.t0 AS BIGINT)) IS NULL))) AND ((0.22813901513261792) NOT IN (0.8213931760851978, 0.47525756645462913))) UNION ALL SELECT ALL m1.t0, m1.f0, m1.f1 FROM m1 WHERE ((((-24313008) NOT IN (0.5789588919379464, 0.6440105044101978, 0.7972080808201099)) IS FALSE) BETWEEN ((((((((((m1.f0)LIKE(m1.f0))) IS TRUE)AND(CAST(- (-1020801281) AS BOOLEAN))))AND(((((m1.f0)||(-1729544348)))LIKE(((m1.f0)||(-720546436)))))))AND((CAST(m1.t0 AS BIGINT)) IS NULL))) AND ((0.22813901513261792) NOT IN (0.8213931760851978, 0.47525756645462913))) IS NULL;
query T rowsort
SELECT m2.f1, m2.t0 FROM m2;
----
"f1" "t0"

query T rowsort
SELECT ALL m2.f1, m2.t0 FROM m2 WHERE (CAST(((-753682421)%(-1098661034)) AS BOOLEAN)) NOT IN (FALSE, TRUE);
----

query T rowsort
SELECT m2.f1, m2.t0 FROM m2 WHERE NOT ((CAST(((-753682421)%(-1098661034)) AS BOOLEAN)) NOT IN (FALSE, TRUE));
----
"f1" "t0"

query T rowsort
SELECT ALL m2.f1, m2.t0 FROM m2 WHERE ((CAST(((-753682421)%(-1098661034)) AS BOOLEAN)) NOT IN (FALSE, TRUE)) IS NULL;
----

# SELECT ALL m3.t1, m4.t0, m4.t2 FROM m1, m3, m4 JOIN m2 ON (+ (- (m4.f0))) IN (0.9011237112389338) JOIN m0 ON NOT (TRUE);
# SELECT ALL m3.t1, m4.t0, m4.t2 FROM m1, m3, m4 JOIN m2 ON (+ (- (m4.f0))) IN (0.9011237112389338) INNER JOIN m0 ON NOT (TRUE) WHERE (m1.f1) IS UNKNOWN;
# SELECT ALL m3.t1, m4.t0, m4.t2 FROM m1, m3, m4 INNER JOIN m2 ON (+ (- (m4.f0))) IN (0.9011237112389338) INNER JOIN m0 ON NOT (TRUE) WHERE NOT ((m1.f1) IS UNKNOWN);
# SELECT m3.t1, m4.t0, m4.t2 FROM m1, m3, m4 INNER JOIN m2 ON (+ (- (m4.f0))) IN (0.9011237112389338) INNER JOIN m0 ON NOT (TRUE) WHERE ((m1.f1) IS UNKNOWN) IS NULL;
query T rowsort
SELECT ALL m2.f0 FROM m2;
----
false

query T rowsort
SELECT ALL m2.f0 FROM m2 WHERE NOT (((CAST(((m2.f1)||(1882407976)) AS STRING))LIKE(((CAST(m2.t0 AS STRING))||(CAST(m2.f0 AS BOOLEAN)))))) UNION ALL SELECT ALL m2.f0 FROM m2 WHERE NOT (NOT (((CAST(((m2.f1)||(1882407976)) AS STRING))LIKE(((CAST(m2.t0 AS STRING))||(CAST(m2.f0 AS BOOLEAN))))))) UNION ALL SELECT ALL m2.f0 FROM m2 WHERE (NOT (((CAST(((m2.f1)||(1882407976)) AS STRING))LIKE(((CAST(m2.t0 AS STRING))||(CAST(m2.f0 AS BOOLEAN))))))) IS NULL;
----
false

# SELECT m2.f1, m0.f0, m2.f0, m0.f1 FROM m2 LEFT OUTER JOIN m0 ON m0.f0;
# SELECT ALL m2.f1, m0.f0, m2.f0, m0.f1 FROM m2 LEFT OUTER JOIN m0 ON m0.f0 WHERE (m2.f0) IS UNKNOWN UNION ALL SELECT ALL m2.f1, m0.f0, m2.f0, m0.f1 FROM m2 LEFT OUTER JOIN m0 ON m0.f0 WHERE NOT ((m2.f0) IS UNKNOWN) UNION ALL SELECT ALL m2.f1, m0.f0, m2.f0, m0.f1 FROM m2 LEFT OUTER JOIN m0 ON m0.f0 WHERE ((m2.f0) IS UNKNOWN) IS NULL;
query T rowsort
SELECT COUNT(CAST(m3.f0 AS BIGINT)) FROM m3;
----
1

query T rowsort
SELECT SUM(agg0) FROM (SELECT COUNT(CAST(m3.f0 AS BIGINT))  as agg0 FROM m3 WHERE (((CAST(m3.f0 AS STRING))||(CAST(m3.t0 AS STRING)))) NOT IN ('', 'BFl') UNION ALL SELECT COUNT(CAST(m3.f0 AS BIGINT))  as agg0 FROM m3 WHERE NOT ((((CAST(m3.f0 AS STRING))||(CAST(m3.t0 AS STRING)))) NOT IN ('', 'BFl')) UNION ALL SELECT COUNT(CAST(m3.f0 AS BIGINT))  as agg0 FROM m3 WHERE ((((CAST(m3.f0 AS STRING))||(CAST(m3.t0 AS STRING)))) NOT IN ('', 'BFl')) IS NULL) as asdf;
----
1

# SELECT ALL m2.f1, m1.t0 FROM m1 FULL OUTER JOIN m2 ON (m1.f1) IN (TRUE, TRUE, TRUE);
# SELECT ALL BIT_AND(1732186047) FROM m2 JOIN m0 ON (CAST(((m2.f1)||(1890225491)) AS BIGINT)) IN (-2098572110, -7975918);
# SELECT m3.t0 FROM m3 FULL OUTER JOIN (SELECT 0.10690655192668419 FROM m3, m2, m1, m0, m4 LIMIT 8712043020659828692) AS sub0 ON (NOT (NOT ((m3.f1) IS NOT UNKNOWN))) IS FALSE;
# SELECT BIT_AND(- (+ (((- (m4.f0))^(+ (m4.f0)))))) FROM m4, m3 INNER JOIN m2 ON (CAST(((CAST(m2.f0 AS BIGINT))-(CAST(m2.f1 AS BIGINT))) AS BOOLEAN)) IS NULL;
# SELECT m3.f1, m2.f0, m3.t0, m2.f1 FROM m3 FULL OUTER JOIN m2 ON NOT (m3.f1);
query T rowsort
SELECT ALL * FROM m1;
----
1970-01-01T00:00:00 "t0" "f0" false
2207-04-18T13:56:55.539246350 "NULL" "NULL" false

query T rowsort
SELECT ALL * FROM m1 WHERE ((+ (543535954)) NOT IN (-1930876602)) IS NULL UNION ALL SELECT * FROM m1 WHERE NOT (((+ (543535954)) NOT IN (-1930876602)) IS NULL) UNION ALL SELECT ALL * FROM m1 WHERE (((+ (543535954)) NOT IN (-1930876602)) IS NULL) IS NULL;
----
1970-01-01T00:00:00 "t0" "f0" false
2207-04-18T13:56:55.539246350 "NULL" "NULL" false

# SELECT ALL m2.t0 FROM m2;
query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Coordinator: Tskv: Arrow: Cast error: Cannot cast value 'f10' to value of Boolean type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m2.t0 FROM m2 WHERE NOT (NOT (CAST(((m2.f1)||(m2.f0)) AS BOOLEAN))) UNION ALL SELECT m2.t0 FROM m2 WHERE NOT (NOT (NOT (CAST(((m2.f1)||(m2.f0)) AS BOOLEAN)))) UNION ALL SELECT ALL m2.t0 FROM m2 WHERE (NOT (NOT (CAST(((m2.f1)||(m2.f0)) AS BOOLEAN)))) IS NULL;

# SELECT m2.t0 FROM m1 FULL OUTER JOIN m2 ON CAST(0.9589519009206248 AS BOOLEAN);
# SELECT MAX(0.7932627928396215) FROM m3, m0 CROSS JOIN m2;
query T rowsort
SELECT BIT_OR(- (CAST(+ (- (1007863218)) AS BIGINT))) FROM m2;
----
1007863218

# SELECT SUM(CAST(FALSE AS BIGINT)) FROM m3, m1, m4 INNER JOIN m0 ON ((((CAST(((m2.f1)||(m4.t2)) AS STRING))||((((m4.t2)LIKE(m4.t1))) IS NOT UNKNOWN)))LIKE(CAST(CAST(((m4.f0)<=(m3.f0)) AS BIGINT) AS STRING))) LEFT OUTER JOIN m2 ON CAST(m4.f0 AS BOOLEAN);
query T rowsort
SELECT ALL m2.f1 FROM m2;
----
"f1"

query T rowsort
SELECT m2.f1 FROM m2 WHERE NOT (((NOT (m2.f0)) BETWEEN (((m2.f1)LIKE(m2.f1))) AND ((m2.t0) BETWEEN (m2.t0) AND (m2.f1))) IS TRUE) UNION ALL SELECT m2.f1 FROM m2 WHERE NOT (NOT (((NOT (m2.f0)) BETWEEN (((m2.f1)LIKE(m2.f1))) AND ((m2.t0) BETWEEN (m2.t0) AND (m2.f1))) IS TRUE)) UNION ALL SELECT ALL m2.f1 FROM m2 WHERE (NOT (((NOT (m2.f0)) BETWEEN (((m2.f1)LIKE(m2.f1))) AND ((m2.t0) BETWEEN (m2.t0) AND (m2.f1))) IS TRUE)) IS NULL;
----

# SELECT MAX(CAST(+ (CAST(CAST(m4.f0 AS BIGINT) AS BIGINT)) AS BIGINT)) FROM m1 LEFT OUTER JOIN m4 ON CAST(CAST(CAST(CAST(m4.f0 AS BOOLEAN) AS BOOLEAN) AS BIGINT) AS BOOLEAN);
# SELECT ALL m0.t0, m2.f0, m0.f0, m0.f1, m2.t0 FROM m2, m0 INNER JOIN m1 ON (0.7063405840211255) IN (0.38470686916376307);
# SELECT ALL m0.t0, m2.f0, m0.f0, m0.f1, m2.t0 FROM m2, m0 JOIN m1 ON (0.7063405840211255) IN (0.38470686916376307) WHERE ((0.8711052978527286) BETWEEN (-2.17143237E8) AND (- (((-475999568)%('1823615163'))))) IS FALSE UNION ALL SELECT ALL m0.t0, m2.f0, m0.f0, m0.f1, m2.t0 FROM m2, m0 INNER JOIN m1 ON (0.7063405840211255) IN (0.38470686916376307) WHERE NOT (((0.8711052978527286) BETWEEN (-2.17143237E8) AND (- (((-475999568)%('1823615163'))))) IS FALSE) UNION ALL SELECT ALL m0.t0, m2.f0, m0.f0, m0.f1, m2.t0 FROM m2, m0 INNER JOIN m1 ON (0.7063405840211255) IN (0.38470686916376307) WHERE (((0.8711052978527286) BETWEEN (-2.17143237E8) AND (- (((-475999568)%('1823615163'))))) IS FALSE) IS NULL;
# SELECT ALL m0.t0, m3.t1, m0.f1, m1.f0, m2.t0, m2.f1, m1.t0, m0.f0, m2.f0, m3.f0 FROM m1, m0, m4 JOIN m2 ON NOT (m0.f0) LEFT OUTER JOIN m3 ON NOT (NOT ((((m1.f0)LIKE(m2.f1))) BETWEEN SYMMETRIC ((m4.t1) BETWEEN SYMMETRIC (m0.t0) AND ('RF')) AND (NOT (m1.f1))));
query T rowsort
SELECT MAX(CAST(3.50532422E8 AS STRING)) FROM m2;
----
"350532422.0"

query T rowsort
SELECT ALL MIN((((((m4.f0)+(m4.f0)))*(- (m4.f0)))) IN (0.15344075890540054)) FROM m4;
----
false

query T rowsort
SELECT BOOL_OR((CAST(CAST(CAST(m4.f0 AS BOOLEAN) AS BOOLEAN) AS BOOLEAN)) IS UNKNOWN) FROM m4;
----
false

query T rowsort
SELECT m2.f0, m2.t0 FROM m2;
----
false "t0"

query T rowsort
SELECT ALL m2.f0, m2.t0 FROM m2 WHERE (0.7070907754113832) IS NULL UNION ALL SELECT ALL m2.f0, m2.t0 FROM m2 WHERE NOT ((0.7070907754113832) IS NULL) UNION ALL SELECT ALL m2.f0, m2.t0 FROM m2 WHERE ((0.7070907754113832) IS NULL) IS NULL;
----
false "t0"

# SELECT ALL m3.t0 FROM m3;
query T rowsort
SELECT m3.t0 FROM m3 WHERE m3.f1 UNION ALL SELECT ALL m3.t0 FROM m3 WHERE NOT (m3.f1) UNION ALL SELECT m3.t0 FROM m3 WHERE (m3.f1) IS NULL;
----
"t0"

# SELECT ALL m4.t1 FROM m4;
query T rowsort
SELECT m4.t1 FROM m4 WHERE CAST(((CAST(((m4.f0)*(m4.f0)) AS BIGINT))<=(CAST(CAST(m4.f0 AS STRING) AS BIGINT))) AS BOOLEAN);
----
"t1"

# SELECT m4.t1 FROM m4;
query T rowsort
SELECT m4.t1 FROM m4 WHERE (NOT ((m4.f0) IN (1324253038, -768959031))) IS NOT UNKNOWN;
----
"t1"

query T rowsort
SELECT ALL m4.t1 FROM m4 WHERE NOT ((NOT ((m4.f0) IN (1324253038, -768959031))) IS NOT UNKNOWN);
----

query T rowsort
SELECT m4.t1 FROM m4 WHERE ((NOT ((m4.f0) IN (1324253038, -768959031))) IS NOT UNKNOWN) IS NULL;
----

# SELECT ALL BOOL_OR(CAST((((((m4.f0) IN (0.45490082393559084, 0.8377915038123162, 0.1700114708154189, 0.7630325940776584))OR((CAST(m4.f0 AS STRING)) BETWEEN SYMMETRIC (m4.t2) AND (CAST(FALSE AS STRING)))))AND((m0.f1) NOT IN (0.10756102823568847))) AS BOOLEAN)) FROM m0, m2 JOIN m4 ON m1.f1 FULL OUTER JOIN m1 ON (+ (m4.f0)) IN (0.19359251405846978, 0.13429098165876785);
# SELECT ALL m2.t0, m0.f0, m0.f1, m1.f1, m1.t0, m2.f0, m1.f0, m0.t0, m2.f1 FROM m0, m1 FULL OUTER JOIN m2 ON ((NOT (((m1.f0)LIKE(((m2.t0)||(-356569943))))))<(m2.f0));
# SELECT m0.t0, m0.f0 FROM m1 CROSS JOIN m0;
# SELECT ALL m0.t0, m0.f0 FROM m1 CROSS JOIN m0 WHERE (((('574679056') IN (''))>(m1.f1))) IS FALSE UNION ALL SELECT m0.t0, m0.f0 FROM m1 CROSS JOIN m0 WHERE NOT ((((('574679056') IN (''))>(m1.f1))) IS FALSE) UNION ALL SELECT m0.t0, m0.f0 FROM m1 CROSS JOIN m0 WHERE ((((('574679056') IN (''))>(m1.f1))) IS FALSE) IS NULL;
# SELECT ALL m2.f0, m3.f1, m2.t0 FROM m0, m2 RIGHT OUTER JOIN m3 ON CAST(+ (((+ (m3.f0))%(- (m3.f0)))) AS BOOLEAN);
# SELECT m4.t1 FROM m4;
query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m4.t1 FROM m4 WHERE CAST(((CAST((m4.t1) BETWEEN SYMMETRIC (m4.t1) AND (m4.t2) AS STRING))||(CAST(CAST(1193577717 AS BIGINT) AS STRING))) AS BOOLEAN) UNION ALL SELECT ALL m4.t1 FROM m4 WHERE NOT (CAST(((CAST((m4.t1) BETWEEN SYMMETRIC (m4.t1) AND (m4.t2) AS STRING))||(CAST(CAST(1193577717 AS BIGINT) AS STRING))) AS BOOLEAN)) UNION ALL SELECT m4.t1 FROM m4 WHERE (CAST(((CAST((m4.t1) BETWEEN SYMMETRIC (m4.t1) AND (m4.t2) AS STRING))||(CAST(CAST(1193577717 AS BIGINT) AS STRING))) AS BOOLEAN)) IS NULL;

# SELECT MIN(1.953842239E9) FROM m2 LEFT OUTER JOIN m0 ON ((((m2.t0)||(((CAST(m0.t0 AS STRING))LIKE(((m0.t0)||(m2.f0)))))))LIKE(((m0.t0)||(0.9207693312281986)))) JOIN (SELECT ALL 0.853163383717915 FROM m4, m1 LIMIT 2533947585937459985) AS sub0 ON (CAST(- (2016907708) AS BOOLEAN)) NOT IN (FALSE, TRUE, TRUE);
# SELECT ALL MAX(0.07803849050593459) FROM m2, m0 RIGHT OUTER JOIN m3 ON CAST(0.20616965863647962 AS BOOLEAN);
# SELECT ALL * FROM m1, m0 RIGHT OUTER JOIN m3 ON CAST(((m3.f0) NOT IN (0.5759321221241505, 0.0, 0.48513722906698664, 0.8198557872039383)) IN (FALSE) AS BOOLEAN);
# SELECT ALL * FROM m1, m0 RIGHT OUTER JOIN m3 ON CAST(((m3.f0) NOT IN (0.5759321221241505, 0.0, 0.48513722906698664, 0.8198557872039383)) IN (FALSE) AS BOOLEAN) WHERE (CAST((m0.f0) IS NOT NULL AS STRING)) IN ('靾', '5胥X7n+r');
query T rowsort
SELECT ALL m1.t0, m1.f0 FROM m1;
----
"NULL" "NULL"
"t0" "f0"

query T rowsort
SELECT m1.t0, m1.f0 FROM m1 WHERE ((CAST(m1.t0 AS STRING))LIKE(CAST(((m1.t0)LIKE(m1.t0)) AS STRING)));
----

# SELECT ALL BIT_OR(CAST(0.6100527374972022 AS BIGINT)) FROM m4, m2 RIGHT OUTER JOIN m1 ON CAST(+ (((+ (m4.f0))*(CAST(m4.t1 AS BIGINT)))) AS BOOLEAN) INNER JOIN m0 ON NOT (((((CAST(m4.f0 AS STRING))||(((m4.f0)+(m4.f0)))))>=(CAST((m4.f0) IN (-898590213, 188075659) AS STRING))));
query T rowsort
SELECT * FROM m4;
----
1970-01-01T00:00:00 "t0" "t1" "t2" 0

query T rowsort
SELECT * FROM m4 WHERE ((CAST(CAST(m4.f0 AS STRING) AS STRING))LIKE(((CAST(((m4.f0)-(m4.f0)) AS STRING))||(((- (m4.f0))/(CAST(m4.f0 AS BIGINT)))))));
----

query T rowsort
SELECT ALL m3.f1 FROM m3;
----
false

query T rowsort
SELECT m3.f1 FROM m3 WHERE NOT (((((CAST(-404412652 AS STRING))||(CAST(m3.f1 AS STRING))))LIKE(CAST(m3.f1 AS STRING)))) UNION ALL SELECT ALL m3.f1 FROM m3 WHERE NOT (NOT (((((CAST(-404412652 AS STRING))||(CAST(m3.f1 AS STRING))))LIKE(CAST(m3.f1 AS STRING))))) UNION ALL SELECT ALL m3.f1 FROM m3 WHERE (NOT (((((CAST(-404412652 AS STRING))||(CAST(m3.f1 AS STRING))))LIKE(CAST(m3.f1 AS STRING))))) IS NULL;
----
false

query T rowsort
SELECT m0.f0, m0.t0 FROM m0;
----
NULL "916053861"
NULL "NULL"
false "NULL"
false "t0"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"

query T rowsort
SELECT m0.f0, m0.t0 FROM m0 WHERE CAST(((((1492391863)^(378965728))) IS NULL) IS NOT NULL AS BOOLEAN) UNION ALL SELECT m0.f0, m0.t0 FROM m0 WHERE NOT (CAST(((((1492391863)^(378965728))) IS NULL) IS NOT NULL AS BOOLEAN)) UNION ALL SELECT m0.f0, m0.t0 FROM m0 WHERE (CAST(((((1492391863)^(378965728))) IS NULL) IS NOT NULL AS BOOLEAN)) IS NULL;
----
NULL "916053861"
NULL "NULL"
false "NULL"
false "t0"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"

# SELECT ALL BOOL_AND(NOT (m1.f1)) FROM m1 FULL OUTER JOIN m0 ON CAST(((m1.f1) NOT IN (TRUE)) NOT IN (FALSE, FALSE) AS BOOLEAN) FULL OUTER JOIN (SELECT ALL ((m2.f1)||(0.2960879433534942)) FROM m0, m2 WHERE FALSE LIMIT 1927309666491035552) AS sub0 ON CAST(CAST(1.226633522E9 AS BIGINT) AS BOOLEAN) ORDER BY m0.f0 DESC, m0.f1 DESC;
query T rowsort
SELECT m3.t1, m3.t0, m3.f0 FROM m3;
----
"t1" "t0" 0

query T rowsort
SELECT m3.t1, m3.t0, m3.f0 FROM m3 WHERE (m3.t0) NOT IN ('#b', '
^|N', '');
----
"t1" "t0" 0

query T rowsort
SELECT ALL m3.t1, m3.t0, m3.f0 FROM m3 WHERE NOT ((m3.t0) NOT IN ('#b', '
^|N', ''));
----

query T rowsort
SELECT ALL m3.t1, m3.t0, m3.f0 FROM m3 WHERE ((m3.t0) NOT IN ('#b', '
^|N', '')) IS NULL;
----

query T rowsort
SELECT m1.t0, m1.f0 FROM m1;
----
"NULL" "NULL"
"t0" "f0"

query T rowsort
SELECT ALL m1.t0, m1.f0 FROM m1 WHERE NOT (((m1.f0)LIKE(CAST(((388010802)^(916053861)) AS STRING)))) UNION ALL SELECT ALL m1.t0, m1.f0 FROM m1 WHERE NOT (NOT (((m1.f0)LIKE(CAST(((388010802)^(916053861)) AS STRING))))) UNION ALL SELECT m1.t0, m1.f0 FROM m1 WHERE (NOT (((m1.f0)LIKE(CAST(((388010802)^(916053861)) AS STRING))))) IS NULL;
----
"NULL" "NULL"
"t0" "f0"

# SELECT ALL m4.f0, m1.t0, m4.t1 FROM m1, m0 CROSS JOIN m4;
# SELECT ALL m4.f0, m1.t0, m4.t1 FROM m1, m0 CROSS JOIN m4 WHERE (0.8880381576181327) NOT IN (0.8665990970334522, 0.7887347099647437);
# SELECT ALL m4.f0, m1.t0, m4.t1 FROM m1, m0 CROSS JOIN m4 WHERE NOT ((0.8880381576181327) NOT IN (0.8665990970334522, 0.7887347099647437));
# SELECT m4.f0, m1.t0, m4.t1 FROM m1, m0 CROSS JOIN m4 WHERE ((0.8880381576181327) NOT IN (0.8665990970334522, 0.7887347099647437)) IS NULL;
# SELECT ALL m4.t2, m0.f0, m0.f1, m1.f1 FROM m0, m4 INNER JOIN m1 ON (CAST(((m4.t0)||(m4.f0)) AS STRING)) IN ('g
# ', '', 'T');
# SELECT m4.t0, m2.f0, m2.f1, m4.t2, m4.f0, m4.t1, m2.t0 FROM m4 CROSS JOIN m2;
# SELECT m4.t0, m2.f0, m2.f1, m4.t2, m4.f0, m4.t1, m2.t0 FROM m4 CROSS JOIN m2 WHERE CAST(CAST(CAST((m4.t0) IS NOT NULL AS BOOLEAN) AS BIGINT) AS BOOLEAN);
# SELECT MAX(CAST(CAST(m4.t1 AS BOOLEAN) AS BIGINT)) FROM m4 CROSS JOIN m3;
query T rowsort
SELECT * FROM m2;
----
1970-01-01T00:00:00 "t0" false "f1"

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: sql parser error: Expected end of statement, found: NOTNULL", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL * FROM m2 WHERE (CAST((CAST(m2.f0 AS STRING)) BETWEEN (CAST(m2.f1 AS STRING)) AND (((m2.f1)||(1825484883))) AS BIGINT)) NOTNULL UNION ALL SELECT ALL * FROM m2 WHERE NOT ((CAST((CAST(m2.f0 AS STRING)) BETWEEN (CAST(m2.f1 AS STRING)) AND (((m2.f1)||(1825484883))) AS BIGINT)) NOTNULL) UNION ALL SELECT * FROM m2 WHERE ((CAST((CAST(m2.f0 AS STRING)) BETWEEN (CAST(m2.f1 AS STRING)) AND (((m2.f1)||(1825484883))) AS BIGINT)) NOTNULL) IS NULL;

# SELECT MIN(0.159575150923711) FROM m2 LEFT OUTER JOIN m4 ON m2.f0;
query T rowsort
SELECT SUM(0.7059204780758392) FROM m0;
----
8.471045736910071

query T rowsort
SELECT m3.t0, m3.f0, m3.f1, m3.t1 FROM m3;
----
"t0" 0 false "t1"

query T rowsort
SELECT ALL m3.t0, m3.f0, m3.f1, m3.t1 FROM m3 WHERE NOT (m3.f1);
----
"t0" 0 false "t1"

query T rowsort
SELECT m3.t0, m3.f0, m3.f1, m3.t1 FROM m3 WHERE NOT (NOT (m3.f1));
----

query T rowsort
SELECT ALL m3.t0, m3.f0, m3.f1, m3.t1 FROM m3 WHERE (NOT (m3.f1)) IS NULL;
----

query T rowsort
SELECT m1.t0 FROM m1 ORDER BY m1.f0 ASC;
----
"NULL"
"t0"

query T rowsort
SELECT m1.t0 FROM m1 WHERE (FALSE) IS TRUE;
----

# SELECT m1.t0 FROM m1 WHERE NOT ((FALSE) IS TRUE);
query T rowsort
SELECT ALL m1.t0 FROM m1 WHERE ((FALSE) IS TRUE) IS NULL;
----

query T rowsort
SELECT m1.f0, m1.f1, m1.t0 FROM m1;
----
"NULL" false "NULL"
"f0" false "t0"

query T rowsort
SELECT ALL m1.f0, m1.f1, m1.t0 FROM m1 WHERE (FALSE) IS NOT UNKNOWN UNION ALL SELECT m1.f0, m1.f1, m1.t0 FROM m1 WHERE NOT ((FALSE) IS NOT UNKNOWN) UNION ALL SELECT ALL m1.f0, m1.f1, m1.t0 FROM m1 WHERE ((FALSE) IS NOT UNKNOWN) IS NULL;
----
"NULL" false "NULL"
"f0" false "t0"

query T rowsort
SELECT ALL m4.t0, m4.t2, m4.f0, m4.t1 FROM m4;
----
"t0" "t2" 0 "t1"

query T rowsort
SELECT m4.t0, m4.t2, m4.f0, m4.t1 FROM m4 WHERE FALSE;
----

query T rowsort
SELECT ALL m4.t0, m4.t2, m4.f0, m4.t1 FROM m4 WHERE NOT (FALSE);
----
"t0" "t2" 0 "t1"

query T rowsort
SELECT ALL m4.t0, m4.t2, m4.f0, m4.t1 FROM m4 WHERE (FALSE) IS NULL;
----

# SELECT ALL MAX(m0.t0) FROM m0;
# SELECT ALL m1.t0 FROM m0 LEFT OUTER JOIN m1 ON ((((((((m1.t0)||(-1800798167)))||(+ (299102740))))||(m0.t0)))LIKE(((CAST((m0.f0) NOT IN (TRUE, TRUE, TRUE, FALSE) AS STRING))||(((CAST(m1.t0 AS STRING))||(((m0.t0)||(916053861))))))));
query error Arrow error: Io error: Status \{ code: Internal, message: "Execute logical plan: Datafusion: Schema error: No field named m0\.f0\. Valid fields are \\"BOOL_AND\(NOT m0\.f0 OR m0\.f0 AND m0\.f0 AND m0\.f0 AND m0\.f0 IS NOT UNKNOWN IS NULL\)\\"\.", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT BOOL_AND(((NOT (((((((((m0.f0)OR(m0.f0)))AND(m0.f0)))AND(m0.f0)))AND(m0.f0)))) IS NOT UNKNOWN) IS NULL) FROM m0 ORDER BY m0.f0 DESC;

query error Arrow error: Io error: Status \{ code: Internal, message: "Execute logical plan: Datafusion: Schema error: No field named m3\.t0\. Valid fields are \\"COUNT\(NOT m3\.t0 IS DISTINCT FROM m3\.t1\)\\"\.", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL COUNT(CAST(CAST(NOT (((m3.t0)IS DISTINCT FROM(m3.t1))) AS STRING) AS BIGINT)) FROM m3 ORDER BY m3.t0 DESC;

query T rowsort
SELECT ALL m0.f0, m0.f1 FROM m0;
----
NULL 0.47166914414715877
NULL 0.507623643211476
false 0.0
false 0.6326195071473769
true 0.4131558313302025
true 0.5469987105166848
true 0.5540439337463335
true 0.9622249970170084
true NULL
true NULL
true NULL
true NULL

query T rowsort
SELECT ALL m0.f0, m0.f1 FROM m0 WHERE (((((+ (-1637708205))-(- (-1438866223))))>(0.3743626300346117))) IS NOT UNKNOWN UNION ALL SELECT m0.f0, m0.f1 FROM m0 WHERE NOT ((((((+ (-1637708205))-(- (-1438866223))))>(0.3743626300346117))) IS NOT UNKNOWN) UNION ALL SELECT m0.f0, m0.f1 FROM m0 WHERE ((((((+ (-1637708205))-(- (-1438866223))))>(0.3743626300346117))) IS NOT UNKNOWN) IS NULL;
----
NULL 0.47166914414715877
NULL 0.507623643211476
false 0.0
false 0.6326195071473769
true 0.4131558313302025
true 0.5469987105166848
true 0.5540439337463335
true 0.9622249970170084
true NULL
true NULL
true NULL
true NULL

# SELECT * FROM m4, m3 FULL OUTER JOIN m1 ON NOT (((CAST(CAST(m3.t1 AS STRING) AS STRING))LIKE(((CAST(m3.f0 AS STRING))||(CAST(m3.f1 AS BIGINT)))))) FULL OUTER JOIN m0 ON CAST(- (((- (m3.f0))-(+ (m4.f0)))) AS BOOLEAN);
query T rowsort
SELECT ALL m1.f1 FROM m1;
----
false
false

query T rowsort
SELECT ALL m1.f1 FROM m1 WHERE m1.f1 UNION ALL SELECT ALL m1.f1 FROM m1 WHERE NOT (m1.f1) UNION ALL SELECT m1.f1 FROM m1 WHERE (m1.f1) IS NULL;
----
false
false

query T rowsort
SELECT ALL m2.f0 FROM m2 ORDER BY m2.f1 DESC;
----
false

query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Coordinator: Tskv: Arrow: Cast error: Cannot cast value 'f118763465060' to value of Boolean type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m2.f0 FROM m2 WHERE CAST(CAST(((((m2.f1)||(1876346506)))||(CAST(m2.f0 AS BIGINT))) AS STRING) AS BOOLEAN);

# SELECT ALL m4.t2, m3.t0, m4.t1, m2.f0, m1.t0, m2.t0, m3.t1, m0.f0, m0.f1, m0.t0, m3.f1, m4.t0, m1.f1, m3.f0 FROM m4, m1, m0 RIGHT OUTER JOIN m2 ON m2.f0 RIGHT OUTER JOIN m3 ON (('{[]') IN ('L|', '棿S7tI', '	*')) IN (TRUE, FALSE);
# SELECT m4.t2, m3.t0, m4.t1, m2.f0, m1.t0, m2.t0, m3.t1, m0.f0, m0.f1, m0.t0, m3.f1, m4.t0, m1.f1, m3.f0 FROM m4, m1, m0 RIGHT OUTER JOIN m2 ON m2.f0 RIGHT OUTER JOIN m3 ON (('{[]') IN ('L|', '棿S7tI', '	*')) IN (TRUE, FALSE) WHERE ((CAST((0.38084107415154167) IS NULL AS STRING))LIKE(CAST(CAST(CAST(m2.f0 AS BIGINT) AS BOOLEAN) AS STRING)));
query T rowsort
SELECT ALL m0.t0, m0.f1 FROM m0;
----
"916053861" 0.507623643211476
"NULL" 0.4131558313302025
"NULL" 0.47166914414715877
"NULL" 0.5469987105166848
"NULL" 0.5540439337463335
"NULL" 0.6326195071473769
"NULL" 0.9622249970170084
"NULL" NULL
"NULL" NULL
"NULL" NULL
"NULL" NULL
"t0" 0.0

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: sql parser error: Expected end of statement, found: NOTNULL", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m0.t0, m0.f1 FROM m0 WHERE (0.0241197153905911) NOTNULL;

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: sql parser error: Expected \), found: NOTNULL", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m0.t0, m0.f1 FROM m0 WHERE NOT ((0.0241197153905911) NOTNULL);

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: sql parser error: Expected \), found: NOTNULL", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m0.t0, m0.f1 FROM m0 WHERE ((0.0241197153905911) NOTNULL) IS NULL;

query T rowsort
SELECT BIT_AND(- (((CAST(- (m4.f0) AS BIGINT))/(m4.f0)))) FROM m4;
----
NULL

# SELECT ALL m4.t1, m1.f1, m1.f0 FROM m4 RIGHT OUTER JOIN m1 ON CAST(2.9910274E8 AS BOOLEAN);
query T rowsort
SELECT m2.f0 FROM m2;
----
false

query T rowsort
SELECT m2.f0 FROM m2 WHERE (CAST(((m2.t0)IS DISTINCT FROM(m2.t0)) AS BOOLEAN)) IS UNKNOWN UNION ALL SELECT ALL m2.f0 FROM m2 WHERE NOT ((CAST(((m2.t0)IS DISTINCT FROM(m2.t0)) AS BOOLEAN)) IS UNKNOWN) UNION ALL SELECT ALL m2.f0 FROM m2 WHERE ((CAST(((m2.t0)IS DISTINCT FROM(m2.t0)) AS BOOLEAN)) IS UNKNOWN) IS NULL;
----
false

# SELECT ALL * FROM m4 CROSS JOIN m3;
# SELECT * FROM m4 CROSS JOIN m3 WHERE ((CAST(m3.t0 AS STRING)) NOT IN ('}NIg늟[')) IS NOT UNKNOWN UNION ALL SELECT * FROM m4 CROSS JOIN m3 WHERE NOT (((CAST(m3.t0 AS STRING)) NOT IN ('}NIg늟[')) IS NOT UNKNOWN) UNION ALL SELECT ALL * FROM m4 CROSS JOIN m3 WHERE (((CAST(m3.t0 AS STRING)) NOT IN ('}NIg늟[')) IS NOT UNKNOWN) IS NULL;
# SELECT m3.f0 FROM m3 LEFT OUTER JOIN m4 ON m3.f1;
# SELECT ALL m3.f0 FROM m3 LEFT OUTER JOIN m4 ON m3.f1 WHERE CAST((9.62753936E8) NOT IN ('Infinity') AS BOOLEAN) UNION ALL SELECT ALL m3.f0 FROM m3 LEFT OUTER JOIN m4 ON m3.f1 WHERE NOT (CAST((9.62753936E8) NOT IN ('Infinity') AS BOOLEAN)) UNION ALL SELECT m3.f0 FROM m3 LEFT OUTER JOIN m4 ON m3.f1 WHERE (CAST((9.62753936E8) NOT IN ('Infinity') AS BOOLEAN)) IS NULL;
query T rowsort
SELECT m4.t0, m4.f0 FROM m4;
----
"t0" 0

query T rowsort
SELECT m4.t0, m4.f0 FROM m4 WHERE TRUE UNION ALL SELECT ALL m4.t0, m4.f0 FROM m4 WHERE NOT (TRUE) UNION ALL SELECT ALL m4.t0, m4.f0 FROM m4 WHERE (TRUE) IS NULL;
----
"t0" 0

# SELECT m0.f0 FROM m0 LEFT OUTER JOIN (SELECT ((CAST(0.6044901499228733 AS BIGINT))*(CAST(- (((m3.f0)^(m3.f0))) AS BIGINT))), CAST(CAST(((((m3.f0)-(m3.f0)))+(((m3.f0)^(m3.f0)))) AS STRING) AS BIGINT) FROM m2, m3, m1) AS sub0 ON (- (((+ (-697135002))*(CAST(m0.f0 AS BIGINT))))) IS NULL;
query T rowsort
SELECT ALL m4.f0, m4.t2, m4.t1 FROM m4;
----
0 "t2" "t1"

query T rowsort
SELECT m4.f0, m4.t2, m4.t1 FROM m4 WHERE (0.9371801754539796) NOT IN (0.22102354437320937, 0.07241609218681555) UNION ALL SELECT m4.f0, m4.t2, m4.t1 FROM m4 WHERE NOT ((0.9371801754539796) NOT IN (0.22102354437320937, 0.07241609218681555)) UNION ALL SELECT ALL m4.f0, m4.t2, m4.t1 FROM m4 WHERE ((0.9371801754539796) NOT IN (0.22102354437320937, 0.07241609218681555)) IS NULL;
----
0 "t2" "t1"

# SELECT ALL m2.f1, m4.t0, m3.t1 FROM m0, m2, m1 LEFT OUTER JOIN m4 ON CAST((+ (m4.f0)) IS NULL AS BOOLEAN) JOIN m3 ON (((((CAST(((m4.f0)-(m3.f0)) AS BOOLEAN))OR(((m1.f1) NOTNULL) IS TRUE)))OR(((((((CAST(0.22195221450973446 AS BOOLEAN))AND(CAST(m4.t0 AS BOOLEAN))))OR((m4.f0) IN (-2141372195))))OR((m3.t0) IS NULL))))) IS FALSE;
query T rowsort
SELECT m0.f0 FROM m0;
----
NULL
NULL
false
false
true
true
true
true
true
true
true
true

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m0.f0 FROM m0 WHERE (0.9998372198711547) BETWEEN SYMMETRIC (0.2700300601709139) AND (- (((CAST(FALSE AS BIGINT))^(((533580250)^(2116911742))))));

query T rowsort
SELECT ALL SUM(m3.f0) FROM m3;
----
0

query T rowsort
SELECT ALL m2.f1 FROM m2;
----
"f1"

query T rowsort
SELECT ALL m2.f1 FROM m2 WHERE m2.f0 UNION ALL SELECT m2.f1 FROM m2 WHERE NOT (m2.f0) UNION ALL SELECT m2.f1 FROM m2 WHERE (m2.f0) IS NULL;
----
"f1"

# SELECT m1.f1, m2.f0, m1.f0, m1.t0, m3.t0, m3.f1, m3.t1 FROM m1, m3 RIGHT OUTER JOIN m2 ON ((NOT ((m1.t0) IN ('0G', 'o'))) BETWEEN SYMMETRIC ((CAST(m3.f0 AS BOOLEAN)) BETWEEN (CAST(m1.t0 AS BOOLEAN)) AND (((m2.t0)!=(m3.t1)))) AND ((m3.f1) BETWEEN (((m3.t1)LIKE(m3.t1))) AND (((m3.t0)LIKE(m1.t0))))) IS NOT UNKNOWN;
query T rowsort
SELECT m1.f1, m1.f0, m1.t0 FROM m1;
----
false "NULL" "NULL"
false "f0" "t0"

query T rowsort
SELECT m1.f1, m1.f0, m1.t0 FROM m1 WHERE CAST(+ (((- (-2136200649))-(CAST(0.7730655536082255 AS BIGINT)))) AS BOOLEAN);
----
false "NULL" "NULL"
false "f0" "t0"

# SELECT m4.t0, m2.f0, m1.f1, m4.t1, m3.f1, m1.f0 FROM m4, m3, m2 RIGHT OUTER JOIN m1 ON (((0.6405568333898148) IS NULL)<(CAST(0.6780636900108618 AS BOOLEAN))) INNER JOIN m0 ON (0.40301486547837795) NOT IN (0.571521780411183, 0.5440916991433237);
query T rowsort
SELECT m0.f1 FROM m0;
----
0.0
0.4131558313302025
0.47166914414715877
0.507623643211476
0.5469987105166848
0.5540439337463335
0.6326195071473769
0.9622249970170084
NULL
NULL
NULL
NULL

query T rowsort
SELECT m0.f1 FROM m0 WHERE (CAST(-4.36419271E8 AS BOOLEAN)) IS UNKNOWN UNION ALL SELECT m0.f1 FROM m0 WHERE NOT ((CAST(-4.36419271E8 AS BOOLEAN)) IS UNKNOWN) UNION ALL SELECT m0.f1 FROM m0 WHERE ((CAST(-4.36419271E8 AS BOOLEAN)) IS UNKNOWN) IS NULL;
----
0.0
0.4131558313302025
0.47166914414715877
0.507623643211476
0.5469987105166848
0.5540439337463335
0.6326195071473769
0.9622249970170084
NULL
NULL
NULL
NULL

# SELECT ALL BOOL_OR((m1.f1) NOTNULL) FROM m1, m3 CROSS JOIN m0 FULL OUTER JOIN m4 ON ((CAST(m3.f0 AS BIGINT)) NOT IN (-1806316776, -493951553)) IS TRUE;
query T rowsort
SELECT * FROM m3;
----
1970-01-01T00:00:00 "t0" "t1" 0 false

query T rowsort
SELECT ALL * FROM m3 WHERE (((CAST(CAST(TRUE AS STRING) AS STRING))LIKE(CAST(m3.t1 AS STRING)))) IS NOT UNKNOWN;
----
1970-01-01T00:00:00 "t0" "t1" 0 false

# SELECT m4.t0 FROM m4;
query T rowsort
SELECT m4.t0 FROM m4 WHERE ((CAST(CAST(CAST(4.76629951E8 AS STRING) AS STRING) AS STRING))LIKE(CAST(0.7601884972814399 AS STRING))) UNION ALL SELECT m4.t0 FROM m4 WHERE NOT (((CAST(CAST(CAST(4.76629951E8 AS STRING) AS STRING) AS STRING))LIKE(CAST(0.7601884972814399 AS STRING)))) UNION ALL SELECT m4.t0 FROM m4 WHERE (((CAST(CAST(CAST(4.76629951E8 AS STRING) AS STRING) AS STRING))LIKE(CAST(0.7601884972814399 AS STRING)))) IS NULL;
----
"t0"

query error Arrow error: Io error: Status \{ code: Internal, message: "Execute logical plan: Datafusion: Schema error: No field named m4\.f0\. Valid fields are \\"SUM\(Float64\(299102740\)\)\\"\.", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL SUM(2.9910274E8) FROM m4 ORDER BY m4.f0 ASC;

query T rowsort
SELECT * FROM m1;
----
1970-01-01T00:00:00 "t0" "f0" false
2207-04-18T13:56:55.539246350 "NULL" "NULL" false

query T rowsort
SELECT ALL * FROM m1 WHERE CAST(- (CAST(((-597573009)+(-436419271)) AS BIGINT)) AS BOOLEAN) UNION ALL SELECT * FROM m1 WHERE NOT (CAST(- (CAST(((-597573009)+(-436419271)) AS BIGINT)) AS BOOLEAN)) UNION ALL SELECT ALL * FROM m1 WHERE (CAST(- (CAST(((-597573009)+(-436419271)) AS BIGINT)) AS BOOLEAN)) IS NULL;
----
1970-01-01T00:00:00 "t0" "f0" false
2207-04-18T13:56:55.539246350 "NULL" "NULL" false

query T rowsort
SELECT ALL m0.f0 FROM m0;
----
NULL
NULL
false
false
true
true
true
true
true
true
true
true

query T rowsort
SELECT m0.f0 FROM m0 WHERE TRUE UNION ALL SELECT ALL m0.f0 FROM m0 WHERE NOT (TRUE) UNION ALL SELECT m0.f0 FROM m0 WHERE (TRUE) IS NULL;
----
NULL
NULL
false
false
true
true
true
true
true
true
true
true

# SELECT ALL COUNT(CAST(NOT (('A') IN (NULL, '')) AS BIGINT)) FROM m4, m0 INNER JOIN m3 ON m0.f0 JOIN m2 ON NOT ((8.08995049E8) BETWEEN (((CAST(21124813 AS BIGINT))^(((m3.f0)^(m3.f0))))) AND (0.9509090822068451)) ORDER BY m4.t0 DESC;
query T rowsort
SELECT ALL * FROM m0;
----
1970-01-01T00:00:00 "t0" false 0.0
1981-08-07T06:10:24.080382889 "NULL" false 0.6326195071473769
1990-01-03T22:50:52.613557553 "NULL" true NULL
2003-01-04T08:51:33.467254361 "916053861" NULL 0.507623643211476
2070-08-01T14:24:06.074400477 "NULL" NULL 0.47166914414715877
2096-05-01T02:46:47.649375642 "NULL" true NULL
2105-09-29T02:51:25.038645395 "NULL" true 0.4131558313302025
2148-08-02T22:07:02.062413216 "NULL" true 0.5469987105166848
2155-12-04T02:07:05.191822176 "NULL" true NULL
2169-05-25T00:03:51.914973050 "NULL" true 0.5540439337463335
2207-04-02T03:26:32.909450783 "NULL" true NULL
2208-09-18T16:29:32.643168002 "NULL" true 0.9622249970170084

query T rowsort
SELECT * FROM m0 WHERE NOT (CAST(0.5703553350775143 AS BOOLEAN));
----

query T rowsort
SELECT ALL SUM(1099878272) FROM m0;
----
13198539264

query T rowsort
SELECT ALL SUM(0.15266774123964788) FROM m3;
----
0.15266774123964788

# SELECT SUM(CAST(((CAST(0.9260301226768164 AS STRING))||(NOT (((m1.f0)LIKE(m1.t0))))) AS BIGINT)) FROM m4, m3 INNER JOIN m1 ON ((CAST(((((m4.f0)^(m4.f0)))*(((m3.f0)%(m3.f0)))) AS STRING))LIKE(((((CAST(m4.f0 AS STRING))||(CAST(m4.t0 AS BIGINT))))||(NOT (((m4.t0)LIKE(m1.t0)))))));
# SELECT m3.f1, m0.t0, m2.t0, m3.t0, m3.f0, m0.f0, m2.f0, m0.f1, m2.f1 FROM m2, m0 CROSS JOIN m3;
# SELECT m3.f1, m0.t0, m2.t0, m3.t0, m3.f0, m0.f0, m2.f0, m0.f1, m2.f1 FROM m2, m0 CROSS JOIN m3 WHERE m2.f0;
# SELECT ALL m3.f1, m0.t0, m2.t0, m3.t0, m3.f0, m0.f0, m2.f0, m0.f1, m2.f1 FROM m2, m0 CROSS JOIN m3 WHERE NOT (m2.f0);
# SELECT m3.f1, m0.t0, m2.t0, m3.t0, m3.f0, m0.f0, m2.f0, m0.f1, m2.f1 FROM m2, m0 CROSS JOIN m3 WHERE (m2.f0) IS NULL;
query T rowsort
SELECT ALL m2.f0, m2.t0, m2.f1 FROM m2;
----
false "t0" "f1"

query T rowsort
SELECT m2.f0, m2.t0, m2.f1 FROM m2 WHERE CAST(+ (CAST(+ (-955411992) AS BIGINT)) AS BOOLEAN);
----
false "t0" "f1"

# SELECT ALL m4.t0, m3.f0, m3.f1, m4.t1, m0.f0, m0.f1, m4.t2, m0.t0, m3.t1, m3.t0, m4.f0 FROM m3, m4 RIGHT OUTER JOIN m0 ON ((CAST(((+ (m3.f0))-(- (m3.f0))) AS STRING))LIKE(CAST(((((((((((m0.f0)AND(m3.f1)))OR(m0.f0)))OR((TRUE) BETWEEN (m3.f1) AND (m3.f1))))AND(((((((((m0.f0)OR(m0.f0)))OR(m0.f0)))OR(m0.f0)))AND(m0.f0)))))AND(((((m3.f1)OR(TRUE)))OR(m3.f1)))) AS STRING)));
query T rowsort
SELECT ALL m2.f1, m2.t0, m2.f0 FROM m2;
----
"f1" "t0" false

query T rowsort
SELECT ALL m2.f1, m2.t0, m2.f0 FROM m2 WHERE (CAST(0.5535707011698111 AS STRING)) NOT IN ('', '~([h1義|') UNION ALL SELECT m2.f1, m2.t0, m2.f0 FROM m2 WHERE NOT ((CAST(0.5535707011698111 AS STRING)) NOT IN ('', '~([h1義|')) UNION ALL SELECT m2.f1, m2.t0, m2.f0 FROM m2 WHERE ((CAST(0.5535707011698111 AS STRING)) NOT IN ('', '~([h1義|')) IS NULL;
----
"f1" "t0" false

# SELECT BIT_OR(CAST(+ (CAST(0.568855134142157 AS BIGINT)) AS BIGINT)) FROM m3 CROSS JOIN m4;
query T rowsort
SELECT ALL m2.f1 FROM m2;
----
"f1"

query T rowsort
SELECT m2.f1 FROM m2 WHERE CAST(+ (- (+ (-816339221))) AS BOOLEAN);
----
"f1"

query T rowsort
SELECT m2.f1 FROM m2 WHERE NOT (CAST(+ (- (+ (-816339221))) AS BOOLEAN));
----

query T rowsort
SELECT ALL m2.f1 FROM m2 WHERE (CAST(+ (- (+ (-816339221))) AS BOOLEAN)) IS NULL;
----

query T rowsort
SELECT ALL m1.f0, m1.f1 FROM m1;
----
"NULL" false
"f0" false

query T rowsort
SELECT ALL m1.f0, m1.f1 FROM m1 WHERE m1.f1;
----

query T rowsort
SELECT ALL m1.f0, m1.f1 FROM m1 WHERE NOT (m1.f1);
----
"NULL" false
"f0" false

query T rowsort
SELECT m1.f0, m1.f1 FROM m1 WHERE (m1.f1) IS NULL;
----

query T rowsort
SELECT ALL m1.t0, m1.f0, m1.f1 FROM m1;
----
"NULL" "NULL" false
"t0" "f0" false

query T rowsort
SELECT m1.t0, m1.f0, m1.f1 FROM m1 WHERE m1.f1 UNION ALL SELECT ALL m1.t0, m1.f0, m1.f1 FROM m1 WHERE NOT (m1.f1) UNION ALL SELECT ALL m1.t0, m1.f0, m1.f1 FROM m1 WHERE (m1.f1) IS NULL;
----
"NULL" "NULL" false
"t0" "f0" false

# SELECT ALL m3.t1, m1.f0, m0.t0, m3.f0, m1.t0, m3.t0, m1.f1 FROM m3, m1 FULL OUTER JOIN m0 ON (m3.f0) NOT IN (0.20314008905839864, 0.09066228409924981, 0.8345362071659558);
query T rowsort
SELECT ALL BOOL_AND(CAST(CAST((((m4.t2)>=(m4.t1))) IS NOT UNKNOWN AS STRING) AS BOOLEAN)) FROM m4;
----
true

# SELECT m4.f0, m0.f0, m2.f0, m0.t0 FROM m0, m2 INNER JOIN m4 ON CAST(CAST(0.5675009092047806 AS BIGINT) AS BOOLEAN);
# SELECT ALL MAX(CAST(((CAST(CAST(m2.f0 AS BIGINT) AS STRING))||(m4.f0)) AS STRING)) FROM m4, m2 LEFT OUTER JOIN m3 ON CAST(((CAST((FALSE) IS FALSE AS BIGINT))%(- (((m3.f0)-(m4.f0))))) AS BOOLEAN);
# SELECT ALL m0.f0, m0.t0, m1.f1, m1.t0 FROM m1 CROSS JOIN m0;
# SELECT m0.f0, m0.t0, m1.f1, m1.t0 FROM m1 CROSS JOIN m0 WHERE (CAST(CAST(-1948393386 AS BIGINT) AS STRING)) NOT IN ('', 'SA}2.wc!w') UNION ALL SELECT m0.f0, m0.t0, m1.f1, m1.t0 FROM m1 CROSS JOIN m0 WHERE NOT ((CAST(CAST(-1948393386 AS BIGINT) AS STRING)) NOT IN ('', 'SA}2.wc!w')) UNION ALL SELECT m0.f0, m0.t0, m1.f1, m1.t0 FROM m1 CROSS JOIN m0 WHERE ((CAST(CAST(-1948393386 AS BIGINT) AS STRING)) NOT IN ('', 'SA}2.wc!w')) IS NULL;
# SELECT ALL m4.t0, m2.f0, m1.f1, m4.t2, m3.f0, m4.f0, m1.f0, m4.t1 FROM m1, m3 FULL OUTER JOIN m4 ON (((m1.f0) BETWEEN SYMMETRIC (m2.t0) AND (m3.t1)) IS TRUE) NOT IN (NULL) LEFT OUTER JOIN m2 ON CAST(NOT (CAST(0.7276699008110479 AS BOOLEAN)) AS BOOLEAN);
query T rowsort
SELECT m0.t0, m0.f0, m0.f1 FROM m0;
----
"916053861" NULL 0.507623643211476
"NULL" NULL 0.47166914414715877
"NULL" false 0.6326195071473769
"NULL" true 0.4131558313302025
"NULL" true 0.5469987105166848
"NULL" true 0.5540439337463335
"NULL" true 0.9622249970170084
"NULL" true NULL
"NULL" true NULL
"NULL" true NULL
"NULL" true NULL
"t0" false 0.0

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: sql parser error: Expected end of statement, found: NOTNULL", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT m0.t0, m0.f0, m0.f1 FROM m0 WHERE (CAST(((((((((m0.f0)OR(m0.f0)))AND(m0.f0)))AND(m0.f0)))=(CAST(m0.t0 AS BOOLEAN))) AS BIGINT)) NOTNULL UNION ALL SELECT ALL m0.t0, m0.f0, m0.f1 FROM m0 WHERE NOT ((CAST(((((((((m0.f0)OR(m0.f0)))AND(m0.f0)))AND(m0.f0)))=(CAST(m0.t0 AS BOOLEAN))) AS BIGINT)) NOTNULL) UNION ALL SELECT ALL m0.t0, m0.f0, m0.f1 FROM m0 WHERE ((CAST(((((((((m0.f0)OR(m0.f0)))AND(m0.f0)))AND(m0.f0)))=(CAST(m0.t0 AS BOOLEAN))) AS BIGINT)) NOTNULL) IS NULL;

query T rowsort
SELECT ALL m1.f0, m1.f1, m1.t0 FROM m1;
----
"NULL" false "NULL"
"f0" false "t0"

query T rowsort
SELECT m1.f0, m1.f1, m1.t0 FROM m1 WHERE (NOT (CAST(CAST(m1.f1 AS BIGINT) AS BOOLEAN))) IS FALSE UNION ALL SELECT ALL m1.f0, m1.f1, m1.t0 FROM m1 WHERE NOT ((NOT (CAST(CAST(m1.f1 AS BIGINT) AS BOOLEAN))) IS FALSE) UNION ALL SELECT m1.f0, m1.f1, m1.t0 FROM m1 WHERE ((NOT (CAST(CAST(m1.f1 AS BIGINT) AS BOOLEAN))) IS FALSE) IS NULL;
----
"NULL" false "NULL"
"f0" false "t0"

# SELECT m1.t0 FROM m1;
query error Arrow error: Io error: Status \{ code: Internal, message: "Could not chunk result: Coordinator: Tskv: Arrow: Cast error: Cannot cast value 'f0' to value of Boolean type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m1.t0 FROM m1 WHERE CAST(m1.f0 AS BOOLEAN) UNION ALL SELECT m1.t0 FROM m1 WHERE NOT (CAST(m1.f0 AS BOOLEAN)) UNION ALL SELECT ALL m1.t0 FROM m1 WHERE (CAST(m1.f0 AS BOOLEAN)) IS NULL;

query T rowsort
SELECT ALL m0.t0, m0.f0 FROM m0;
----
"916053861" NULL
"NULL" NULL
"NULL" false
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"t0" false

query T rowsort
SELECT ALL m0.t0, m0.f0 FROM m0 WHERE (0.8444721799430347) NOT IN (0.6094674344995117, 0.10297882441723716);
----
"916053861" NULL
"NULL" NULL
"NULL" false
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"t0" false

query T rowsort
SELECT m0.t0, m0.f0 FROM m0 WHERE NOT ((0.8444721799430347) NOT IN (0.6094674344995117, 0.10297882441723716));
----

query T rowsort
SELECT m0.t0, m0.f0 FROM m0 WHERE ((0.8444721799430347) NOT IN (0.6094674344995117, 0.10297882441723716)) IS NULL;
----

query T rowsort
SELECT ALL m0.f0, m0.t0 FROM m0;
----
NULL "916053861"
NULL "NULL"
false "NULL"
false "t0"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"

query T rowsort
SELECT ALL m0.f0, m0.t0 FROM m0 WHERE (0.6143344472052209) NOT IN (0.38800259661722036, 0.4059673838843927, 0.593298996512974) UNION ALL SELECT m0.f0, m0.t0 FROM m0 WHERE NOT ((0.6143344472052209) NOT IN (0.38800259661722036, 0.4059673838843927, 0.593298996512974)) UNION ALL SELECT ALL m0.f0, m0.t0 FROM m0 WHERE ((0.6143344472052209) NOT IN (0.38800259661722036, 0.4059673838843927, 0.593298996512974)) IS NULL;
----
NULL "916053861"
NULL "NULL"
false "NULL"
false "t0"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"

query error Arrow error: Io error: Status \{ code: Internal, message: "Execute logical plan: Datafusion: Schema error: No field named m1\.f0\. Valid fields are \\"SUM\(Boolean\(true\)\)\\"\.", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL SUM(CAST(TRUE AS BIGINT)) FROM m1 ORDER BY m1.f0 ASC;

# SELECT ALL m0.f1, m2.f0, m0.t0, m4.t2, m2.f1, m4.t0, m1.f1, m1.t0, m2.t0, m4.f0, m0.f0 FROM m0, m2 JOIN m4 ON m1.f1 FULL OUTER JOIN m1 ON (((('jEGA_倖')<=(((CAST(m1.f1 AS STRING))||(CAST(m4.f0 AS BOOLEAN))))))AND(CAST(0.03364740705335556 AS BOOLEAN)));
query T rowsort
SELECT m0.f0, m0.f1, m0.t0 FROM m0;
----
NULL 0.47166914414715877 "NULL"
NULL 0.507623643211476 "916053861"
false 0.0 "t0"
false 0.6326195071473769 "NULL"
true 0.4131558313302025 "NULL"
true 0.5469987105166848 "NULL"
true 0.5540439337463335 "NULL"
true 0.9622249970170084 "NULL"
true NULL "NULL"
true NULL "NULL"
true NULL "NULL"
true NULL "NULL"

query T rowsort
SELECT m0.f0, m0.f1, m0.t0 FROM m0 WHERE NOT (CAST(CAST(- (1931145693) AS BIGINT) AS BOOLEAN)) UNION ALL SELECT ALL m0.f0, m0.f1, m0.t0 FROM m0 WHERE NOT (NOT (CAST(CAST(- (1931145693) AS BIGINT) AS BOOLEAN))) UNION ALL SELECT m0.f0, m0.f1, m0.t0 FROM m0 WHERE (NOT (CAST(CAST(- (1931145693) AS BIGINT) AS BOOLEAN))) IS NULL;
----
NULL 0.47166914414715877 "NULL"
NULL 0.507623643211476 "916053861"
false 0.0 "t0"
false 0.6326195071473769 "NULL"
true 0.4131558313302025 "NULL"
true 0.5469987105166848 "NULL"
true 0.5540439337463335 "NULL"
true 0.9622249970170084 "NULL"
true NULL "NULL"
true NULL "NULL"
true NULL "NULL"
true NULL "NULL"

# SELECT ALL m4.t2, m0.f1, m4.t0, m0.t0, m4.f0, m4.t1, m0.f0 FROM m0 LEFT OUTER JOIN m4 ON (((+ (- (m4.f0)))%(((CAST(m0.f0 AS BIGINT))/(((m4.f0)^(m4.f0))))))) IS NOT NULL;
# SELECT ALL MIN(CAST(((CAST(((1860831107)=(m4.f0)) AS STRING))||(0.7068119222502423)) AS STRING)) FROM m0, m1 INNER JOIN m3 ON m0.f0 CROSS JOIN m4;
query T rowsort
SELECT BIT_AND(- (- (CAST(CAST(m3.f1 AS STRING) AS BIGINT)))) FROM m3 GROUP BY CAST(0.13127864353966145 AS BIGINT), (CAST(((m3.f0)-(m3.f0)) AS BIGINT)) NOT IN (206859893, -714516645, 154574582, -189279528);
----
0

# SELECT ALL m4.f0, m4.t1, m3.f0, m4.t0, m3.t0, m3.f1 FROM m3 JOIN m4 ON (((((CAST(m3.f0 AS STRING))||(CAST(-1485716661 AS STRING))))LIKE(CAST((-836227434) BETWEEN (m3.f0) AND (m3.f0) AS STRING)))) IS FALSE;
query T rowsort
SELECT m1.t0, m1.f0, m1.f1 FROM m1;
----
"NULL" "NULL" false
"t0" "f0" false

query T rowsort
SELECT m1.t0, m1.f0, m1.f1 FROM m1 WHERE m1.f1;
----

query T rowsort
SELECT ALL m1.t0, m1.f0, m1.f1 FROM m1 WHERE NOT (m1.f1);
----
"NULL" "NULL" false
"t0" "f0" false

query T rowsort
SELECT m1.t0, m1.f0, m1.f1 FROM m1 WHERE (m1.f1) IS NULL;
----

query T rowsort
SELECT ALL m3.t1, m3.f1, m3.t0, m3.f0 FROM m3;
----
"t1" false "t0" 0

query T rowsort
SELECT m3.t1, m3.f1, m3.t0, m3.f0 FROM m3 WHERE CAST(CAST(0.8380333970340661 AS BIGINT) AS BOOLEAN);
----

query T rowsort
SELECT ALL m0.t0, m0.f1, m0.f0 FROM m0;
----
"916053861" 0.507623643211476 NULL
"NULL" 0.4131558313302025 true
"NULL" 0.47166914414715877 NULL
"NULL" 0.5469987105166848 true
"NULL" 0.5540439337463335 true
"NULL" 0.6326195071473769 false
"NULL" 0.9622249970170084 true
"NULL" NULL true
"NULL" NULL true
"NULL" NULL true
"NULL" NULL true
"t0" 0.0 false

query T rowsort
SELECT m0.t0, m0.f1, m0.f0 FROM m0 WHERE NOT ((1151624598) NOT IN (-1893264820, 855322594));
----

query T rowsort
SELECT m0.t0, m0.f1, m0.f0 FROM m0 WHERE NOT (NOT ((1151624598) NOT IN (-1893264820, 855322594)));
----
"916053861" 0.507623643211476 NULL
"NULL" 0.4131558313302025 true
"NULL" 0.47166914414715877 NULL
"NULL" 0.5469987105166848 true
"NULL" 0.5540439337463335 true
"NULL" 0.6326195071473769 false
"NULL" 0.9622249970170084 true
"NULL" NULL true
"NULL" NULL true
"NULL" NULL true
"NULL" NULL true
"t0" 0.0 false

query T rowsort
SELECT m0.t0, m0.f1, m0.f0 FROM m0 WHERE (NOT ((1151624598) NOT IN (-1893264820, 855322594))) IS NULL;
----

# SELECT m2.f0 FROM m2 RIGHT OUTER JOIN m1 ON NOT ((NOT (NOT (m2.f0))) BETWEEN SYMMETRIC ((CAST(-1959534426 AS BOOLEAN)) IS UNKNOWN) AND ((((m2.f1)||(2028397455))) BETWEEN SYMMETRIC (((m1.t0)||(m2.f0))) AND (((m2.t0)||(m1.f0)))));
# SELECT m2.f0 FROM m2 RIGHT OUTER JOIN m1 ON NOT ((NOT (NOT (m2.f0))) BETWEEN SYMMETRIC ((CAST(-1959534426 AS BOOLEAN)) IS UNKNOWN) AND ((((m2.f1)||(2028397455))) BETWEEN SYMMETRIC (((m1.t0)||(m2.f0))) AND (((m2.t0)||(m1.f0))))) WHERE NOT ((CAST(m2.f0 AS DOUBLE)) IN (0.959994000936868));
query T rowsort
SELECT ALL m1.f0, m1.f1, m1.t0 FROM m1;
----
"NULL" false "NULL"
"f0" false "t0"

query T rowsort
SELECT ALL m1.f0, m1.f1, m1.t0 FROM m1 WHERE CAST(+ (((((17118187)^(-595486666)))^(-483484156))) AS BOOLEAN) UNION ALL SELECT ALL m1.f0, m1.f1, m1.t0 FROM m1 WHERE NOT (CAST(+ (((((17118187)^(-595486666)))^(-483484156))) AS BOOLEAN)) UNION ALL SELECT ALL m1.f0, m1.f1, m1.t0 FROM m1 WHERE (CAST(+ (((((17118187)^(-595486666)))^(-483484156))) AS BOOLEAN)) IS NULL;
----
"NULL" false "NULL"
"f0" false "t0"

query T rowsort
SELECT ALL m2.f0, m2.f1 FROM m2;
----
false "f1"

query T rowsort
SELECT ALL m2.f0, m2.f1 FROM m2 WHERE m2.f0;
----

query T rowsort
SELECT ALL m2.f0, m2.f1 FROM m2 WHERE NOT (m2.f0);
----
false "f1"

query T rowsort
SELECT ALL m2.f0, m2.f1 FROM m2 WHERE (m2.f0) IS NULL;
----

# SELECT m1.t0, m1.f1 FROM m1 LEFT OUTER JOIN m4 ON (CAST(m4.f0 AS BOOLEAN)) IS FALSE;
# SELECT m3.t1 FROM m2 FULL OUTER JOIN m3 ON (0.9179426499645206) NOT IN (0.6626871709453346, 0.23488717962897399);
# SELECT m3.t1 FROM m2 FULL OUTER JOIN m3 ON (0.9179426499645206) NOT IN (0.6626871709453346, 0.23488717962897399) WHERE ((((((((m2.t0)||(m3.f1)))||(+ (m3.f0))))LIKE(((CAST(m3.f0 AS STRING))||(((m3.t1)||(m2.t0)))))))OR(NOT (CAST(((m2.t0)||(m2.f0)) AS BOOLEAN)))) UNION ALL SELECT m3.t1 FROM m2 FULL OUTER JOIN m3 ON (0.9179426499645206) NOT IN (0.6626871709453346, 0.23488717962897399) WHERE NOT (((((((((m2.t0)||(m3.f1)))||(+ (m3.f0))))LIKE(((CAST(m3.f0 AS STRING))||(((m3.t1)||(m2.t0)))))))OR(NOT (CAST(((m2.t0)||(m2.f0)) AS BOOLEAN))))) UNION ALL SELECT ALL m3.t1 FROM m2 FULL OUTER JOIN m3 ON (0.9179426499645206) NOT IN (0.6626871709453346, 0.23488717962897399) WHERE (((((((((m2.t0)||(m3.f1)))||(+ (m3.f0))))LIKE(((CAST(m3.f0 AS STRING))||(((m3.t1)||(m2.t0)))))))OR(NOT (CAST(((m2.t0)||(m2.f0)) AS BOOLEAN))))) IS NULL;
query T rowsort
SELECT ALL MAX(0.8380110533784965) FROM m3;
----
0.8380110533784965

# SELECT ALL m3.f1, m2.f1, m4.t2, m4.t0, m4.t1, m3.f0, m2.f0, m2.t0, m3.t0 FROM m2, m3 RIGHT OUTER JOIN m4 ON (m4.f0) IN (-417933110, -501929525, 1230709244) INNER JOIN (SELECT CAST((0.6468887984268011) IN (0.15955296489697113, 0.6031707774672902) AS BIGINT), CAST(CAST((350532422) IN (-702429126) AS STRING) AS STRING) FROM m2 LIMIT 1714259337703432590) AS sub0 ON (CAST(((m4.f0)/(m4.f0)) AS BIGINT)) NOT IN (0.40311961483083747, 0.6612238738525722);
query error Arrow error: Io error: Status \{ code: Internal, message: "Execute logical plan: Datafusion: Optimizer rule 'simplify_expressions' failed\\ncaused by\\nArrow error: Cast error: Cannot cast string '0\.405601854465989730\.5010374883053191' to value of Int64 type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL COUNT(CAST(((CAST(((m2.f0)<(m2.f0)) AS BIGINT))*(CAST((('0.40560185446598973')||('0.5010374883053191')) AS BIGINT))) AS BIGINT)) FROM m2;

query T rowsort
SELECT ALL MIN(-1.281952729E9) FROM m4;
----
-1281952729.0

query T rowsort
SELECT MIN(agg0) FROM (SELECT MIN(-1.281952729E9)  as agg0 FROM m4 WHERE TRUE UNION ALL SELECT ALL MIN(-1.281952729E9)  as agg0 FROM m4 WHERE NOT (TRUE) UNION ALL SELECT ALL MIN(-1.281952729E9)  as agg0 FROM m4 WHERE (TRUE) IS NULL) as asdf;
----
-1281952729.0

# SELECT ALL m4.f0, m2.f0, m4.t1, m3.f1, m4.t0, m1.f0, m1.f1, m3.f0, m2.t0, m3.t0 FROM m2, m1 RIGHT OUTER JOIN m3 ON (CAST(0.09082757731100977 AS BOOLEAN)) IS FALSE FULL OUTER JOIN m4 ON (CAST(((m3.f0)/(m3.f0)) AS BIGINT)) NOT IN (0.6918298684696876, 0.6027515067202177);
query T rowsort
SELECT BIT_AND(- (-898117395)) FROM m1;
----
898117395

query T rowsort
SELECT ALL m2.f1, m2.f0 FROM m2;
----
"f1" false

query T rowsort
SELECT ALL m2.f1, m2.f0 FROM m2 WHERE m2.f0;
----

query T rowsort
SELECT ALL m2.f1, m2.f0 FROM m2 WHERE NOT (m2.f0);
----
"f1" false

query T rowsort
SELECT m2.f1, m2.f0 FROM m2 WHERE (m2.f0) IS NULL;
----

query T rowsort
SELECT m2.f1, m2.t0 FROM m2;
----
"f1" "t0"

query error Arrow error: Io error: Status \{ code: Internal, message: "Execute logical plan: Datafusion: Optimizer rule 'simplify_expressions' failed\\ncaused by\\nArrow error: Cast error: Cannot cast value '\-64411633' to value of Boolean type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m2.f1, m2.t0 FROM m2 WHERE (((((((((((((((m2.f1) BETWEEN (m2.f1) AND (m2.f1))AND(((FALSE)OR(m2.f0)))))OR(NOT (m2.f0))))OR(((m2.f1)IS NOT DISTINCT FROM(m2.t0)))))OR(CAST(-2044174412 AS BOOLEAN))))OR(NOT (FALSE))))>(NOT (((((((m2.f0)AND(m2.f0)))OR(m2.f0)))AND(m2.f0))))))<=(CAST(CAST(- (64411633) AS STRING) AS BOOLEAN)));

query T rowsort
SELECT ALL SUM(CAST(0.871191940974261 AS BIGINT)) FROM m0;
----
0

query T rowsort
SELECT ALL BOOL_AND(NOT ((- (-217143237)) NOT IN (-65550593, 111116366))) FROM m0;
----
false

query T rowsort
SELECT ALL BIT_OR(+ (CAST(0.49920816779304045 AS BIGINT))) FROM m4;
----
0

query T rowsort
SELECT BIT_OR(agg0) FROM (SELECT BIT_OR(+ (CAST(0.49920816779304045 AS BIGINT)))  as agg0 FROM m4 WHERE TRUE UNION ALL SELECT BIT_OR(+ (CAST(0.49920816779304045 AS BIGINT)))  as agg0 FROM m4 WHERE NOT (TRUE) UNION ALL SELECT ALL BIT_OR(+ (CAST(0.49920816779304045 AS BIGINT)))  as agg0 FROM m4 WHERE (TRUE) IS NULL) as asdf;
----
0

# SELECT m0.t0 FROM m0;
# (SELECT m0.t0 FROM m0 WHERE CAST(CAST(((CAST(m0.f0 AS STRING))||(0.9687889995913347)) AS BIGINT) AS BOOLEAN) ORDER BY m0.time) UNION ALL (SELECT m0.t0 FROM m0 WHERE NOT (CAST(CAST(((CAST(m0.f0 AS STRING))||(0.9687889995913347)) AS BIGINT) AS BOOLEAN)) ORDER BY m0.time) UNION ALL (SELECT m0.t0 FROM m0 WHERE (CAST(CAST(((CAST(m0.f0 AS STRING))||(0.9687889995913347)) AS BIGINT) AS BOOLEAN)) IS NULL ORDER BY time);
# SELECT m0.f0, m1.f1, m1.t0, m2.f1, m2.t0, m0.f1, m1.f0, m0.t0 FROM m0, m2 LEFT OUTER JOIN m1 ON ((0.418089098721357)>(0.7741785984124022));
# SELECT m0.f0, m1.f1, m1.t0, m2.f1, m2.t0, m0.f1, m1.f0, m0.t0 FROM m0, m2 LEFT OUTER JOIN m1 ON ((0.418089098721357)>(0.7741785984124022)) WHERE m0.f0;
# SELECT ALL m0.f0, m1.f1, m1.t0, m2.f1, m2.t0, m0.f1, m1.f0, m0.t0 FROM m0, m2 LEFT OUTER JOIN m1 ON ((0.418089098721357)>(0.7741785984124022)) WHERE NOT (m0.f0);
# SELECT ALL m0.f0, m1.f1, m1.t0, m2.f1, m2.t0, m0.f1, m1.f0, m0.t0 FROM m0, m2 LEFT OUTER JOIN m1 ON ((0.418089098721357)>(0.7741785984124022)) WHERE (m0.f0) IS NULL;
# SELECT m1.t0, m1.f1 FROM m1, m0 FULL OUTER JOIN m3 ON ((NOT (((((((m0.f0)AND(m1.f1)))AND(m1.f1)))!=((m0.f0) IN (TRUE, FALSE)))))=(CAST(((((m1.f0)||(m0.f1)))||(CAST(m3.f0 AS STRING))) AS BOOLEAN)));
# SELECT m1.f0, m2.t0, m2.f0, m2.f1, m1.f1 FROM m1 FULL OUTER JOIN m2 ON (CAST(CAST(m2.f0 AS BIGINT) AS STRING)) NOT IN ('e|m
# *-', 'w', 'd') ORDER BY m1.t0 DESC;
# SELECT SUM(0.21878772804329438) FROM m4 FULL OUTER JOIN m0 ON ((CAST(((CAST(TRUE AS STRING))LIKE(CAST(m4.f0 AS STRING))) AS STRING))LIKE(CAST(0.130769547798944 AS STRING)));
query T rowsort
SELECT ALL * FROM m4;
----
1970-01-01T00:00:00 "t0" "t1" "t2" 0

query T rowsort
SELECT ALL * FROM m4 WHERE (+ (CAST(CAST(TRUE AS BIGINT) AS BIGINT))) IS NULL UNION ALL SELECT ALL * FROM m4 WHERE NOT ((+ (CAST(CAST(TRUE AS BIGINT) AS BIGINT))) IS NULL) UNION ALL SELECT ALL * FROM m4 WHERE ((+ (CAST(CAST(TRUE AS BIGINT) AS BIGINT))) IS NULL) IS NULL;
----
1970-01-01T00:00:00 "t0" "t1" "t2" 0

query T rowsort
SELECT SUM(797300273) FROM m2;
----
797300273

# SELECT m1.t0 FROM m1;
# SELECT ALL m1.t0 FROM m1 WHERE (+ (((1425453881)+(492272238)))) IN (0.5344276994073869) UNION ALL SELECT ALL m1.t0 FROM m1 WHERE NOT ((+ (((1425453881)+(492272238)))) IN (0.5344276994073869)) UNION ALL SELECT m1.t0 FROM m1 WHERE ((+ (((1425453881)+(492272238)))) IN (0.5344276994073869)) IS NULL;
# SELECT m0.t0 FROM m0 LEFT OUTER JOIN (SELECT ALL TRUE FROM m2, m3, m0, m1, m4) AS sub0 ON (((((m0.t0)||(m0.f1)))||(+ (299102740)))) NOT IN (',UEp6,>', '4UM');
# SELECT m0.t0 FROM m0 LEFT OUTER JOIN (SELECT ALL TRUE FROM m2, m3, m0, m1, m4) AS sub0 ON (((((m0.t0)||(m0.f1)))||(+ (299102740)))) NOT IN (',UEp6,>', '4UM') WHERE (((((m0.t0)LIKE(m0.t0))) NOT IN (TRUE, FALSE))OR(TRUE)) UNION ALL SELECT m0.t0 FROM m0 LEFT OUTER JOIN (SELECT ALL TRUE FROM m2, m3, m0, m1, m4) AS sub0 ON (((((m0.t0)||(m0.f1)))||(+ (299102740)))) NOT IN (',UEp6,>', '4UM') WHERE NOT ((((((m0.t0)LIKE(m0.t0))) NOT IN (TRUE, FALSE))OR(TRUE))) UNION ALL SELECT ALL m0.t0 FROM m0 LEFT OUTER JOIN (SELECT ALL TRUE FROM m2, m3, m0, m1, m4) AS sub0 ON (((((m0.t0)||(m0.f1)))||(+ (299102740)))) NOT IN (',UEp6,>', '4UM') WHERE ((((((m0.t0)LIKE(m0.t0))) NOT IN (TRUE, FALSE))OR(TRUE))) IS NULL;
query T rowsort
SELECT ALL m3.f1, m3.f0, m3.t0, m3.t1 FROM m3 ORDER BY m3.t1 DESC;
----
false 0 "t0" "t1"

query T rowsort
SELECT ALL m3.f1, m3.f0, m3.t0, m3.t1 FROM m3 WHERE (CAST(m3.f0 AS BIGINT)) NOT IN (1272157913, -623262149);
----
false 0 "t0" "t1"

query T rowsort
SELECT m3.f1, m3.f0, m3.t0, m3.t1 FROM m3 WHERE NOT ((CAST(m3.f0 AS BIGINT)) NOT IN (1272157913, -623262149));
----

query T rowsort
SELECT ALL m3.f1, m3.f0, m3.t0, m3.t1 FROM m3 WHERE ((CAST(m3.f0 AS BIGINT)) NOT IN (1272157913, -623262149)) IS NULL;
----

# SELECT BIT_AND(- (CAST(CAST((m3.f0) BETWEEN (m4.f0) AND (m3.f0) AS BIGINT) AS BIGINT))) FROM m4, m3 CROSS JOIN m1 RIGHT OUTER JOIN m2 ON NOT ((0.24060157126454274) NOT IN (0.7334877160367836));
# SELECT m4.t0, m3.f0, m0.f1, m2.f0 FROM m0, m1, m3 INNER JOIN m4 ON NOT (((m3.t0)<(((CAST(m0.t0 AS STRING))||((m1.f1) IS FALSE))))) RIGHT OUTER JOIN m2 ON (((CAST(m1.f1 AS BIGINT))+(- (m3.f0)))) IN (441435329, 558939125);
query T rowsort
SELECT ALL m4.t1, m4.t0, m4.f0, m4.t2 FROM m4;
----
"t1" "t0" 0 "t2"

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: sql parser error: Expected \), found: NOTNULL", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m4.t1, m4.t0, m4.f0, m4.t2 FROM m4 WHERE NOT (NOT ((((((((m4.f0) NOTNULL)AND(CAST(TRUE AS BOOLEAN))))AND(NOT (FALSE))))OR(((TRUE)AND(TRUE)))))) UNION ALL SELECT ALL m4.t1, m4.t0, m4.f0, m4.t2 FROM m4 WHERE NOT (NOT (NOT ((((((((m4.f0) NOTNULL)AND(CAST(TRUE AS BOOLEAN))))AND(NOT (FALSE))))OR(((TRUE)AND(TRUE))))))) UNION ALL SELECT ALL m4.t1, m4.t0, m4.f0, m4.t2 FROM m4 WHERE (NOT (NOT ((((((((m4.f0) NOTNULL)AND(CAST(TRUE AS BOOLEAN))))AND(NOT (FALSE))))OR(((TRUE)AND(TRUE))))))) IS NULL;

query T rowsort
SELECT m4.f0, m4.t0, m4.t1 FROM m4;
----
0 "t0" "t1"

query T rowsort
SELECT m4.f0, m4.t0, m4.t1 FROM m4 WHERE ((m4.t2) NOT IN ('B', '?Rnco艷')) NOT IN (FALSE, FALSE, FALSE) UNION ALL SELECT m4.f0, m4.t0, m4.t1 FROM m4 WHERE NOT (((m4.t2) NOT IN ('B', '?Rnco艷')) NOT IN (FALSE, FALSE, FALSE)) UNION ALL SELECT ALL m4.f0, m4.t0, m4.t1 FROM m4 WHERE (((m4.t2) NOT IN ('B', '?Rnco艷')) NOT IN (FALSE, FALSE, FALSE)) IS NULL;
----
0 "t0" "t1"

# SELECT ALL * FROM m4, m2 RIGHT OUTER JOIN m0 ON NOT (m2.f0);
# SELECT ALL * FROM m4, m2 RIGHT OUTER JOIN m0 ON NOT (m2.f0) WHERE m2.f0 UNION ALL SELECT ALL * FROM m4, m2 RIGHT OUTER JOIN m0 ON NOT (m2.f0) WHERE NOT (m2.f0) UNION ALL SELECT * FROM m4, m2 RIGHT OUTER JOIN m0 ON NOT (m2.f0) WHERE (m2.f0) IS NULL;
query T rowsort
SELECT ALL m3.t1, m3.f1, m3.f0 FROM m3;
----
"t1" false 0

# SELECT ALL m3.t1, m3.f1, m3.f0 FROM m3 WHERE ((CAST(+ (((m3.f0)+(m3.f0))) AS STRING))>(CAST(CAST(m3.t0 AS BIGINT) AS STRING))) UNION ALL SELECT ALL m3.t1, m3.f1, m3.f0 FROM m3 WHERE NOT (((CAST(+ (((m3.f0)+(m3.f0))) AS STRING))>(CAST(CAST(m3.t0 AS BIGINT) AS STRING)))) UNION ALL SELECT m3.t1, m3.f1, m3.f0 FROM m3 WHERE (((CAST(+ (((m3.f0)+(m3.f0))) AS STRING))>(CAST(CAST(m3.t0 AS BIGINT) AS STRING)))) IS NULL;
# SELECT m1.f1, m1.t0, m0.f1, m0.f0, m0.t0, m4.t1, m1.f0, m4.t2 FROM m4, m0 CROSS JOIN m1;
# SELECT m1.f1, m1.t0, m0.f1, m0.f0, m0.t0, m4.t1, m1.f0, m4.t2 FROM m4, m0 CROSS JOIN m1 WHERE m1.f1 UNION ALL SELECT m1.f1, m1.t0, m0.f1, m0.f0, m0.t0, m4.t1, m1.f0, m4.t2 FROM m4, m0 CROSS JOIN m1 WHERE NOT (m1.f1) UNION ALL SELECT ALL m1.f1, m1.t0, m0.f1, m0.f0, m0.t0, m4.t1, m1.f0, m4.t2 FROM m4, m0 CROSS JOIN m1 WHERE (m1.f1) IS NULL;
query T rowsort
SELECT ALL m4.f0, m4.t0 FROM m4;
----
0 "t0"

query T rowsort
SELECT m4.f0, m4.t0 FROM m4 WHERE CAST(0.5303511540129969 AS BOOLEAN) UNION ALL SELECT m4.f0, m4.t0 FROM m4 WHERE NOT (CAST(0.5303511540129969 AS BOOLEAN)) UNION ALL SELECT m4.f0, m4.t0 FROM m4 WHERE (CAST(0.5303511540129969 AS BOOLEAN)) IS NULL;
----
0 "t0"

query T rowsort
SELECT ALL m0.t0, m0.f0 FROM m0;
----
"916053861" NULL
"NULL" NULL
"NULL" false
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"NULL" true
"t0" false

query T rowsort
SELECT ALL m0.t0, m0.f0 FROM m0 WHERE NOT (((CAST(CAST(-1873429940 AS BIGINT) AS STRING))LIKE(((CAST(m0.f0 AS STRING))||(((m0.t0)||(1860831107)))))));
----
"t0" false

# SELECT ALL BIT_AND(CAST(CAST(6.16562117E8 AS DOUBLE) AS BIGINT)) FROM m1, m2 RIGHT OUTER JOIN m0 ON ((NOT (m2.f0)) IS UNKNOWN) IN (FALSE, TRUE);
# SELECT m0.f0, m2.f1, m4.t0 FROM m4, m2 CROSS JOIN m0;
# SELECT ALL m0.f0, m2.f1, m4.t0 FROM m4, m2 CROSS JOIN m0 WHERE (NOT (((CAST(m4.t0 AS STRING))=(((m4.t2)||(-1591578788)))))) IS NOT UNKNOWN;
query T rowsort
SELECT m3.t0, m3.f0, m3.t1 FROM m3;
----
"t0" 0 "t1"

query T rowsort
SELECT m3.t0, m3.f0, m3.t1 FROM m3 WHERE TRUE UNION ALL SELECT ALL m3.t0, m3.f0, m3.t1 FROM m3 WHERE NOT (TRUE) UNION ALL SELECT m3.t0, m3.f0, m3.t1 FROM m3 WHERE (TRUE) IS NULL;
----
"t0" 0 "t1"

# SELECT MAX(0.24100860284524472) FROM m2, m0 RIGHT OUTER JOIN m4 ON ((CAST(CAST(1.876346506E9 AS BIGINT) AS STRING))LIKE(CAST(((((m4.f0)%(m4.f0)))/(+ (m4.f0))) AS STRING)));
query T rowsort
SELECT m1.t0, m1.f0 FROM m1;
----
"NULL" "NULL"
"t0" "f0"

query T rowsort
SELECT ALL m1.t0, m1.f0 FROM m1 WHERE CAST(CAST(+ (- (-410308362)) AS BIGINT) AS BOOLEAN);
----
"NULL" "NULL"
"t0" "f0"

# SELECT m2.f0, m3.t1, m0.f0, m2.t0, m0.f1, m3.f1, m3.f0 FROM m0, m3 LEFT OUTER JOIN m2 ON CAST(m3.f0 AS BOOLEAN);
query T rowsort
SELECT ALL m0.f0, m0.t0 FROM m0 ORDER BY m0.t0 DESC;
----
NULL "916053861"
NULL "NULL"
false "NULL"
false "t0"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"
true "NULL"

query error Arrow error: Io error: Status \{ code: Internal, message: "Build logical plan: Datafusion: Error during planning: Invalid function 'symmetric'\.\\nDid you mean 'btrim'\?", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m0.f0, m0.t0 FROM m0 WHERE (CAST(NOT (((m0.t0)LIKE(m0.t0))) AS BIGINT)) BETWEEN SYMMETRIC (0.6166842807970822) AND (- (CAST(CAST(m0.f1 AS BOOLEAN) AS BIGINT))) UNION ALL SELECT m0.f0, m0.t0 FROM m0 WHERE NOT ((CAST(NOT (((m0.t0)LIKE(m0.t0))) AS BIGINT)) BETWEEN SYMMETRIC (0.6166842807970822) AND (- (CAST(CAST(m0.f1 AS BOOLEAN) AS BIGINT)))) UNION ALL SELECT ALL m0.f0, m0.t0 FROM m0 WHERE ((CAST(NOT (((m0.t0)LIKE(m0.t0))) AS BIGINT)) BETWEEN SYMMETRIC (0.6166842807970822) AND (- (CAST(CAST(m0.f1 AS BOOLEAN) AS BIGINT)))) IS NULL;

query T rowsort
SELECT BOOL_OR(CAST(((1498176990)/(CAST(0.013198073302153945 AS BIGINT))) AS BOOLEAN)) FROM m0;
----
NULL

# SELECT MAX(CAST(+ (((CAST(m0.t0 AS BIGINT))+(((m3.f0)-(m3.f0))))) AS BIGINT)) FROM m4, m2, m0 FULL OUTER JOIN m3 ON ((CAST((m2.f0) BETWEEN SYMMETRIC (m3.f1) AND (m2.f0) AS STRING)) BETWEEN (CAST(CAST(m4.t2 AS STRING) AS STRING)) AND (((CAST(m1.f0 AS STRING))||(m2.t0)))) IS NOT UNKNOWN FULL OUTER JOIN m1 ON (m3.t0) IN ('K)_%', 'j/');
query T rowsort
SELECT ALL m1.f0 FROM m1 ORDER BY m1.f0 DESC;
----
"NULL"
"f0"

query error Arrow error: Io error: Status \{ code: Internal, message: "Execute logical plan: Datafusion: Optimizer rule 'simplify_expressions' failed\\ncaused by\\nArrow error: Cast error: Cannot cast value '0\.5590183968399077' to value of Boolean type", metadata: MetadataMap \{ headers: \{"content\-type": "application/grpc", "date": "[^"]+", "content\-length": "0"\} \}, source: None \}
SELECT ALL m1.f0 FROM m1 WHERE CAST(CAST(0.5590183968399077 AS STRING) AS BOOLEAN);

query T rowsort
SELECT ALL m4.t0, m4.t1, m4.f0, m4.t2 FROM m4;
----
"t0" "t1" 0 "t2"

query T rowsort
SELECT m4.t0, m4.t1, m4.f0, m4.t2 FROM m4 WHERE (TRUE) IS TRUE UNION ALL SELECT ALL m4.t0, m4.t1, m4.f0, m4.t2 FROM m4 WHERE NOT ((TRUE) IS TRUE) UNION ALL SELECT ALL m4.t0, m4.t1, m4.f0, m4.t2 FROM m4 WHERE ((TRUE) IS TRUE) IS NULL;
----
"t0" "t1" 0 "t2"

# SELECT ALL m2.f0, m1.t0, m1.f1, m1.f0 FROM m1 RIGHT OUTER JOIN m2 ON m1.f1;
# SELECT ALL m2.f0, m1.t0, m1.f1, m1.f0 FROM m1 RIGHT OUTER JOIN m2 ON m1.f1 WHERE CAST(((((CAST(0.7155590147680276 AS STRING))||(((677952378)*(493583500)))))LIKE(((CAST(9223372036854775807 AS STRING))||(CAST(m1.t0 AS BIGINT))))) AS BOOLEAN);
# SELECT m2.t0, m2.f0, m0.f0, m0.t0, m0.f1 FROM m0 RIGHT OUTER JOIN m2 ON NOT (m2.f0);
# SELECT ALL m2.t0, m2.f0, m0.f0, m0.t0, m0.f1 FROM m0 RIGHT OUTER JOIN m2 ON NOT (m2.f0) WHERE NOT (((- (+ (-654646247)))IS NOT DISTINCT FROM(0.5667232402166331)));
# SELECT m2.t0, m2.f0, m0.f0, m0.t0, m0.f1 FROM m0 RIGHT OUTER JOIN m2 ON NOT (m2.f0) WHERE NOT (NOT (((- (+ (-654646247)))IS NOT DISTINCT FROM(0.5667232402166331))));
# SELECT m2.t0, m2.f0, m0.f0, m0.t0, m0.f1 FROM m0 RIGHT OUTER JOIN m2 ON NOT (m2.f0) WHERE (NOT (((- (+ (-654646247)))IS NOT DISTINCT FROM(0.5667232402166331)))) IS NULL;
query T rowsort
SELECT ALL BOOL_AND((- (+ (m3.f0))) IN (-2034004639, -1209273618)) FROM m3;
----
false

# SELECT SUM(m3.f0) FROM m3 JOIN m2 ON m3.f1;
# SELECT m0.f1, m4.t0, m4.f0, m4.t1, m0.f0, m0.t0 FROM m0 FULL OUTER JOIN m4 ON ((((m4.f0)%(m4.f0))) IN (0.5722143074719054)) IS TRUE;
# SELECT ALL m4.t1, m4.t0, m4.t2, m0.f0, m0.f1 FROM m4 FULL OUTER JOIN m0 ON (CAST(- (CAST(m0.f0 AS BIGINT)) AS STRING)) BETWEEN (CAST(((CAST(m4.f0 AS BIGINT))=(((m4.f0)^(m4.f0)))) AS STRING)) AND (CAST(CAST(((m4.t2)||(m4.f0)) AS STRING) AS STRING));
query T rowsort
SELECT ALL * FROM m4 ORDER BY m4.t2 DESC;
----
1970-01-01T00:00:00 "t0" "t1" "t2" 0

query T rowsort
SELECT ALL * FROM m4 WHERE TRUE;
----
1970-01-01T00:00:00 "t0" "t1" "t2" 0

query T rowsort
SELECT * FROM m4 WHERE NOT (TRUE);
----

query T rowsort
SELECT ALL * FROM m4 WHERE (TRUE) IS NULL;
----

query T rowsort
SELECT ALL MIN(CAST(+ (((((-1020629854)-(94972736)))/(CAST(616702680 AS BIGINT)))) AS BOOLEAN)) FROM m2;
----
true

# SELECT m3.f1, m2.f1 FROM m2, m0 CROSS JOIN m3;
# SELECT ALL m3.f1, m2.f1 FROM m2, m0 CROSS JOIN m3 WHERE (((((m2.f1)||(m0.f1)))||(CAST(m3.f1 AS BOOLEAN)))) IN ('z');
# SELECT ALL m3.f1, m2.f1 FROM m2, m0 CROSS JOIN m3 WHERE NOT ((((((m2.f1)||(m0.f1)))||(CAST(m3.f1 AS BOOLEAN)))) IN ('z'));
# SELECT m3.f1, m2.f1 FROM m2, m0 CROSS JOIN m3 WHERE ((((((m2.f1)||(m0.f1)))||(CAST(m3.f1 AS BOOLEAN)))) IN ('z')) IS NULL;
query T rowsort
SELECT ALL m1.f1, m1.f0, m1.t0 FROM m1;
----
false "NULL" "NULL"
false "f0" "t0"

query T rowsort
SELECT ALL m1.f1, m1.f0, m1.t0 FROM m1 WHERE (((((NOT ((m1.f1) IS NOT UNKNOWN))AND(CAST(+ (1526963605) AS BOOLEAN))))AND((-1029718495) IN (326575169)))) IS TRUE;
----

query T rowsort
SELECT ALL m1.f1, m1.f0, m1.t0 FROM m1 WHERE NOT ((((((NOT ((m1.f1) IS NOT UNKNOWN))AND(CAST(+ (1526963605) AS BOOLEAN))))AND((-1029718495) IN (326575169)))) IS TRUE);
----
false "NULL" "NULL"
false "f0" "t0"

query T rowsort
SELECT ALL m1.f1, m1.f0, m1.t0 FROM m1 WHERE ((((((NOT ((m1.f1) IS NOT UNKNOWN))AND(CAST(+ (1526963605) AS BOOLEAN))))AND((-1029718495) IN (326575169)))) IS TRUE) IS NULL;
----

statement ok
drop table if exists air1;

statement ok
CREATE TABLE air1(visibility DOUBLE,temperature DOUBLE,pressure DOUBLE,TAGS(station));

statement ok
INSERT INTO air1 (TIME, station, visibility, temperature, pressure) VALUES
                ('2022-10-19 05:40:00', 'XiaoMaiDao', 55, 68, 76), 
                ('2022-10-19 04:40:00', 'XiaoMaiDao', 55, 68, 76),
                ('2022-10-19 05:41:00', 'XiaoMaiDao1', 55, 68, 76),
                ('2022-10-19 05:42:00', 'XiaoMaiDao1', 55, 68, 76),
                ('2022-10-19 05:43:00', 'XiaoMaiDao', 55, 68, 76);

query T
select count(*) as count from (select count(*) as c from air1);
----
1

query T rowsort
select count(*) from air1 group by station;
----
2
3

query T rowsort
select count(*) from air1 where station IS NOT NULL;
----
5

query T rowsort
select count(1,2,3) from air1 group by station;
----
2
3

query T rowsort
select count(*),count(1) from air1 group by station;
----
2 2
3 3
