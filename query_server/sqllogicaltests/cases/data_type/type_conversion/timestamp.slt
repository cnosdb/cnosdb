# normal
# test_timestamp_db.test(time i64, ta utf8, tb utf8, fa , fb)

statement ok
drop database if exists test_timestamp_db;

statement ok
create database test_timestamp_db;

statement ok
alter database test_timestamp_db set ttl '1000000d';

statement ok
--#DATABASE = test_timestamp_db

statement ok
--#LP_BEGIN
test_timestamp_conv,ta=a1,tb=b1 fa=1,fb=2 3
--#LP_END


statement ok
--#LP_BEGIN
test_timestamp_conv,ta=a1,tb=b1 fa=1,fb=2 1667456411000000000
--#LP_END


# binary
#-- int64 to timestamp
query TT
explain
select fa
from test_timestamp_conv
where time = 12345678865;
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time = TimestampNanosecond(12345678865, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly } }} })}) }, filter=Some(\"time@0 = 12345678865\"), split_num=1, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time = 1667456411000000000;
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time = TimestampNanosecond(1667456411000000000, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(1667456411000000000, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(1667456411000000000, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(1667456411000000000, None)), bound: Exactly } }} })}) }, filter=Some(\"time@0 = 1667456411000000000\"), split_num=1, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time <> 12345678865;
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--Filter: test_timestamp_conv.time != TimestampNanosecond(12345678865, None)
----TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time != TimestampNanosecond(12345678865, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--CoalesceBatchesExec: target_batch_size=8192
----FilterExec: time@0 != 12345678865
------RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=2
--------TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Below } }, Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Below } }} })}) }, filter=Some(\"time@0 != 12345678865\"), split_num=2, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time != 12345678865;
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--Filter: test_timestamp_conv.time != TimestampNanosecond(12345678865, None)
----TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time != TimestampNanosecond(12345678865, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--CoalesceBatchesExec: target_batch_size=8192
----FilterExec: time@0 != 12345678865
------RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=2
--------TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Below } }, Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Below } }} })}) }, filter=Some(\"time@0 != 12345678865\"), split_num=2, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time < 12345678865;
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time < TimestampNanosecond(12345678865, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Below } }} })}) }, filter=Some(\"time@0 < 12345678865\"), split_num=1, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time < 1667456412000000000;
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time < TimestampNanosecond(1667456412000000000, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(1667456412000000000, None)), bound: Below } }} })}) }, filter=Some(\"time@0 < 1667456412000000000\"), split_num=2, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time <= 12345678865;
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time <= TimestampNanosecond(12345678865, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly } }} })}) }, filter=Some(\"time@0 <= 12345678865\"), split_num=1, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time <= 1667456412000000000;
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time <= TimestampNanosecond(1667456412000000000, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(1667456412000000000, None)), bound: Exactly } }} })}) }, filter=Some(\"time@0 <= 1667456412000000000\"), split_num=2, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time > 12345678865;
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time > TimestampNanosecond(12345678865, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Below } }} })}) }, filter=Some(\"time@0 > 12345678865\"), split_num=2, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time >= 12345678865;
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time >= TimestampNanosecond(12345678865, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Below } }} })}) }, filter=Some(\"time@0 >= 12345678865\"), split_num=2, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time >= 12345678865;
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time >= TimestampNanosecond(12345678865, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Below } }} })}) }, filter=Some(\"time@0 >= 12345678865\"), split_num=2, projection=[time,fa]
"


#-- utf8 to timestamp
query TT
explain
select fa
from test_timestamp_conv
where time = '1997-01-31 09:26:56';
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time = TimestampNanosecond(854702816000000000, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--EmptyExec: produce_one_row=false
"


query TT
explain
select fa
from test_timestamp_conv
where time = '2022-11-03 14:20:11';
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time = TimestampNanosecond(1667485211000000000, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(1667485211000000000, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(1667485211000000000, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(1667485211000000000, None)), bound: Exactly } }} })}) }, filter=Some(\"time@0 = 1667485211000000000\"), split_num=1, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time <> '1997-01-31 09:26:56.123';
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--Filter: test_timestamp_conv.time != TimestampNanosecond(854702816123000000, None)
----TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time != TimestampNanosecond(854702816123000000, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--CoalesceBatchesExec: target_batch_size=8192
----FilterExec: time@0 != 854702816123000000
------RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=2
--------TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854702816123000000, None)), bound: Below } }, Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854702816123000000, None)), bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854702816123000000, None)), bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Below } }} })}) }, filter=Some(\"time@0 != 854702816123000000\"), split_num=2, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time != '1997-01-31T09:26:56.123';
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--Filter: test_timestamp_conv.time != TimestampNanosecond(854702816123000000, None)
----TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time != TimestampNanosecond(854702816123000000, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--CoalesceBatchesExec: target_batch_size=8192
----FilterExec: time@0 != 854702816123000000
------RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=2
--------TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854702816123000000, None)), bound: Below } }, Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854702816123000000, None)), bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854702816123000000, None)), bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Below } }} })}) }, filter=Some(\"time@0 != 854702816123000000\"), split_num=2, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time < '1997-01-31 09:26:56.123-05:00';
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time < TimestampNanosecond(854720816123000000, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854720816123000000, None)), bound: Below } }} })}) }, filter=Some(\"time@0 < 854720816123000000\"), split_num=1, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time < '2022-11-03T14:20:12.123-05:00';
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time < TimestampNanosecond(1667503212123000000, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(1667503212123000000, None)), bound: Below } }} })}) }, filter=Some(\"time@0 < 1667503212123000000\"), split_num=2, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time <= '1997-01-31T09:26:56.123-05:00';
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time <= TimestampNanosecond(854720816123000000, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854720816123000000, None)), bound: Exactly } }} })}) }, filter=Some(\"time@0 <= 854720816123000000\"), split_num=1, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time <= '2022-11-03T14:20:12.123-05:00';
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time <= TimestampNanosecond(1667503212123000000, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(1667503212123000000, None)), bound: Exactly } }} })}) }, filter=Some(\"time@0 <= 1667503212123000000\"), split_num=2, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time > '1997-01-31T09:26:56.123Z';
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time > TimestampNanosecond(854702816123000000, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854702816123000000, None)), bound: Above }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854702816123000000, None)), bound: Above }, high: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Below } }} })}) }, filter=Some(\"time@0 > 854702816123000000\"), split_num=1, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time >= '1997-01-31 09:26:56';
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time >= TimestampNanosecond(854702816000000000, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854702816000000000, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854702816000000000, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Below } }} })}) }, filter=Some(\"time@0 >= 854702816000000000\"), split_num=1, projection=[time,fa]
"


#-- error start
query TT
explain
select fa
from test_timestamp_conv
where time >= '1997-01-31';
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time >= TimestampNanosecond(854668800000000000, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854668800000000000, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(854668800000000000, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: None, bound: Below } }} })}) }, filter=Some(\"time@0 >= 854668800000000000\"), split_num=1, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time >= 'xxx';
----

#-- error end

# between and
#-- normal
query TT
explain
select fa
from test_timestamp_conv
where time between '1997-01-31 09:26:56' and '1997-03-31T09:26:56.123Z';
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time >= TimestampNanosecond(854702816000000000, None), test_timestamp_conv.time <= TimestampNanosecond(859800416123000000, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--EmptyExec: produce_one_row=false
"


query TT
explain
select fa
from test_timestamp_conv
where time between '2022-11-03 14:20:10' and '2022-11-03T14:20:12.123Z';
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time >= TimestampNanosecond(1667485210000000000, None), test_timestamp_conv.time <= TimestampNanosecond(1667485212123000000, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(1667485210000000000, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(1667485210000000000, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(1667485212123000000, None)), bound: Exactly } }} })}) }, filter=Some(\"time@0 >= 1667485210000000000 AND time@0 <= 1667485212123000000\"), split_num=1, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time between 12345678865 and 12345678869;
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time >= TimestampNanosecond(12345678865, None), test_timestamp_conv.time <= TimestampNanosecond(12345678869, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678869, None)), bound: Exactly } }} })}) }, filter=Some(\"time@0 >= 12345678865 AND time@0 <= 12345678869\"), split_num=1, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time between 1667456410000000000 and 1667456412000000000;
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time >= TimestampNanosecond(1667456410000000000, None), test_timestamp_conv.time <= TimestampNanosecond(1667456412000000000, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(1667456410000000000, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(1667456410000000000, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(1667456412000000000, None)), bound: Exactly } }} })}) }, filter=Some(\"time@0 >= 1667456410000000000 AND time@0 <= 1667456412000000000\"), split_num=1, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time between 12345678865 and '1997-03-31T09:26:56.123Z';
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time >= TimestampNanosecond(12345678865, None), test_timestamp_conv.time <= TimestampNanosecond(859800416123000000, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(859800416123000000, None)), bound: Exactly } }} })}) }, filter=Some(\"time@0 >= 12345678865 AND time@0 <= 859800416123000000\"), split_num=1, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time between 1667456410000000000 and '2022-11-03T14:20:12.123Z';
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time >= TimestampNanosecond(1667456410000000000, None), test_timestamp_conv.time <= TimestampNanosecond(1667485212123000000, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(1667456410000000000, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(1667456410000000000, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(1667485212123000000, None)), bound: Exactly } }} })}) }, filter=Some(\"time@0 >= 1667456410000000000 AND time@0 <= 1667485212123000000\"), split_num=1, projection=[time,fa]
"



#-- error start
query TT
explain
select fa
from test_timestamp_conv
where time between 12345678865 and '1997-03-31';
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--TableScan: test_timestamp_conv projection=[time, fa], full_filters=[test_timestamp_conv.time >= TimestampNanosecond(12345678865, None), test_timestamp_conv.time <= TimestampNanosecond(859766400000000000, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(859766400000000000, None)), bound: Exactly } }} })}) }, filter=Some(\"time@0 >= 12345678865 AND time@0 <= 859766400000000000\"), split_num=1, projection=[time,fa]
"


query TT
explain
select fa
from test_timestamp_conv
where time between 12345678865 and 'xxxxx';
----

#-- error end

# in list
query TT
explain
select fa
from test_timestamp_conv
where time in (12345678865, '1997-03-31T09:26:56.123Z');
----
"logical_plan"
"Projection: test_timestamp_conv.fa
--Filter: test_timestamp_conv.time = TimestampNanosecond(12345678865, None) OR test_timestamp_conv.time = TimestampNanosecond(859800416123000000, None)
----TableScan: test_timestamp_conv projection=[time, fa], partial_filters=[test_timestamp_conv.time = TimestampNanosecond(12345678865, None) OR test_timestamp_conv.time = TimestampNanosecond(859800416123000000, None)]"
"physical_plan"
"ProjectionExec: expr=[fa@1 as fa]
--CoalesceBatchesExec: target_batch_size=8192
----FilterExec: time@0 = 12345678865 OR time@0 = 859800416123000000
------RepartitionExec: partitioning=RoundRobinBatch(8), input_partitions=1
--------TskvExec: limit=None, predicate=ColumnDomains { column_to_domain: Some({Column { relation: None, name: \"time\" }: Range(RangeValueSet { low_indexed_ranges: {Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(12345678865, None)), bound: Exactly } }, Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(859800416123000000, None)), bound: Exactly }: Range { low: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(859800416123000000, None)), bound: Exactly }, high: Marker { data_type: Timestamp(Nanosecond, None), value: Some(TimestampNanosecond(859800416123000000, None)), bound: Exactly } }} })}) }, filter=Some(\"time@0 = 12345678865 OR time@0 = 859800416123000000\"), split_num=1, projection=[time,fa]
"


#-- error start
query TT
explain
select fa
from test_timestamp_conv
where time in (12345678865, 'xx');
----

#-- error end
